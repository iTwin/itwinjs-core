// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ThemedSelect /> renders array options correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={Array []}
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders default value correctly when options are provided  1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={
      Object {
        "label": "White",
        "value": 1,
      }
    }
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders defaultValue correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={
      Object {
        "label": "White",
        "value": 1,
      }
    }
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={Array []}
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders initial value correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
    value={
      Object {
        "label": "Red",
        "value": 0,
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders object options correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders placeholder correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={Array []}
    placeholder="test"
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders placeholder correctly when options are provided 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    placeholder="place-holder-text"
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders status correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={
      Object {
        "label": "Red",
        "value": 0,
      }
    }
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={Array []}
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders value correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={Array []}
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
    value={
      Object {
        "label": "White",
        "value": 1,
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders with fixed menu correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
    value={
      Object {
        "label": "Red",
        "value": 0,
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders with no options correctly 1`] = `
<div
  className="uicore-reactSelectTop"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
    value={
      Object {
        "label": "Red",
        "value": 0,
      }
    }
  />
</div>
`;

exports[`<ThemedSelect /> renders with no options correctly 2`] = `
<div
  className="uicore-reactSelectTop uicore-reactSelect.width100"
>
  <StateManager
    classNamePrefix="react-select"
    components={
      Object {
        "Menu": [Function],
      }
    }
    defaultInputValue=""
    defaultMenuIsOpen={false}
    defaultValue={null}
    menuPortalTarget={
      <div
        id="portal"
      />
    }
    noOptionsMessage={[Function]}
    options={
      Array [
        Object {
          "label": "Red",
          "value": 0,
        },
        Object {
          "label": "White",
          "value": 1,
        },
        Object {
          "label": "Blue",
          "value": 2,
        },
        Object {
          "label": "Yellow",
          "value": 3,
        },
      ]
    }
    styles={
      Object {
        "menuPortal": [Function],
      }
    }
    value={
      Object {
        "label": "Red",
        "value": 0,
      }
    }
  />
</div>
`;
