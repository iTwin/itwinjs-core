// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BeInspireTree pagination auto-expands children while parent pages are loaded 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "2",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "2-0",
    "level": 1,
  },
  Object {
    "id": "2-1",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "3",
    "level": 0,
  },
  Object {
    "id": "4",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination fires ChangesApplied event when child node is loaded for not rendered parent 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "level": 2,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination handles children disposal during page load 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination immediately loads first page for child nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination immediately loads first page for root nodes 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination loads additional pages after grandparent loads a page 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "level": 2,
  },
  Object {
    "id": "0-0-2",
    "level": 2,
  },
  Object {
    "id": "0-0-3",
    "level": 2,
  },
  Object {
    "id": "<not loaded>",
    "level": 2,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "<not loaded>",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "2",
    "level": 0,
  },
  Object {
    "id": "3",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination loads additional pages when child nodes are loaded arbitrarily 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "0-2",
    "level": 1,
  },
  Object {
    "id": "0-3",
    "level": 1,
  },
  Object {
    "id": "0-4",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination loads additional pages when child nodes are loaded sequentially 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "0-2",
    "level": 1,
  },
  Object {
    "id": "0-3",
    "level": 1,
  },
  Object {
    "id": "0-4",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
  Object {
    "id": "<not loaded>",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination loads additional pages when root nodes are loaded sequentially 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "2",
    "level": 0,
  },
  Object {
    "id": "3",
    "level": 0,
  },
  Object {
    "id": "4",
    "level": 0,
  },
]
`;

exports[`BeInspireTree pagination loads necessary pages when root nodes are loaded arbitrarily 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
  Object {
    "id": "2",
    "level": 0,
  },
  Object {
    "id": "3",
    "level": 0,
  },
  Object {
    "id": "4",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with interface data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesCheckboxes with promise sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesCheckboxes with result sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with promise sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeCheckboxes with result sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with interface data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with method data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesCheckboxes with promise sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesCheckboxes with result sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with promise sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeCheckboxes with result sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with method data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with promise data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesCheckboxes with promise sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesCheckboxes with result sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with promise sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeCheckboxes with result sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with promise data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes at different hierarchy levels 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes at different hierarchy levels with multiple nodes between 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes at the same hierarchy level 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with raw data provider selectBetween selects nodes in reverse order 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isExpanded": true,
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-0-0",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-0-1",
    "isSelected": true,
    "level": 2,
  },
  Object {
    "id": "0-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "0-1-0",
    "level": 2,
  },
  Object {
    "id": "0-1-1",
    "level": 2,
  },
  Object {
    "id": "1",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "1-0",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-0-0",
    "level": 2,
  },
  Object {
    "id": "1-0-1",
    "level": 2,
  },
  Object {
    "id": "1-1",
    "isExpanded": true,
    "level": 1,
  },
  Object {
    "id": "1-1-0",
    "level": 2,
  },
  Object {
    "id": "1-1-1",
    "level": 2,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesCheckboxes with promise sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesCheckboxes with result sets all node statuses to checked 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isChecked": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxDisabled": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isCheckboxVisible": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "level": 1,
  },
  Object {
    "id": "0-1",
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with ids doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with predicate doesn't deselect other nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateNodesSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isExpanded": true,
    "level": 0,
  },
  Object {
    "id": "0-0",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "0-1",
    "isSelected": true,
    "level": 1,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with promise sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with promise sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with promise sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with promise sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 1`] = `
Array [
  Object {
    "id": "0",
    "isChecked": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isChecked": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with result sets all node statuses to checked / unchecked 2`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with result sets all node statuses to disabled 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxDisabled": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxDisabled": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with result sets all node statuses to visible 1`] = `
Array [
  Object {
    "id": "0",
    "isCheckboxVisible": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isCheckboxVisible": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeCheckboxes with result sets node checkbox tooltips 1`] = `
Array [
  Object {
    "checkboxTooltip": "test",
    "id": "0",
    "level": 0,
  },
  Object {
    "checkboxTooltip": "test",
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection does nothing when \`nodesToSelect\` is undefined 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with ids deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with ids selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with predicate deselects nodes that don't match 1`] = `
Array [
  Object {
    "id": "0",
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;

exports[`BeInspireTree with raw data provider updateTreeSelection with predicate selects all nodes 1`] = `
Array [
  Object {
    "id": "0",
    "isSelected": true,
    "level": 0,
  },
  Object {
    "id": "1",
    "isSelected": true,
    "level": 0,
  },
]
`;
