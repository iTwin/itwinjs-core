// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BasicToolWidget BasicToolWidget should render correctly 1`] = `
<ToolWidgetComposer
  className="nz-hidden"
  cornerItem={
    <BackstageAppButton
      icon={undefined}
    />
  }
  horizontalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-selection-clear",
            "id": "UiFramework.ClearSelection",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 10,
            "label": "buttons.clearSelection",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-visibility",
            "id": "UiFramework.ClearHideIsolateEmphasize",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "selection-context-emphasize-elements-changed",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 20,
            "label": "tools.clearVisibility",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-asset-classification-hide",
            "id": "UiFramework.HideSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 30,
            "label": "tools.hideSelected",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-asset-isolate",
            "id": "UiFramework.IsolateSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 40,
            "label": "tools.isolateSelected",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-visibility-semi-transparent",
            "id": "UiFramework.EmphasizeSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 50,
            "label": "tools.emphasizeSelected",
          },
        ]
      }
      orientation={0}
      usage={0}
    />
  }
  verticalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-cursor",
            "id": "Select",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-measure",
            "id": "measureTools-group",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-measure-distance",
                "id": "Measure.Distance",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 10,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-measure-location",
                "id": "Measure.Location",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "",
              },
            ],
            "label": "tools.measureTools",
            "panelLabel": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-section-tool",
            "id": "sectionTools-group",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 30,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-plane",
                "id": "ViewClip.ByPlane",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 10,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-element",
                "id": "ViewClip.ByElement",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-range",
                "id": "ViewClip.ByRange",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 30,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-shape",
                "id": "ViewClip.ByShape",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 40,
                "label": "",
              },
            ],
            "label": "tools.sectionTools",
            "panelLabel": "",
          },
        ]
      }
      orientation={1}
      usage={0}
    />
  }
/>
`;

exports[`BasicToolWidget BasicToolWidget with bentley B should render 1`] = `
<ToolWidgetComposer
  className="nz-hidden"
  cornerItem={
    <BackstageAppButton
      icon="icon-bentley-systems"
    />
  }
  horizontalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-selection-clear",
            "id": "UiFramework.ClearSelection",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 10,
            "label": "buttons.clearSelection",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-visibility",
            "id": "UiFramework.ClearHideIsolateEmphasize",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "selection-context-emphasize-elements-changed",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 20,
            "label": "tools.clearVisibility",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-visibility-hide-2",
            "id": "UiFramework.HideSelectionGroup",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 30,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-asset-classification-hide",
                "id": "UiFramework.HideSelected",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": ConditionalBooleanValue {
                  "_value": undefined,
                  "syncEventIds": Array [
                    "selectionsetchanged",
                    "activecontentchanged",
                    "activeviewportchanged",
                    "sessionstate:set-num-items-selected",
                  ],
                  "testFunc": [Function],
                },
                "itemPriority": 10,
                "label": "tools.hideSelected",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-layers-hide",
                "id": "UiFramework.HideCategory",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "tools.hideCategories",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-model-hide",
                "id": "UiFramework.HideModel",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 30,
                "label": "tools.hideModels",
              },
            ],
            "label": "tools.hide",
            "panelLabel": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-isolate",
            "id": "UiFramework.IsolateSelectionGroup",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 40,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-asset-isolate",
                "id": "UiFramework.IsolateSelected",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": ConditionalBooleanValue {
                  "_value": undefined,
                  "syncEventIds": Array [
                    "selectionsetchanged",
                    "activecontentchanged",
                    "activeviewportchanged",
                    "sessionstate:set-num-items-selected",
                  ],
                  "testFunc": [Function],
                },
                "itemPriority": 10,
                "label": "tools.isolateSelected",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-layers-isolate",
                "id": "UiFramework.IsolateCategory",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "tools.isolateCategories",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-model-isolate",
                "id": "UiFramework.IsolateModel",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 30,
                "label": "tools.isolateModels",
              },
            ],
            "label": "tools.isolate",
            "panelLabel": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-visibility-semi-transparent",
            "id": "UiFramework.EmphasizeSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 50,
            "label": "tools.emphasizeSelected",
          },
        ]
      }
      orientation={0}
      usage={0}
    />
  }
  verticalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-cursor",
            "id": "Select",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-measure",
            "id": "measureTools-group",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-measure-distance",
                "id": "Measure.Distance",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 10,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-measure-location",
                "id": "Measure.Location",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "",
              },
            ],
            "label": "tools.measureTools",
            "panelLabel": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-section-tool",
            "id": "sectionTools-group",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 30,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-plane",
                "id": "ViewClip.ByPlane",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 10,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-element",
                "id": "ViewClip.ByElement",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-range",
                "id": "ViewClip.ByRange",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 30,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-shape",
                "id": "ViewClip.ByShape",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 40,
                "label": "",
              },
            ],
            "label": "tools.sectionTools",
            "panelLabel": "",
          },
        ]
      }
      orientation={1}
      usage={0}
    />
  }
/>
`;

exports[`BasicToolWidget BasicToolWidget with suffix and prefix items should render correctly 1`] = `
<ToolWidgetComposer
  className="nz-hidden"
  cornerItem={
    <BackstageAppButton
      icon={undefined}
    />
  }
  horizontalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-selection-clear",
            "id": "UiFramework.ClearSelection",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 10,
            "label": "buttons.clearSelection",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-visibility",
            "id": "UiFramework.ClearHideIsolateEmphasize",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "selection-context-emphasize-elements-changed",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 20,
            "label": "tools.clearVisibility",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-asset-classification-hide",
            "id": "UiFramework.HideSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 30,
            "label": "tools.hideSelected",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-asset-isolate",
            "id": "UiFramework.IsolateSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 40,
            "label": "tools.isolateSelected",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-visibility-semi-transparent",
            "id": "UiFramework.EmphasizeSelected",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "selectionsetchanged",
                "activecontentchanged",
                "activeviewportchanged",
                "sessionstate:set-num-items-selected",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 50,
            "label": "tools.emphasizeSelected",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-h1-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "test-h1-tool",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-h2-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "label": "test-h2-tool",
          },
        ]
      }
      orientation={0}
      usage={0}
    />
  }
  verticalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-cursor",
            "id": "Select",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-measure",
            "id": "measureTools-group",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-measure-distance",
                "id": "Measure.Distance",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 10,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-measure-location",
                "id": "Measure.Location",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "",
              },
            ],
            "label": "tools.measureTools",
            "panelLabel": "",
          },
          Object {
            "badgeType": undefined,
            "icon": "icon-section-tool",
            "id": "sectionTools-group",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 30,
            "items": Array [
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-plane",
                "id": "ViewClip.ByPlane",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 10,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-element",
                "id": "ViewClip.ByElement",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 20,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-range",
                "id": "ViewClip.ByRange",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 30,
                "label": "",
              },
              Object {
                "badgeType": undefined,
                "execute": [Function],
                "icon": "icon-section-shape",
                "id": "ViewClip.ByShape",
                "internalData": Map {},
                "isActive": false,
                "isDisabled": undefined,
                "isHidden": undefined,
                "itemPriority": 40,
                "label": "",
              },
            ],
            "label": "tools.sectionTools",
            "panelLabel": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-v1-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "test-v1-tool",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-v2-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "label": "test-v2-tool",
          },
        ]
      }
      orientation={1}
      usage={0}
    />
  }
/>
`;
