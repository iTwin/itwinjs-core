// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BasicNavigationWidget BasicNavigationWidget should render correctly 1`] = `
<NavigationWidgetComposer
  className="nz-hidden"
  horizontalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": ConditionalStringValue {
              "_value": undefined,
              "stringGetter": [Function],
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
            },
            "id": "View.Rotate",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-hand-2",
            "id": "View.Pan",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-fit-to-view",
            "id": "View.Fit",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 30,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-window-area",
            "id": "View.WindowArea",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 40,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-window-backward",
            "id": "View.Undo",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "isHidden": undefined,
            "itemPriority": 50,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-window-forward",
            "id": "View.Redo",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "isHidden": undefined,
            "itemPriority": 60,
            "label": "",
          },
        ]
      }
      orientation={0}
      usage={1}
    />
  }
  verticalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-walk",
            "id": "View.Walk",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": ConditionalStringValue {
              "_value": undefined,
              "stringGetter": [Function],
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
            },
            "id": "View.ToggleCamera",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 20,
            "label": "",
          },
        ]
      }
      orientation={1}
      usage={1}
    />
  }
/>
`;

exports[`BasicNavigationWidget BasicNavigationWidget with suffix and prefix items should render correctly 1`] = `
<NavigationWidgetComposer
  className="nz-hidden"
  horizontalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": ConditionalStringValue {
              "_value": undefined,
              "stringGetter": [Function],
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
            },
            "id": "View.Rotate",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-hand-2",
            "id": "View.Pan",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-fit-to-view",
            "id": "View.Fit",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 30,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-window-area",
            "id": "View.WindowArea",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 40,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-window-backward",
            "id": "View.Undo",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "isHidden": undefined,
            "itemPriority": 50,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-window-forward",
            "id": "View.Redo",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "isHidden": undefined,
            "itemPriority": 60,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-h1-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "test-h1-tool",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-h2-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "label": "test-h2-tool",
          },
        ]
      }
      orientation={0}
      usage={1}
    />
  }
  verticalToolbar={
    <ToolbarComposer
      items={
        Array [
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-walk",
            "id": "View.Walk",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 10,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": ConditionalStringValue {
              "_value": undefined,
              "stringGetter": [Function],
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
            },
            "id": "View.ToggleCamera",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": ConditionalBooleanValue {
              "_value": undefined,
              "syncEventIds": Array [
                "activecontentchanged",
                "activeviewportchanged",
                "viewstatechanged",
              ],
              "testFunc": [Function],
            },
            "itemPriority": 20,
            "label": "",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-v1-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 10,
            "label": "test-v1-tool",
          },
          Object {
            "badgeType": undefined,
            "execute": [Function],
            "icon": "icon-developer",
            "id": "test-v2-tool",
            "internalData": Map {},
            "isActive": false,
            "isDisabled": undefined,
            "isHidden": undefined,
            "itemPriority": 20,
            "label": "test-v2-tool",
          },
        ]
      }
      orientation={1}
      usage={1}
    />
  }
/>
`;
