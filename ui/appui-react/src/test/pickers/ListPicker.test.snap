// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ListPicker ListPickerBase should render correctly 1`] = `
<ExpandableItem
  hideIndicator={false}
  items={
    Array [
      Object {
        "enabled": true,
        "name": "123456789012345678901234567890",
        "type": 0,
      },
      Object {
        "enabled": false,
        "type": 1,
      },
      Object {
        "children": Array [
          Object {
            "enabled": true,
            "name": "123456789012345678901234567890",
            "type": 0,
          },
        ],
        "enabled": true,
        "type": 2,
      },
      Object {
        "children": Array [],
        "enabled": true,
        "type": 2,
      },
    ]
  }
  setEnabled={[Function]}
  title="Test"
>
  <div>
    <Item
      icon={
        <i
          className="icon icon-list"
        />
      }
      onClick={[Function]}
      title="Test"
    />
  </div>
</ExpandableItem>
`;

exports[`ListPicker ListPickerItem should render correctly 1`] = `
<div
  className="ListPicker-item"
  role="button"
  tabIndex={-1}
>
  <div
    className="label"
  />
</div>
`;

exports[`ListPicker v1 rendering should render correctly 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <FrameworkVersion>
    <ListPicker
      items={
        Array [
          Object {
            "enabled": true,
            "name": "123456789012345678901234567890",
            "type": 0,
          },
          Object {
            "enabled": false,
            "type": 1,
          },
          Object {
            "children": Array [
              Object {
                "enabled": true,
                "name": "123456789012345678901234567890",
                "type": 0,
              },
            ],
            "enabled": true,
            "type": 2,
          },
          Object {
            "children": Array [],
            "enabled": true,
            "type": 2,
          },
        ]
      }
      setEnabled={[Function]}
      title="Test"
    />
  </FrameworkVersion>
</ContextProvider>
`;

exports[`ListPicker v2 rendering should render correctly 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Object {
        "addNestedSub": [Function],
        "getListeners": [Function],
        "handleChangeWrapper": [Function],
        "isSubscribed": [Function],
        "notifyNestedSubs": [Function],
        "trySubscribe": [Function],
        "tryUnsubscribe": [Function],
      },
    }
  }
>
  <FrameworkVersion>
    <ContextProvider
      value={
        Object {
          "hasOverflow": false,
          "onResize": [Function],
          "useHeight": false,
        }
      }
    >
      <ListPicker
        items={
          Array [
            Object {
              "enabled": true,
              "name": "123456789012345678901234567890",
              "type": 0,
            },
            Object {
              "enabled": false,
              "type": 1,
            },
            Object {
              "children": Array [
                Object {
                  "enabled": true,
                  "name": "123456789012345678901234567890",
                  "type": 0,
                },
              ],
              "enabled": true,
              "type": 2,
            },
            Object {
              "children": Array [],
              "enabled": true,
              "type": 2,
            },
          ]
        }
        setEnabled={[Function]}
        title="Test"
      />
    </ContextProvider>
  </FrameworkVersion>
</ContextProvider>
`;
