// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hierarchies Counting instances of selected nodes correctly counts instances when key set contains grouping node keys 1`] = `
Array [
  Object {
    "description": "A container for persisting definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DefinitionModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "c9d74beb2e21023326e3036befdc1362",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Definition Model",
      "rawValue": "Definition Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container for repository-specific definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DictionaryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "012f743f00200395ef369cbb8d1ee610",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Dictionary Model",
      "rawValue": "Dictionary Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "Contains a list of document elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DocumentListModel",
      "groupedInstancesCount": 2,
      "pathFromRoot": Array [
        "bb41c30325ea9b70064610992a390f94",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Document List",
      "rawValue": "Document List",
      "typeName": "string",
    },
  },
  Object {
    "hasChildren": true,
    "key": Object {
      "className": "Generic:GroupModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "64f544884fb648cd16feb97fd562083a",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Group Model",
      "rawValue": "Group Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting link elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:LinkModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "30ec57ca9b6ccbf5be7095496806981d",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Link Model",
      "rawValue": "Link Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting physical elements that model physical space.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:PhysicalModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "e68d55129e4a653a1d23ba445eb369cd",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Physical Model",
      "rawValue": "Physical Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container of repository-related information elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:RepositoryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "7b659a37e17a4da5936494f7f2ebe3f8",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Repository Model",
      "rawValue": "Repository Model",
      "typeName": "string",
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets filtered node paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "049d0761fb6bf0bffa6a161a8e19bb7a",
              "df09d7650467c5704fbcf30291b5032b",
            ],
            "type": "nodeType",
            "version": 2,
          },
          "label": Object {
            "displayValue": "filter ch1",
            "rawValue": "filter ch1",
            "typeName": "string",
          },
        },
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 1,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "key": Object {
                "pathFromRoot": Array [
                  "049d0761fb6bf0bffa6a161a8e19bb7a",
                  "06f1e28d08a34b2bd3265d0189c5782c",
                  "0aad958227b8f327fe56485357f1fa8d",
                ],
                "type": "nodeType",
                "version": 2,
              },
              "label": Object {
                "displayValue": "filter ch4",
                "rawValue": "filter ch4",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 1,
          "matchesCount": 0,
        },
        "index": 1,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "pathFromRoot": Array [
              "049d0761fb6bf0bffa6a161a8e19bb7a",
              "06f1e28d08a34b2bd3265d0189c5782c",
            ],
            "type": "nodeType",
            "version": 2,
          },
          "label": Object {
            "displayValue": "other ch3",
            "rawValue": "other ch3",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 2,
      "matchesCount": 1,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "049d0761fb6bf0bffa6a161a8e19bb7a",
        ],
        "type": "nodeType",
        "version": 2,
      },
      "label": Object {
        "displayValue": "filter r1",
        "rawValue": "filter r1",
        "typeName": "string",
      },
    },
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "fd9aec7ae7c6f2b6bdf49e5f0cff5e54",
              "387655582c59afcd86ec1e0367536c7b",
            ],
            "type": "nodeType",
            "version": 2,
          },
          "label": Object {
            "displayValue": "filter ch6",
            "rawValue": "filter ch6",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 1,
      "matchesCount": 0,
    },
    "index": 1,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "fd9aec7ae7c6f2b6bdf49e5f0cff5e54",
        ],
        "type": "nodeType",
        "version": 2,
      },
      "label": Object {
        "displayValue": "other r3",
        "rawValue": "other r3",
        "typeName": "string",
      },
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets node paths based on instance key paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": false,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:DefinitionPartition",
                        "id": "0x10",
                      },
                    ],
                    "pathFromRoot": Array [
                      "c0717ae8ee7c89bcf87386ac51eb1b94",
                      "79d131b97b620ec196305e1c9f832035",
                      "bae951c69239e9a5f927a1578c2ea51d",
                      "6353eaa324a9bd3ce40812bb86657761",
                      "04d7273dde9e07ef177686c0d652ab24",
                    ],
                    "type": "ECInstancesNode",
                    "version": 2,
                  },
                  "label": Object {
                    "displayValue": "BisCore.DictionaryModel",
                    "rawValue": "BisCore.DictionaryModel",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "description": "A Definition Partition element indicates that there is a definition-related modeling perspective within the overall DgnDb information hierarchy. A Definition Partition is always parented to a Subject and broken down by a Definition Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:DefinitionPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "c0717ae8ee7c89bcf87386ac51eb1b94",
                  "79d131b97b620ec196305e1c9f832035",
                  "bae951c69239e9a5f927a1578c2ea51d",
                  "6353eaa324a9bd3ce40812bb86657761",
                ],
                "type": "ECClassGroupingNode",
                "version": 2,
              },
              "label": Object {
                "displayValue": "Definition Partition",
                "rawValue": "Definition Partition",
                "typeName": "string",
              },
            },
          },
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": true,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:LinkPartition",
                        "id": "0xe",
                      },
                    ],
                    "pathFromRoot": Array [
                      "c0717ae8ee7c89bcf87386ac51eb1b94",
                      "79d131b97b620ec196305e1c9f832035",
                      "bae951c69239e9a5f927a1578c2ea51d",
                      "2cff3053e2f25e55b4e8c7b4d0c4b9ac",
                      "bb827c51fc29a1b8ed101a82743c0562",
                    ],
                    "type": "ECInstancesNode",
                    "version": 2,
                  },
                  "label": Object {
                    "displayValue": "BisCore.RealityDataSources",
                    "rawValue": "BisCore.RealityDataSources",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 1,
            "isMarked": false,
            "node": Object {
              "description": "A Link Partition element indicates that there is a link-related modeling perspective within the overall DgnDb information hierarchy. A Link Partition is always parented to a Subject and broken down by a Link Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:LinkPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "c0717ae8ee7c89bcf87386ac51eb1b94",
                  "79d131b97b620ec196305e1c9f832035",
                  "bae951c69239e9a5f927a1578c2ea51d",
                  "2cff3053e2f25e55b4e8c7b4d0c4b9ac",
                ],
                "type": "ECClassGroupingNode",
                "version": 2,
              },
              "label": Object {
                "displayValue": "Link Partition",
                "rawValue": "Link Partition",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 0,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "instanceKeys": Array [
              Object {
                "className": "BisCore:Subject",
                "id": "0x1",
              },
            ],
            "pathFromRoot": Array [
              "c0717ae8ee7c89bcf87386ac51eb1b94",
              "79d131b97b620ec196305e1c9f832035",
              "bae951c69239e9a5f927a1578c2ea51d",
            ],
            "type": "ECInstancesNode",
            "version": 2,
          },
          "label": Object {
            "displayValue": "DgnV8Bridge",
            "rawValue": "DgnV8Bridge",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 0,
      "matchesCount": 0,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "instanceKeys": Array [
          Object {
            "className": "BisCore:RepositoryModel",
            "id": "0x1",
          },
        ],
        "pathFromRoot": Array [
          "c0717ae8ee7c89bcf87386ac51eb1b94",
          "79d131b97b620ec196305e1c9f832035",
        ],
        "type": "ECInstancesNode",
        "version": 2,
      },
      "label": Object {
        "displayValue": "Ñót spêçìfíêd",
        "rawValue": "@RulesEngine:LABEL_General_NotSpecified@",
        "typeName": "string",
      },
    },
  },
]
`;
