// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hierarchies Counting instances of selected nodes correctly counts instances when key set contains grouping node keys 1`] = `
Array [
  Object {
    "description": "A container for persisting definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DefinitionModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "2b22eaabdf7aad7ba30b0eaa444491c3",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Definition Model",
      "rawValue": "Definition Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container for repository-specific definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DictionaryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "f2ffd387b56ba5b51b7d187c8cd10d64",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Dictionary Model",
      "rawValue": "Dictionary Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "Contains a list of document elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DocumentListModel",
      "groupedInstancesCount": 2,
      "pathFromRoot": Array [
        "4e9d8ef1f416cf32bb0e673a77405a75",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Document List",
      "rawValue": "Document List",
      "typeName": "string",
    },
  },
  Object {
    "hasChildren": true,
    "key": Object {
      "className": "Generic:GroupModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "bac1938e5937396d5995e33a166843d2",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Group Model",
      "rawValue": "Group Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting link elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:LinkModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "35d7acbd93515858f6b07cf47bc1dc54",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Link Model",
      "rawValue": "Link Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting physical elements that model physical space.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:PhysicalModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "536fb19f05394e082424b304259aa511",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Physical Model",
      "rawValue": "Physical Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container of repository-related information elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:RepositoryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "fcfbfcc48c5d3b3949e7a056d6fb95e7",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Repository Model",
      "rawValue": "Repository Model",
      "typeName": "string",
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets filtered node paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "8aaa6ad3ca43d5a8f0efbe6d6c1a44eb",
              "f311dfef4c5ea495ef7ad9f8142a297d",
            ],
            "type": "nodeType11",
            "version": 2,
          },
          "label": Object {
            "displayValue": "filter ch1",
            "rawValue": "filter ch1",
            "typeName": "string",
          },
        },
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 1,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "key": Object {
                "pathFromRoot": Array [
                  "8aaa6ad3ca43d5a8f0efbe6d6c1a44eb",
                  "1840960bee8f9ffe2b2214722a7e36f5",
                  "ff569b1cf07f2eda7114084df402b1e1",
                ],
                "type": "nodeType131",
                "version": 2,
              },
              "label": Object {
                "displayValue": "filter ch4",
                "rawValue": "filter ch4",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 1,
          "matchesCount": 0,
        },
        "index": 1,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "pathFromRoot": Array [
              "8aaa6ad3ca43d5a8f0efbe6d6c1a44eb",
              "1840960bee8f9ffe2b2214722a7e36f5",
            ],
            "type": "nodeType13",
            "version": 2,
          },
          "label": Object {
            "displayValue": "other ch3",
            "rawValue": "other ch3",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 2,
      "matchesCount": 1,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "8aaa6ad3ca43d5a8f0efbe6d6c1a44eb",
        ],
        "type": "nodeType1",
        "version": 2,
      },
      "label": Object {
        "displayValue": "filter r1",
        "rawValue": "filter r1",
        "typeName": "string",
      },
    },
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "0b080d7ad6331f500b02cc7264f1d9e8",
              "4fe547d202499bac6d5fb0b38876540e",
            ],
            "type": "nodeType32",
            "version": 2,
          },
          "label": Object {
            "displayValue": "filter ch6",
            "rawValue": "filter ch6",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 1,
      "matchesCount": 0,
    },
    "index": 1,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "0b080d7ad6331f500b02cc7264f1d9e8",
        ],
        "type": "nodeType3",
        "version": 2,
      },
      "label": Object {
        "displayValue": "other r3",
        "rawValue": "other r3",
        "typeName": "string",
      },
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets node paths based on instance key paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": false,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:DefinitionPartition",
                        "id": "0x10",
                      },
                    ],
                    "pathFromRoot": Array [
                      "0724c83a8f4da39d6b6e9fa6f0249214",
                      "1a4d09db5bdc365efcdbbf97cf82444b",
                      "bae951c69239e9a5f927a1578c2ea51d",
                      "6353eaa324a9bd3ce40812bb86657761",
                      "04d7273dde9e07ef177686c0d652ab24",
                    ],
                    "type": "ECInstancesNode",
                    "version": 2,
                  },
                  "label": Object {
                    "displayValue": "BisCore.DictionaryModel",
                    "rawValue": "BisCore.DictionaryModel",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "description": "A Definition Partition element indicates that there is a definition-related modeling perspective within the overall DgnDb information hierarchy. A Definition Partition is always parented to a Subject and broken down by a Definition Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:DefinitionPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "0724c83a8f4da39d6b6e9fa6f0249214",
                  "1a4d09db5bdc365efcdbbf97cf82444b",
                  "bae951c69239e9a5f927a1578c2ea51d",
                  "6353eaa324a9bd3ce40812bb86657761",
                ],
                "type": "ECClassGroupingNode",
                "version": 2,
              },
              "label": Object {
                "displayValue": "Definition Partition",
                "rawValue": "Definition Partition",
                "typeName": "string",
              },
            },
          },
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": true,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:LinkPartition",
                        "id": "0xe",
                      },
                    ],
                    "pathFromRoot": Array [
                      "0724c83a8f4da39d6b6e9fa6f0249214",
                      "1a4d09db5bdc365efcdbbf97cf82444b",
                      "bae951c69239e9a5f927a1578c2ea51d",
                      "2cff3053e2f25e55b4e8c7b4d0c4b9ac",
                      "bb827c51fc29a1b8ed101a82743c0562",
                    ],
                    "type": "ECInstancesNode",
                    "version": 2,
                  },
                  "label": Object {
                    "displayValue": "BisCore.RealityDataSources",
                    "rawValue": "BisCore.RealityDataSources",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 1,
            "isMarked": false,
            "node": Object {
              "description": "A Link Partition element indicates that there is a link-related modeling perspective within the overall DgnDb information hierarchy. A Link Partition is always parented to a Subject and broken down by a Link Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:LinkPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "0724c83a8f4da39d6b6e9fa6f0249214",
                  "1a4d09db5bdc365efcdbbf97cf82444b",
                  "bae951c69239e9a5f927a1578c2ea51d",
                  "2cff3053e2f25e55b4e8c7b4d0c4b9ac",
                ],
                "type": "ECClassGroupingNode",
                "version": 2,
              },
              "label": Object {
                "displayValue": "Link Partition",
                "rawValue": "Link Partition",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 0,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "instanceKeys": Array [
              Object {
                "className": "BisCore:Subject",
                "id": "0x1",
              },
            ],
            "pathFromRoot": Array [
              "0724c83a8f4da39d6b6e9fa6f0249214",
              "1a4d09db5bdc365efcdbbf97cf82444b",
              "bae951c69239e9a5f927a1578c2ea51d",
            ],
            "type": "ECInstancesNode",
            "version": 2,
          },
          "label": Object {
            "displayValue": "DgnV8Bridge",
            "rawValue": "DgnV8Bridge",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 0,
      "matchesCount": 0,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "instanceKeys": Array [
          Object {
            "className": "BisCore:RepositoryModel",
            "id": "0x1",
          },
        ],
        "pathFromRoot": Array [
          "0724c83a8f4da39d6b6e9fa6f0249214",
          "1a4d09db5bdc365efcdbbf97cf82444b",
        ],
        "type": "ECInstancesNode",
        "version": 2,
      },
      "label": Object {
        "displayValue": "Ñót spêçìfíêd",
        "rawValue": "@RulesEngine:LABEL_General_NotSpecified@",
        "typeName": "string",
      },
    },
  },
]
`;
