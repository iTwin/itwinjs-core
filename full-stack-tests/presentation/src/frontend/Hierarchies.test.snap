// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hierarchies Counting instances of selected nodes correctly counts instances when key set contains grouping node keys 1`] = `
Array [
  Object {
    "description": "A container for persisting definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DefinitionModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "a8dbad9d22c13d3465f21a6984b6be64",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Definition Model",
      "rawValue": "Definition Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container for repository-specific definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DictionaryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "7d4eb31854f80f68f7625b8cbea3e40f",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Dictionary Model",
      "rawValue": "Dictionary Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "Contains a list of document elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DocumentListModel",
      "groupedInstancesCount": 2,
      "pathFromRoot": Array [
        "1aa7053afe2302c4eaffa83922f9d59f",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Document List",
      "rawValue": "Document List",
      "typeName": "string",
    },
  },
  Object {
    "hasChildren": true,
    "key": Object {
      "className": "Generic:GroupModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "e33d2112a3e07178d9efbf769573f8be",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Group Model",
      "rawValue": "Group Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting link elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:LinkModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "1119681c52822ffd6a1f8601205e2a2a",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Link Model",
      "rawValue": "Link Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting physical elements that model physical space.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:PhysicalModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "a82608be0b8bfa82c4b9423d7f876eb2",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Physical Model",
      "rawValue": "Physical Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container of repository-related information elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:RepositoryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "7dc99d24677f6a895da50f32cf269350",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "label": Object {
      "displayValue": "Repository Model",
      "rawValue": "Repository Model",
      "typeName": "string",
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets filtered node paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "e0ce69bf3a7e876118dd3ad912ad46ba",
              "ec84c730243e2c367dff59cdb61bdddb",
            ],
            "type": "nodeType",
            "version": 2,
          },
          "label": Object {
            "displayValue": "filter ch1",
            "rawValue": "filter ch1",
            "typeName": "string",
          },
        },
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 1,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "key": Object {
                "pathFromRoot": Array [
                  "e0ce69bf3a7e876118dd3ad912ad46ba",
                  "ffd5fe40c9c3f57d73542264108fe7d9",
                  "4b97386025133594fac2ccab86587d91",
                ],
                "type": "nodeType",
                "version": 2,
              },
              "label": Object {
                "displayValue": "filter ch4",
                "rawValue": "filter ch4",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 1,
          "matchesCount": 0,
        },
        "index": 1,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "pathFromRoot": Array [
              "e0ce69bf3a7e876118dd3ad912ad46ba",
              "ffd5fe40c9c3f57d73542264108fe7d9",
            ],
            "type": "nodeType",
            "version": 2,
          },
          "label": Object {
            "displayValue": "other ch3",
            "rawValue": "other ch3",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 2,
      "matchesCount": 1,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "e0ce69bf3a7e876118dd3ad912ad46ba",
        ],
        "type": "nodeType",
        "version": 2,
      },
      "label": Object {
        "displayValue": "filter r1",
        "rawValue": "filter r1",
        "typeName": "string",
      },
    },
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "74de560f4628f78b25c35faa508e4f5a",
              "8c65bcc75b70c794687f6f1ef9d4553c",
            ],
            "type": "nodeType",
            "version": 2,
          },
          "label": Object {
            "displayValue": "filter ch6",
            "rawValue": "filter ch6",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 1,
      "matchesCount": 0,
    },
    "index": 1,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "74de560f4628f78b25c35faa508e4f5a",
        ],
        "type": "nodeType",
        "version": 2,
      },
      "label": Object {
        "displayValue": "other r3",
        "rawValue": "other r3",
        "typeName": "string",
      },
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets node paths based on instance key paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": false,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:DefinitionPartition",
                        "id": "0x10",
                      },
                    ],
                    "pathFromRoot": Array [
                      "089253ec6cd37a71daa6e88be92c7401",
                      "c084d8a93804a14a0c4fa1fc02e44387",
                      "0b8f9e1436338049262069aee3f446f2",
                      "18858c3161d888b92a94f56c083673a4",
                      "6e035a0a16838664bc4a3c7b23f6f398",
                    ],
                    "type": "ECInstancesNode",
                    "version": 2,
                  },
                  "label": Object {
                    "displayValue": "BisCore.DictionaryModel",
                    "rawValue": "BisCore.DictionaryModel",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "description": "A Definition Partition element indicates that there is a definition-related modeling perspective within the overall DgnDb information hierarchy. A Definition Partition is always parented to a Subject and broken down by a Definition Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:DefinitionPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "089253ec6cd37a71daa6e88be92c7401",
                  "c084d8a93804a14a0c4fa1fc02e44387",
                  "0b8f9e1436338049262069aee3f446f2",
                  "18858c3161d888b92a94f56c083673a4",
                ],
                "type": "ECClassGroupingNode",
                "version": 2,
              },
              "label": Object {
                "displayValue": "Definition Partition",
                "rawValue": "Definition Partition",
                "typeName": "string",
              },
            },
          },
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": true,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:LinkPartition",
                        "id": "0xe",
                      },
                    ],
                    "pathFromRoot": Array [
                      "089253ec6cd37a71daa6e88be92c7401",
                      "c084d8a93804a14a0c4fa1fc02e44387",
                      "0b8f9e1436338049262069aee3f446f2",
                      "367d842b9f13c30379665b9841439911",
                      "7cfdcc0bcbfb88d5dafaf36ea7d0b8a7",
                    ],
                    "type": "ECInstancesNode",
                    "version": 2,
                  },
                  "label": Object {
                    "displayValue": "BisCore.RealityDataSources",
                    "rawValue": "BisCore.RealityDataSources",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 1,
            "isMarked": false,
            "node": Object {
              "description": "A Link Partition element indicates that there is a link-related modeling perspective within the overall DgnDb information hierarchy. A Link Partition is always parented to a Subject and broken down by a Link Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:LinkPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "089253ec6cd37a71daa6e88be92c7401",
                  "c084d8a93804a14a0c4fa1fc02e44387",
                  "0b8f9e1436338049262069aee3f446f2",
                  "367d842b9f13c30379665b9841439911",
                ],
                "type": "ECClassGroupingNode",
                "version": 2,
              },
              "label": Object {
                "displayValue": "Link Partition",
                "rawValue": "Link Partition",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 0,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "instanceKeys": Array [
              Object {
                "className": "BisCore:Subject",
                "id": "0x1",
              },
            ],
            "pathFromRoot": Array [
              "089253ec6cd37a71daa6e88be92c7401",
              "c084d8a93804a14a0c4fa1fc02e44387",
              "0b8f9e1436338049262069aee3f446f2",
            ],
            "type": "ECInstancesNode",
            "version": 2,
          },
          "label": Object {
            "displayValue": "DgnV8Bridge",
            "rawValue": "DgnV8Bridge",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 0,
      "matchesCount": 0,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "instanceKeys": Array [
          Object {
            "className": "BisCore:RepositoryModel",
            "id": "0x1",
          },
        ],
        "pathFromRoot": Array [
          "089253ec6cd37a71daa6e88be92c7401",
          "c084d8a93804a14a0c4fa1fc02e44387",
        ],
        "type": "ECInstancesNode",
        "version": 2,
      },
      "label": Object {
        "displayValue": "Ñót spêçìfíêd",
        "rawValue": "@RulesEngine:LABEL_General_NotSpecified@",
        "typeName": "string",
      },
    },
  },
]
`;
