// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Hierarchies Counting instances of selected nodes correctly counts instances when key set contains grouping node keys 1`] = `
Array [
  Object {
    "description": "A container for persisting definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DefinitionModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "3caa806de1fa4bc90290ae8a2755f4f3",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Definition Model",
      "rawValue": "Definition Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container for repository-specific definition elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DictionaryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "47ed3d544ba37474a5fb60f2bb704a36",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Dictionary Model",
      "rawValue": "Dictionary Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "Contains a list of document elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:DocumentListModel",
      "groupedInstancesCount": 2,
      "pathFromRoot": Array [
        "5b021c11ed10dfb94a20baae0c83078d",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Document List",
      "rawValue": "Document List",
      "typeName": "string",
    },
  },
  Object {
    "hasChildren": true,
    "key": Object {
      "className": "Generic:GroupModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "861364dae7f314673152c6240550c07b",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Group Model",
      "rawValue": "Group Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting link elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:LinkModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "95414daa04d0c393b6d4b72f36b7e70b",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Link Model",
      "rawValue": "Link Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "A container for persisting physical elements that model physical space.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:PhysicalModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "9997d2f214dabd14f4768e9036740f90",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Physical Model",
      "rawValue": "Physical Model",
      "typeName": "string",
    },
  },
  Object {
    "description": "The singleton container of repository-related information elements.",
    "hasChildren": true,
    "key": Object {
      "className": "BisCore:RepositoryModel",
      "groupedInstancesCount": 1,
      "pathFromRoot": Array [
        "16c68b49795998124caec606562d599a",
      ],
      "type": "ECClassGroupingNode",
    },
    "label": Object {
      "displayValue": "Repository Model",
      "rawValue": "Repository Model",
      "typeName": "string",
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets filtered node paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "a76c30bf3672b42f70bfaebfb5dd1760",
              "473ff8469bbb704b6f94e2699a7ccbe4",
            ],
            "type": "nodeType",
          },
          "label": Object {
            "displayValue": "filter ch1",
            "rawValue": "filter ch1",
            "typeName": "string",
          },
        },
      },
      Object {
        "children": Array [
          Object {
            "children": Array [],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 1,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "key": Object {
                "pathFromRoot": Array [
                  "a76c30bf3672b42f70bfaebfb5dd1760",
                  "71c97a238a6f2797a34701353ba1a394",
                  "16fe6e94e77e901b84d657fb41861853",
                ],
                "type": "nodeType",
              },
              "label": Object {
                "displayValue": "filter ch4",
                "rawValue": "filter ch4",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 1,
          "matchesCount": 0,
        },
        "index": 1,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "pathFromRoot": Array [
              "a76c30bf3672b42f70bfaebfb5dd1760",
              "71c97a238a6f2797a34701353ba1a394",
            ],
            "type": "nodeType",
          },
          "label": Object {
            "displayValue": "other ch3",
            "rawValue": "other ch3",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 2,
      "matchesCount": 1,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "a76c30bf3672b42f70bfaebfb5dd1760",
        ],
        "type": "nodeType",
      },
      "label": Object {
        "displayValue": "filter r1",
        "rawValue": "filter r1",
        "typeName": "string",
      },
    },
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 1,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "key": Object {
            "pathFromRoot": Array [
              "18ccf95564a4a5cfb07cb2cdb41f6512",
              "20e4a241495a1aadfc052e298473ef04",
            ],
            "type": "nodeType",
          },
          "label": Object {
            "displayValue": "filter ch6",
            "rawValue": "filter ch6",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 1,
      "matchesCount": 0,
    },
    "index": 1,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "pathFromRoot": Array [
          "18ccf95564a4a5cfb07cb2cdb41f6512",
        ],
        "type": "nodeType",
      },
      "label": Object {
        "displayValue": "other r3",
        "rawValue": "other r3",
        "typeName": "string",
      },
    },
  },
]
`;

exports[`Hierarchies Getting node paths gets node paths based on instance key paths 1`] = `
Array [
  Object {
    "children": Array [
      Object {
        "children": Array [
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": false,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:DefinitionPartition",
                        "id": "0x10",
                      },
                    ],
                    "pathFromRoot": Array [
                      "57d003546f2d1829437bb7c85233546e",
                      "95bc4d2a24733d1a5f0523d42663d94b",
                      "18131be4d8c127cfd80e75bb9127f7cb",
                      "3d62d48a550322607f26a8b1000cf4af",
                      "979b3ecb33fab7285f7d56b0160add99",
                    ],
                    "type": "ECInstancesNode",
                  },
                  "label": Object {
                    "displayValue": "BisCore.DictionaryModel",
                    "rawValue": "BisCore.DictionaryModel",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 0,
            "isMarked": false,
            "node": Object {
              "description": "A Definition Partition element indicates that there is a definition-related modeling perspective within the overall DgnDb information hierarchy. A Definition Partition is always parented to a Subject and broken down by a Definition Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:DefinitionPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "57d003546f2d1829437bb7c85233546e",
                  "95bc4d2a24733d1a5f0523d42663d94b",
                  "18131be4d8c127cfd80e75bb9127f7cb",
                  "3d62d48a550322607f26a8b1000cf4af",
                ],
                "type": "ECClassGroupingNode",
              },
              "label": Object {
                "displayValue": "Definition Partition",
                "rawValue": "Definition Partition",
                "typeName": "string",
              },
            },
          },
          Object {
            "children": Array [
              Object {
                "children": Array [],
                "filteringData": Object {
                  "childMatchesCount": 0,
                  "matchesCount": 0,
                },
                "index": 0,
                "isMarked": true,
                "node": Object {
                  "key": Object {
                    "instanceKeys": Array [
                      Object {
                        "className": "BisCore:LinkPartition",
                        "id": "0xe",
                      },
                    ],
                    "pathFromRoot": Array [
                      "57d003546f2d1829437bb7c85233546e",
                      "95bc4d2a24733d1a5f0523d42663d94b",
                      "18131be4d8c127cfd80e75bb9127f7cb",
                      "6de4c23615a524fb7fc4dc99574a59f5",
                      "e7ed4e6e4cbacc3b9a4eb3b05df8a732",
                    ],
                    "type": "ECInstancesNode",
                  },
                  "label": Object {
                    "displayValue": "BisCore.RealityDataSources",
                    "rawValue": "BisCore.RealityDataSources",
                    "typeName": "string",
                  },
                },
              },
            ],
            "filteringData": Object {
              "childMatchesCount": 0,
              "matchesCount": 0,
            },
            "index": 1,
            "isMarked": false,
            "node": Object {
              "description": "A Link Partition element indicates that there is a link-related modeling perspective within the overall DgnDb information hierarchy. A Link Partition is always parented to a Subject and broken down by a Link Model.",
              "hasChildren": true,
              "key": Object {
                "className": "BisCore:LinkPartition",
                "groupedInstancesCount": 1,
                "pathFromRoot": Array [
                  "57d003546f2d1829437bb7c85233546e",
                  "95bc4d2a24733d1a5f0523d42663d94b",
                  "18131be4d8c127cfd80e75bb9127f7cb",
                  "6de4c23615a524fb7fc4dc99574a59f5",
                ],
                "type": "ECClassGroupingNode",
              },
              "label": Object {
                "displayValue": "Link Partition",
                "rawValue": "Link Partition",
                "typeName": "string",
              },
            },
          },
        ],
        "filteringData": Object {
          "childMatchesCount": 0,
          "matchesCount": 0,
        },
        "index": 0,
        "isMarked": false,
        "node": Object {
          "hasChildren": true,
          "key": Object {
            "instanceKeys": Array [
              Object {
                "className": "BisCore:Subject",
                "id": "0x1",
              },
            ],
            "pathFromRoot": Array [
              "57d003546f2d1829437bb7c85233546e",
              "95bc4d2a24733d1a5f0523d42663d94b",
              "18131be4d8c127cfd80e75bb9127f7cb",
            ],
            "type": "ECInstancesNode",
          },
          "label": Object {
            "displayValue": "DgnV8Bridge",
            "rawValue": "DgnV8Bridge",
            "typeName": "string",
          },
        },
      },
    ],
    "filteringData": Object {
      "childMatchesCount": 0,
      "matchesCount": 0,
    },
    "index": 0,
    "isMarked": false,
    "node": Object {
      "hasChildren": true,
      "key": Object {
        "instanceKeys": Array [
          Object {
            "className": "BisCore:RepositoryModel",
            "id": "0x1",
          },
        ],
        "pathFromRoot": Array [
          "57d003546f2d1829437bb7c85233546e",
          "95bc4d2a24733d1a5f0523d42663d94b",
        ],
        "type": "ECInstancesNode",
      },
      "label": Object {
        "displayValue": "Ñót spêçìfíêd",
        "rawValue": "@RulesEngine:LABEL_General_NotSpecified@",
        "typeName": "string",
      },
    },
  },
]
`;
