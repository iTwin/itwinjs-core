// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TreeDataProvider returns child nodes 1`] = `
Array [
  Object {
    "__presentation-components/key": Object {
      "pathFromRoot": Array [
        "d40a267dc8ff557a9c69ad79d652e39f",
        "45a35284023f06495cb8802368089dd5",
      ],
      "type": "child",
      "version": 2,
    },
    "description": "child description",
    "icon": "child image id",
    "id": "45a35284023f06495cb8802368089dd5/d40a267dc8ff557a9c69ad79d652e39f",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "string",
      },
      "value": Object {
        "displayValue": "child label",
        "value": "child label",
        "valueFormat": 0,
      },
    },
    "parentId": "d40a267dc8ff557a9c69ad79d652e39f",
  },
]
`;

exports[`TreeDataProvider returns child nodes with paging 1`] = `
Array [
  Object {
    "__presentation-components/key": Object {
      "pathFromRoot": Array [
        "d40a267dc8ff557a9c69ad79d652e39f",
        "45a35284023f06495cb8802368089dd5",
      ],
      "type": "child",
      "version": 2,
    },
    "description": "child description",
    "icon": "child image id",
    "id": "45a35284023f06495cb8802368089dd5/d40a267dc8ff557a9c69ad79d652e39f",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "string",
      },
      "value": Object {
        "displayValue": "child label",
        "value": "child label",
        "valueFormat": 0,
      },
    },
    "parentId": "d40a267dc8ff557a9c69ad79d652e39f",
  },
]
`;

exports[`TreeDataProvider returns root nodes 1`] = `
Array [
  Object {
    "__presentation-components/key": Object {
      "pathFromRoot": Array [
        "d40a267dc8ff557a9c69ad79d652e39f",
      ],
      "type": "root",
      "version": 2,
    },
    "checkBoxState": 1,
    "description": "root description",
    "hasChildren": true,
    "icon": "root image id",
    "id": "d40a267dc8ff557a9c69ad79d652e39f",
    "isCheckboxDisabled": true,
    "isCheckboxVisible": true,
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "string",
      },
      "value": Object {
        "displayValue": "root label",
        "value": "root label",
        "valueFormat": 0,
      },
    },
    "style": Object {
      "colorOverrides": Object {
        "backgroundColor": 32768,
        "color": 16711680,
      },
      "isBold": true,
      "isItalic": true,
    },
  },
]
`;

exports[`TreeDataProvider returns root nodes with paging 1`] = `
Array [
  Object {
    "__presentation-components/key": Object {
      "pathFromRoot": Array [
        "d40a267dc8ff557a9c69ad79d652e39f",
      ],
      "type": "root",
      "version": 2,
    },
    "checkBoxState": 1,
    "description": "root description",
    "hasChildren": true,
    "icon": "root image id",
    "id": "d40a267dc8ff557a9c69ad79d652e39f",
    "isCheckboxDisabled": true,
    "isCheckboxVisible": true,
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "string",
      },
      "value": Object {
        "displayValue": "root label",
        "value": "root label",
        "valueFormat": 0,
      },
    },
    "style": Object {
      "colorOverrides": Object {
        "backgroundColor": 32768,
        "color": 16711680,
      },
      "isBold": true,
      "isItalic": true,
    },
  },
]
`;

exports[`TreeDataProvider shows grouping node children counts 1`] = `
Array [
  Object {
    "__presentation-components/key": Object {
      "className": "BisCore:DefinitionModel",
      "groupedInstancesCount": 1,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY BisCore:DefinitionModel))",
      },
      "pathFromRoot": Array [
        "80c7ed6b188503c857ac50041bf4b6d0",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "description": "A container for persisting definition elements.",
    "hasChildren": true,
    "id": "80c7ed6b188503c857ac50041bf4b6d0",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Definition Model (1)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Definition Model",
              "rawValue": "Definition Model",
              "typeName": "string",
            },
            Object {
              "displayValue": "(1)",
              "rawValue": "(1)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
  Object {
    "__presentation-components/key": Object {
      "className": "BisCore:DictionaryModel",
      "groupedInstancesCount": 1,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY BisCore:DictionaryModel))",
      },
      "pathFromRoot": Array [
        "20780ee9a09d76aeba732a9a1e483a49",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "description": "The singleton container for repository-specific definition elements.",
    "hasChildren": true,
    "id": "20780ee9a09d76aeba732a9a1e483a49",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Dictionary Model (1)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Dictionary Model",
              "rawValue": "Dictionary Model",
              "typeName": "string",
            },
            Object {
              "displayValue": "(1)",
              "rawValue": "(1)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
  Object {
    "__presentation-components/key": Object {
      "className": "BisCore:DocumentListModel",
      "groupedInstancesCount": 2,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY BisCore:DocumentListModel))",
      },
      "pathFromRoot": Array [
        "b3334e28acbad8431c46ca61e7f8e5e3",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "description": "Contains a list of document elements.",
    "hasChildren": true,
    "id": "b3334e28acbad8431c46ca61e7f8e5e3",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Document List (2)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Document List",
              "rawValue": "Document List",
              "typeName": "string",
            },
            Object {
              "displayValue": "(2)",
              "rawValue": "(2)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
  Object {
    "__presentation-components/key": Object {
      "className": "Generic:GroupModel",
      "groupedInstancesCount": 1,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY Generic:GroupModel))",
      },
      "pathFromRoot": Array [
        "b35e9d24b15bc9912c6abb46cb27ca7f",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "hasChildren": true,
    "id": "b35e9d24b15bc9912c6abb46cb27ca7f",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Group Model (1)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Group Model",
              "rawValue": "Group Model",
              "typeName": "string",
            },
            Object {
              "displayValue": "(1)",
              "rawValue": "(1)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
  Object {
    "__presentation-components/key": Object {
      "className": "BisCore:LinkModel",
      "groupedInstancesCount": 1,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY BisCore:LinkModel))",
      },
      "pathFromRoot": Array [
        "7f40f83df83799f79d13cfb7446d677f",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "description": "A container for persisting link elements.",
    "hasChildren": true,
    "id": "7f40f83df83799f79d13cfb7446d677f",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Link Model (1)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Link Model",
              "rawValue": "Link Model",
              "typeName": "string",
            },
            Object {
              "displayValue": "(1)",
              "rawValue": "(1)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
  Object {
    "__presentation-components/key": Object {
      "className": "BisCore:PhysicalModel",
      "groupedInstancesCount": 1,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY BisCore:PhysicalModel))",
      },
      "pathFromRoot": Array [
        "685c4d0e7d0c2f8d0b6279cfb4a5f03a",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "description": "A container for persisting physical elements that model physical space.",
    "hasChildren": true,
    "id": "685c4d0e7d0c2f8d0b6279cfb4a5f03a",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Physical Model (1)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Physical Model",
              "rawValue": "Physical Model",
              "typeName": "string",
            },
            Object {
              "displayValue": "(1)",
              "rawValue": "(1)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
  Object {
    "__presentation-components/key": Object {
      "className": "BisCore:RepositoryModel",
      "groupedInstancesCount": 1,
      "instanceKeysSelectQuery": Object {
        "bindings": Array [],
        "query": "SELECT * FROM (SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM (SELECT * FROM [bis].[Model] [this] WHERE ([this].[ECClassId] IS NOT ([bis].[RepositoryModel]))) [this] UNION ALL SELECT [this].[ECClassId] AS [ECClassId], [this].[ECInstanceId] AS [ECInstanceId] FROM [bis].[RepositoryModel] [this]) WHERE (ECClassId IS (ONLY BisCore:RepositoryModel))",
      },
      "pathFromRoot": Array [
        "72283c5c8ebd68e345d166c40f0b5101",
      ],
      "type": "ECClassGroupingNode",
      "version": 2,
    },
    "description": "The singleton container of repository-related information elements.",
    "hasChildren": true,
    "id": "72283c5c8ebd68e345d166c40f0b5101",
    "label": PropertyRecord {
      "property": Object {
        "displayLabel": "Label",
        "name": "node_label",
        "typename": "composite",
      },
      "value": Object {
        "displayValue": "Repository Model (1)",
        "value": Object {
          "parts": Array [
            Object {
              "displayValue": "Repository Model",
              "rawValue": "Repository Model",
              "typeName": "string",
            },
            Object {
              "displayValue": "(1)",
              "rawValue": "(1)",
              "typeName": "string",
            },
          ],
          "separator": " ",
        },
        "valueFormat": 0,
      },
    },
  },
]
`;
