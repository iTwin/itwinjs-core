# All of the configuration variables needed to run the tests are defined and explained here.
#
# Only updating the values in this file will not work when attempting to run the tests.
# Make a copy of this file and rename it to ".env" and that file will automatically be
# picked up by the tests.
#
# WARNING:  Never commit the copied .env file as it will contain passwords or other secrets.

# REQUIRED: Setup the users

## The user has to be a valid IMS user with access to both the Project and iModel specified
## by the "IMODEL_" param
USER_WITH_ACCESS_USERNAME=
USER_WITH_ACCESS_PASSWORD=
USER_WITHOUT_ACCESS_USERNAME=
USER_WITHOUT_ACCESS_PASSWORD=

# REQUIRED: Setup needed for CONNECT environment
## Sets both the environment the tests will be run in and where the iModel(s) are that the tests will run on.
ENVIRONMENT=0

# REQUIRED: OIDC Client Information
## One can be created by going to https://imodeljs.org/getting-started/registration-dashboard/
OIDC_CLIENT_ID=
# The scopes must be a space separated list of scopes, i.e. "openid imodelhub context-registry-service imodeljs-router".
OIDC_SCOPES=

# REQUIRED: iModel Information - Only the Name or Id is required for Project and iModel
IMODEL_PROJECTID=
IMODEL_PROJECTNAME=
IMODEL_IMODELID=
IMODEL_IMODELNAME=
IMODEL_CHANGESETID=

## iModel used for the iModel Write operations.  If the 'RPC_IMODELWRITE_ENABLE' is set to true, this property is required.
IMODEL_WRITE_PROJECTID=
IMODEL_WRITE_PROJECTNAME=
IMODEL_WRITE_IMODELID=
IMODEL_WRITE_IMODELNAME=

# REQUIRED: Backend setup
BACKEND_VERSION=v1.0
BACKEND_NAME=full-stack-test

## Sets up the tests to run against a deployed backend.
## Note:  To run this against a local backend, set this `localhost` and it will run against it.
BACKEND_LOCATION=

GPRID=

# Optionally specify a logging level. The options are:
#   - 0 - Tracing and debugging - low level
#   - 1 - Information - mid level
#   - 2 - Warnings - high level
#   - 3 - Errors - highest level
#   - 4 - None - Higher than any real logging level. This is used to turn a category off.
LOG_LEVEL=0

# Set which RPC Interface tests should run.
RPC_IMODELREAD_ENABLE=true
RPC_IMODELWRITE_ENABLE=true
RPC_IMODELTILE_ENABLE=true
RPC_DEVTOOLS_ENABLE=true
RPC_PRESENTATION_ENABLE=true

# iModel.js variables set
## Each of these are prepended with "IMJS" so they are added to `App.Config`.
IMJS_BUDDI_URL=https://buddi.bentley.com/WebService
IMJS_DEFAULT_RELYING_PARTY_URI=https://connect-wsg20.bentley.com
