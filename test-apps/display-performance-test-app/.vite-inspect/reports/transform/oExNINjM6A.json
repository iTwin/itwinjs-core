{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/orbitgt/lib/esm/spatial/ecrs/OnlineRegistry.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module OrbitGT\n */\nimport { Downloader } from \"../../system/runtime/Downloader\";\nimport { Message } from \"../../system/runtime/Message\";\nimport { Strings } from \"../../system/runtime/Strings\";\nimport { Registry } from \"./Registry\";\nimport { WellKnownText } from \"./WellKnownText\";\n/**\n * Class OnlineRegistry downloads the CRS definitions from an online server.\n *\n * @version 1.0 March 2020\n */\n/** @internal */\nclass OnlineRegistry {\n    /**\n     * Open the OrbitGT online registry, see https://spatialreference.org/.\n     * @return the registry.\n     */\n    static openOrbitGT() {\n        return new OnlineRegistry(\"https://ogtcrsregistry.blob.core.windows.net/registry/crs/[epsgCode].prj\", WellKnownText.TYPE_GENERIC);\n    }\n    /**\n     * Create a new online registry.\n     * @param urlTemplate the template URL in which [epsgCode] will be replaced by the EPSG CRS code.\n     * @param dialect the dialect of WKT to parse.\n     */\n    constructor(urlTemplate, dialect) {\n        this._urlTemplate = urlTemplate;\n        this._dialect = dialect;\n    }\n    /**\n     * Get a CRS.\n     * @param epsgCode the EPSG code of the CRS to get.\n     * @return the CRS.\n     */\n    async getCRS(epsgCode) {\n        /* Invalid code? */\n        if (epsgCode == 0)\n            return null;\n        /* Already downloaded? */\n        let crs = Registry.getCRS(epsgCode);\n        if (crs != null)\n            return crs;\n        /* Download the declaration */\n        Message.print(OnlineRegistry.MODULE, \"Requesting online crs '\" + epsgCode + \"'\");\n        let downloadURL = Strings.replace(this._urlTemplate, \"[epsgCode]\", \"\" + epsgCode);\n        let wkt = await Downloader.INSTANCE.downloadText2(downloadURL);\n        if (wkt == null) {\n            Message.print(OnlineRegistry.MODULE, \"No WKT response\");\n            return null;\n        }\n        /* Try to parse the WKT */\n        crs = WellKnownText.parseSpatialReferenceSystem(epsgCode, wkt, this._dialect);\n        if (crs == null) {\n            Message.print(OnlineRegistry.MODULE, \"The WKT could not be parsed\");\n            return null;\n        }\n        crs.setTextForm(wkt);\n        /* Keep in memory */\n        Message.print(OnlineRegistry.MODULE, \"Created online CRS \" + crs);\n        Registry.setCRS(epsgCode, crs);\n        /* Return */\n        return crs;\n    }\n}\n/** The name of this module */\nOnlineRegistry.MODULE = \"OnlineRegistry\";\nexport { OnlineRegistry };\n//# sourceMappingURL=OnlineRegistry.js.map",
      "start": 1693508125362,
      "end": 1693508125412,
      "sourcemaps": null
    }
  ]
}
