{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/GeoCoordinateServices.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module iModels\n */\n// cspell:ignore NGVD, NAVD, COMPD_CS, PROJCS, GEOGCS\nimport { GeoServiceStatus } from \"@itwin/core-bentley\";\n/** This enumeration lists all possible status as returned from a coordinate conversion to or from a\n * [[GeographicCRS]] and either another [[GeographicCRS]] or a [[GeodeticDatum]].\n * @see [[GeoConverter]] to perform coordinate conversions.\n * @see [[PointWithStatus]] for the result of a coordinate conversion, including its status code.\n * @public\n * @extensions\n */\nexport var GeoCoordStatus;\n(function (GeoCoordStatus) {\n    /** Indicates successful coordinate conversion. */\n    GeoCoordStatus[GeoCoordStatus[\"Success\"] = 0] = \"Success\";\n    /** Indicates that the source or target of the conversion is not defined, usually the iModel Geographic Coordinate Reference System.*/\n    GeoCoordStatus[GeoCoordStatus[\"NoGCSDefined\"] = 100] = \"NoGCSDefined\";\n    /** This value indicates that the conversion was performed outside of the normal use of application of either Geographic Coordinate Reference Systems.\n     *  This return value can often be treated as a warning in specific cases. For example, global imagery extent spans the whole globe and\n     *  may extend far beyond the normal area of the iModel project extents and the extent of normal use of its Geographic Coordinate Reference System.\n     *  In such cases this value can be considered a warning as accuracy and precision is not expected in this specific case and approximate localization\n     *  of global imagery or other low accuracy context data is not essential far from the project.\n     *  If this status is returned for high accuracy data then it indicates that either Geographic Coordinate Reference Systems were inappropriately selected\n     *  for the iModel or other geolocated data. If this is the case the status should be somehow reported so action\n     *  can be performed to verify used geolocation parameters.\n     *  In either case the returned coordinates are to be considered valid though they may be inaccurate or result in some unexpected distortion of graphical\n     *  elements.\n     */\n    GeoCoordStatus[GeoCoordStatus[\"OutOfUsefulRange\"] = 1] = \"OutOfUsefulRange\";\n    /** Indicates a hard error where conversions were requested outside of the area of the mathematical capacity of the conversion process for either\n     *  Geographic Coordinate Reference Systems involved. An example could be to attempt a conversion involving a Transverse Mercator more than 60 degrees\n     *  East or West of the projection central meridian.\n     *  The values returned may or may not be valid and should be discarded.\n     */\n    GeoCoordStatus[GeoCoordStatus[\"OutOfMathematicalDomain\"] = 2] = \"OutOfMathematicalDomain\";\n    /** Indicates that datum transformation between the two Geographic Coordinate Reference Systems could not be performed.\n     *  This error is usually the result of a datum transformation path requiring use of latitude/longitude grid shift files that could not be obtained\n     *  or installed. In this case the latitude/longitude transformation is bypassed but the remainder of the conversion process is completed.\n     *  This error can be ignored for low accuracy data but should be somehow reported so actions can be performed to provide the missing files.\n     */\n    GeoCoordStatus[GeoCoordStatus[\"NoDatumConverter\"] = 25] = \"NoDatumConverter\";\n    /** Indicates that a problem occurred during vertical datum conversion. This may the result of the inability to access the\n     *  Geoid separation data or vertical datum differential data (such as used by NGVD29 to NAVD88 conversion).\n     *  The horizontal coordinates returned are valid but the elevation ordinate will be returned unchanged or partially changed.\n     *  This status should be somehow reported so actions can be performed to provide the missing information.\n     */\n    GeoCoordStatus[GeoCoordStatus[\"VerticalDatumConvertError\"] = 26] = \"VerticalDatumConvertError\";\n    /** General inner conversion engine error. Coordinates returned are invalid and should be discarded */\n    GeoCoordStatus[GeoCoordStatus[\"CSMapError\"] = 4096] = \"CSMapError\";\n    /** This temporary status is used to mark coordinates for which the conversion has not yet been processed by the backend\n     *  as opposed to other coordinate conversions that may have been resolved otherwise (typically a cache).\n     *  At the completion of the conversion promise no coordinates should have this status.\n     */\n    GeoCoordStatus[GeoCoordStatus[\"Pending\"] = -41556] = \"Pending\";\n})(GeoCoordStatus || (GeoCoordStatus = {}));\n/** Maps a GeoCoordStatus to the equivalent GeoServiceStatus.\n * @public\n */\nexport function mapToGeoServiceStatus(s) {\n    switch (s) {\n        case GeoCoordStatus.Success: return GeoServiceStatus.Success;\n        case GeoCoordStatus.NoGCSDefined: return GeoServiceStatus.NoGeoLocation;\n        case GeoCoordStatus.OutOfUsefulRange: return GeoServiceStatus.OutOfUsefulRange;\n        case GeoCoordStatus.OutOfMathematicalDomain: return GeoServiceStatus.OutOfMathematicalDomain;\n        case GeoCoordStatus.NoDatumConverter: return GeoServiceStatus.NoDatumConverter;\n        case GeoCoordStatus.VerticalDatumConvertError: return GeoServiceStatus.VerticalDatumConvertError;\n        case GeoCoordStatus.CSMapError: return GeoServiceStatus.CSMapError;\n        case GeoCoordStatus.Pending: return GeoServiceStatus.Pending;\n        default:\n            throw new Error(\"GeoCoordStatus -> GeoServiceStatus - Missing enum conversion\");\n    }\n}\n//# sourceMappingURL=GeoCoordinateServices.js.map",
      "start": 1693508120527,
      "end": 1693508120612,
      "sourcemaps": null
    }
  ]
}
