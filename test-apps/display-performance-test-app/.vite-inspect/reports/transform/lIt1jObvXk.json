{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/frontend/lib/esm/render/webgl/Layer.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module WebGL\n */\nimport { Id64 } from \"@itwin/core-bentley\";\nimport { Graphic } from \"./Graphic\";\nclass GraphicWrapper extends Graphic {\n    constructor(graphic) {\n        super();\n        this.graphic = graphic;\n    }\n    dispose() {\n        this.graphic.dispose();\n    }\n    get isDisposed() {\n        return this.graphic.isDisposed;\n    }\n    get isPickable() {\n        return this.graphic.isPickable;\n    }\n    collectStatistics(stats) {\n        this.graphic.collectStatistics(stats);\n    }\n}\n/** Within a single tile, contains graphics belonging to a single layer.\n * The same layer may appear in multiple tiles, both within the same tile tree and in other tile trees.\n * Within a single tile tree, all Layers are contained within the same LayerContainer.\n * @internal\n */\nexport class Layer extends GraphicWrapper {\n    constructor(graphic, layerId) {\n        super(graphic);\n        this.layerId = layerId;\n        const pair = Id64.getUint32Pair(layerId);\n        this._idLo = pair.lower;\n        this._idHi = pair.upper;\n    }\n    getPriority(target) {\n        return target.currentFeatureSymbologyOverrides.getSubCategoryPriority(this._idLo, this._idHi);\n    }\n    addCommands(commands) {\n        commands.addLayerCommands(this);\n    }\n    addHiliteCommands(commands, pass) {\n        commands.addHiliteLayerCommands(this.graphic, pass);\n    }\n}\n/** Contains a GraphicBranch that can contain Layers, for a single model / tile-tree.\n * All geometry within the container has the same Z.\n * @internal\n */\nexport class LayerContainer extends GraphicWrapper {\n    constructor(graphic, drawAsOverlay, transparency, elevation) {\n        super(graphic);\n        this.elevation = elevation;\n        if (drawAsOverlay)\n            this.renderPass = 11 /* RenderPass.OverlayLayers */;\n        else if (transparency > 0)\n            this.renderPass = 7 /* RenderPass.TranslucentLayers */;\n        else\n            this.renderPass = 1 /* RenderPass.OpaqueLayers */; // ###TODO: What about layers containing naturally-transparent geometry?\n    }\n    addCommands(commands) {\n        commands.processLayers(this);\n    }\n    addHiliteCommands(commands, pass) {\n        commands.addHiliteLayerCommands(this.graphic, pass);\n    }\n}\n//# sourceMappingURL=Layer.js.map",
      "start": 1693508123638,
      "end": 1693508123686,
      "sourcemaps": null
    }
  ]
}
