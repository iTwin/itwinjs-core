{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/geometry/lib/esm/polyface/BoxTopology.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Polyface\n */\nimport { Point3d } from \"../geometry3d/Point3dVector3d\";\n//\n//      2------------------3\n//      | \\     F4       / |\n//      |   6----------7   |\n//      |   |          |   |   (BOTTOM = F0)\n//      |F5 |   F1     |F3 |\n//      |   |          |   |\n//      |   4----------5   |\n//      | /     F2       \\ |\n//      0------------------1\n//\n/**\n * methods for gathering points and indices of a box (8 corners, 6 faces, 12 edges)\n * @internal\n */\nclass BoxTopology {\n    static pointsClone() {\n        const clones = [];\n        for (const p of this.points)\n            clones.push(p.clone());\n        return clones;\n    }\n}\n/**\n * static readonly array with the coordinates of the 8 unit cube corners in standard order, which is:\n * x varies fastest\n * * The point indices for the x edges are (0 to 1), (2 to 3), (4 to 5), (6 to 7)\n * * The point indices for the y edges are (0 to 2), (1 to 3), (4 to 6), (5 to 7)\n * * The point indices for the z edges are (0 to 4), (1 to 5), (2 to 6), (3 to 7)\n * * These indices are tabulated in the `axisEdgeVertex[axis][edge][vertex]` array\n */\nBoxTopology.points = [\n    Point3d.create(0, 0, 0),\n    Point3d.create(1, 0, 0),\n    Point3d.create(0, 1, 0),\n    Point3d.create(1, 1, 0),\n    Point3d.create(0, 0, 1),\n    Point3d.create(1, 0, 1),\n    Point3d.create(0, 1, 1),\n    Point3d.create(1, 1, 1),\n];\n/** IN faceId pair, the first component for bottom and top caps is `primaryCapId` */\nBoxTopology.primaryCapId = -1;\n/** Indices of vertices around faces, in CCW from the outside. */\nBoxTopology.cornerIndexCCW = [\n    [1, 0, 2, 3],\n    [4, 5, 7, 6],\n    [0, 1, 5, 4],\n    [1, 3, 7, 5],\n    [3, 2, 6, 7],\n    [2, 0, 4, 6]\n];\n/**  // [partnerFace[faceIndex][k] = index of k'th adjacent face  */\nBoxTopology.partnerFace = [\n    [5, 4, 3, 2],\n    [2, 3, 4, 5],\n    [0, 3, 1, 5],\n    [0, 4, 1, 2],\n    [0, 5, 1, 3],\n    [0, 2, 1, 4],\n];\n/** face id as used in SolidPrimitive methods */\nBoxTopology.faceId = [\n    [BoxTopology.primaryCapId, 0],\n    [BoxTopology.primaryCapId, 1],\n    [0, 0],\n    [0, 1],\n    [0, 2],\n    [0, 3]\n];\n/**\n * Table to look up axis indices of edges and normals in box faces.\n * faceDirections[faceIndex] =[[edge0AxisIndex, edge1AxisIndex, normalAxisIndex],[direction sign for along the axis]\n */\nBoxTopology.faceDirections = [\n    [[0, 1, 2], [-1, 1, -1]],\n    [[0, 1, 2], [1, 1, 1]],\n    [[0, 2, 1], [1, -1, 1]],\n    [[1, 2, 0], [1, 1, 1]],\n    [[0, 2, 1], [-1, 1, 1]],\n    [[1, 2, 0], [-1, 1, -1]]\n];\n/** There are 4 edges in each axis direction.\n *  * axisEdgeVertex[axisIndex][edgeIndex 0..3][*] = vertex index at end of edge in axisIndex direction.\n */\nBoxTopology.axisEdgeVertex = [\n    [[0, 1], [2, 3], [4, 5], [6, 7]],\n    [[0, 2], [1, 3], [4, 6], [5, 7]],\n    [[0, 4], [1, 5], [2, 6], [3, 7]]\n];\nexport { BoxTopology };\n//# sourceMappingURL=BoxTopology.js.map",
      "start": 1693508123045,
      "end": 1693508123207,
      "sourcemaps": null
    }
  ]
}
