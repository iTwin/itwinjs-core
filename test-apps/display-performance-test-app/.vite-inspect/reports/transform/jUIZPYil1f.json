{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/rpc/IModelReadRpcInterface.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module RpcInterface\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { RpcInterface } from \"../RpcInterface\";\nimport { RpcManager } from \"../RpcManager\";\nimport { RpcResponseCacheControl } from \"./core/RpcConstants\";\nimport { RpcNotFoundResponse } from \"./core/RpcControl\";\nimport { RpcOperation } from \"./core/RpcOperation\";\n/** Response if the IModelDb was not found at the backend\n * (if the service has moved)\n * @public\n */\nexport class IModelNotFoundResponse extends RpcNotFoundResponse {\n    constructor() {\n        super(...arguments);\n        this.isIModelNotFoundResponse = true;\n        this.message = \"iModel not found\";\n    }\n}\n/** The RPC interface for reading from an iModel.\n * All operations only require read-only access.\n * This interface is not normally used directly. See IModelConnection for higher-level and more convenient API for accessing iModels from a frontend.\n * @internal\n */\nclass IModelReadRpcInterface extends RpcInterface {\n    /** Returns the IModelReadRpcInterface instance for the frontend. */\n    static getClient() { return RpcManager.getClientForInterface(IModelReadRpcInterface); }\n    /** Returns the IModelReadRpcInterface instance for a custom RPC routing configuration. */\n    static getClientForRouting(token) { return RpcManager.getClientForInterface(IModelReadRpcInterface, token); }\n    /*===========================================================================================\n      NOTE: Any add/remove/change to the methods below requires an update of the interface version.\n      NOTE: Please consult the README in this folder for the semantic versioning rules.\n    ===========================================================================================*/\n    async getConnectionProps(_iModelToken) { return this.forward(arguments); }\n    async queryRows(_iModelToken, _request) { return this.forward(arguments); }\n    async querySubCategories(_iModelToken, _categoryIds) { return this.forward(arguments); }\n    async queryBlob(_iModelToken, _request) { return this.forward(arguments); }\n    async getModelProps(_iModelToken, _modelIds) { return this.forward(arguments); }\n    async queryModelRanges(_iModelToken, _modelIds) { return this.forward(arguments); }\n    async queryModelExtents(_iModelToken, _modelIds) { return this.forward(arguments); }\n    async queryModelProps(_iModelToken, _params) { return this.forward(arguments); }\n    async getElementProps(_iModelToken, _elementIds) { return this.forward(arguments); }\n    async queryElementProps(_iModelToken, _params) { return this.forward(arguments); }\n    async queryEntityIds(_iModelToken, _params) { return this.forward(arguments); }\n    async getClassHierarchy(_iModelToken, _startClassName) { return this.forward(arguments); }\n    async getAllCodeSpecs(_iModelToken) { return this.forward(arguments); }\n    async getViewStateData(_iModelToken, _viewDefinitionId, _options) { return this.forward(arguments); }\n    async readFontJson(_iModelToken) { return this.forward(arguments); }\n    async getToolTipMessage(_iModelToken, _elementId) { return this.forward(arguments); }\n    /** @deprecated in 3.x use ViewStore apis. */\n    async getViewThumbnail(_iModelToken, _viewId) { return this.forward(arguments); }\n    async getDefaultViewId(_iModelToken) { return this.forward(arguments); }\n    async getCustomViewState3dData(_iModelToken, _options) { return this.forward(arguments); }\n    async hydrateViewState(_iModelToken, _options) { return this.forward(arguments); }\n    async requestSnap(_iModelToken, _sessionId, _props) { return this.forward(arguments); }\n    async cancelSnap(_iModelToken, _sessionId) { return this.forward(arguments); }\n    async getGeometryContainment(_iModelToken, _props) { return this.forward(arguments); }\n    async getMassProperties(_iModelToken, _props) { return this.forward(arguments); }\n    async getMassPropertiesPerCandidate(_iModelToken, _props) { return this.forward(arguments); }\n    async getIModelCoordinatesFromGeoCoordinates(_iModelToken, _props) { return this.forward(arguments); }\n    async getGeoCoordinatesFromIModelCoordinates(_iModelToken, _props) { return this.forward(arguments); }\n    async getGeometrySummary(_iModelToken, _props) { return this.forward(arguments); }\n    async queryTextureData(_iModelToken, _textureLoadProps) { return this.forward(arguments); }\n    async loadElementProps(_iModelToken, _elementIdentifier, _options) {\n        return this.forward(arguments);\n    }\n    async generateElementMeshes(_iModelToken, _props) {\n        return this.forward(arguments);\n    }\n    /** @internal */\n    async callViewStore(_iModelToken, _version, _forWrite, _methodName, ..._args) { return this.forward(arguments); }\n}\n/** The immutable name of the interface. */\nIModelReadRpcInterface.interfaceName = \"IModelReadRpcInterface\";\n/** The semantic version of the interface. */\nIModelReadRpcInterface.interfaceVersion = \"3.6.0\";\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getConnectionProps\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"querySubCategories\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getModelProps\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"queryModelRanges\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"queryModelExtents\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getClassHierarchy\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getViewStateData\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getDefaultViewId\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getCustomViewState3dData\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"hydrateViewState\", null);\n__decorate([\n    RpcOperation.allowResponseCaching(RpcResponseCacheControl.Immutable) // eslint-disable-line deprecation/deprecation\n], IModelReadRpcInterface.prototype, \"getGeoCoordinatesFromIModelCoordinates\", null);\nexport { IModelReadRpcInterface };\n//# sourceMappingURL=IModelReadRpcInterface.js.map",
      "start": 1693508120836,
      "end": 1693508120915,
      "sourcemaps": null
    }
  ]
}
