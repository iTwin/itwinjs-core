{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/bentley/lib/esm/BentleyError.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Errors\n */\nimport { DbResult } from \"./BeSQLite\";\n/** Standard status code.\n * This status code should be rarely used.\n * Prefer to throw an exception to indicate an error, rather than returning a special status code.\n * If a status code is to be returned, prefer to return a more specific error status type such as IModelStatus or DbResult.\n * @public\n */\nexport var BentleyStatus;\n(function (BentleyStatus) {\n    BentleyStatus[BentleyStatus[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    BentleyStatus[BentleyStatus[\"ERROR\"] = 32768] = \"ERROR\";\n})(BentleyStatus || (BentleyStatus = {}));\n/** Status codes that are used in conjunction with [[BentleyError]].\n * Error status codes are divided into separate ranges for different kinds of errors. All known ranges at least should be defined here, to avoid collisions.\n * @public\n */\nexport var IModelStatus;\n(function (IModelStatus) {\n    IModelStatus[IModelStatus[\"IMODEL_ERROR_BASE\"] = 65536] = \"IMODEL_ERROR_BASE\";\n    IModelStatus[IModelStatus[\"Success\"] = 0] = \"Success\";\n    IModelStatus[IModelStatus[\"AlreadyLoaded\"] = 65537] = \"AlreadyLoaded\";\n    IModelStatus[IModelStatus[\"AlreadyOpen\"] = 65538] = \"AlreadyOpen\";\n    IModelStatus[IModelStatus[\"BadArg\"] = 65539] = \"BadArg\";\n    IModelStatus[IModelStatus[\"BadElement\"] = 65540] = \"BadElement\";\n    IModelStatus[IModelStatus[\"BadModel\"] = 65541] = \"BadModel\";\n    IModelStatus[IModelStatus[\"BadRequest\"] = 65542] = \"BadRequest\";\n    IModelStatus[IModelStatus[\"BadSchema\"] = 65543] = \"BadSchema\";\n    IModelStatus[IModelStatus[\"CannotUndo\"] = 65544] = \"CannotUndo\";\n    IModelStatus[IModelStatus[\"CodeNotReserved\"] = 65545] = \"CodeNotReserved\";\n    IModelStatus[IModelStatus[\"DeletionProhibited\"] = 65546] = \"DeletionProhibited\";\n    IModelStatus[IModelStatus[\"DuplicateCode\"] = 65547] = \"DuplicateCode\";\n    IModelStatus[IModelStatus[\"DuplicateName\"] = 65548] = \"DuplicateName\";\n    IModelStatus[IModelStatus[\"ElementBlockedChange\"] = 65549] = \"ElementBlockedChange\";\n    IModelStatus[IModelStatus[\"FileAlreadyExists\"] = 65550] = \"FileAlreadyExists\";\n    IModelStatus[IModelStatus[\"FileNotFound\"] = 65551] = \"FileNotFound\";\n    IModelStatus[IModelStatus[\"FileNotLoaded\"] = 65552] = \"FileNotLoaded\";\n    IModelStatus[IModelStatus[\"ForeignKeyConstraint\"] = 65553] = \"ForeignKeyConstraint\";\n    IModelStatus[IModelStatus[\"IdExists\"] = 65554] = \"IdExists\";\n    IModelStatus[IModelStatus[\"InDynamicTransaction\"] = 65555] = \"InDynamicTransaction\";\n    IModelStatus[IModelStatus[\"InvalidCategory\"] = 65556] = \"InvalidCategory\";\n    IModelStatus[IModelStatus[\"InvalidCode\"] = 65557] = \"InvalidCode\";\n    IModelStatus[IModelStatus[\"InvalidCodeSpec\"] = 65558] = \"InvalidCodeSpec\";\n    IModelStatus[IModelStatus[\"InvalidId\"] = 65559] = \"InvalidId\";\n    IModelStatus[IModelStatus[\"InvalidName\"] = 65560] = \"InvalidName\";\n    IModelStatus[IModelStatus[\"InvalidParent\"] = 65561] = \"InvalidParent\";\n    IModelStatus[IModelStatus[\"InvalidProfileVersion\"] = 65562] = \"InvalidProfileVersion\";\n    IModelStatus[IModelStatus[\"IsCreatingChangeSet\"] = 65563] = \"IsCreatingChangeSet\";\n    IModelStatus[IModelStatus[\"LockNotHeld\"] = 65564] = \"LockNotHeld\";\n    IModelStatus[IModelStatus[\"Mismatch2d3d\"] = 65565] = \"Mismatch2d3d\";\n    IModelStatus[IModelStatus[\"MismatchGcs\"] = 65566] = \"MismatchGcs\";\n    IModelStatus[IModelStatus[\"MissingDomain\"] = 65567] = \"MissingDomain\";\n    IModelStatus[IModelStatus[\"MissingHandler\"] = 65568] = \"MissingHandler\";\n    IModelStatus[IModelStatus[\"MissingId\"] = 65569] = \"MissingId\";\n    IModelStatus[IModelStatus[\"NoGeometry\"] = 65570] = \"NoGeometry\";\n    IModelStatus[IModelStatus[\"NoMultiTxnOperation\"] = 65571] = \"NoMultiTxnOperation\";\n    IModelStatus[IModelStatus[\"NotEnabled\"] = 65573] = \"NotEnabled\";\n    IModelStatus[IModelStatus[\"NotFound\"] = 65574] = \"NotFound\";\n    IModelStatus[IModelStatus[\"NotOpen\"] = 65575] = \"NotOpen\";\n    IModelStatus[IModelStatus[\"NotOpenForWrite\"] = 65576] = \"NotOpenForWrite\";\n    IModelStatus[IModelStatus[\"NotSameUnitBase\"] = 65577] = \"NotSameUnitBase\";\n    IModelStatus[IModelStatus[\"NothingToRedo\"] = 65578] = \"NothingToRedo\";\n    IModelStatus[IModelStatus[\"NothingToUndo\"] = 65579] = \"NothingToUndo\";\n    IModelStatus[IModelStatus[\"ParentBlockedChange\"] = 65580] = \"ParentBlockedChange\";\n    IModelStatus[IModelStatus[\"ReadError\"] = 65581] = \"ReadError\";\n    IModelStatus[IModelStatus[\"ReadOnly\"] = 65582] = \"ReadOnly\";\n    IModelStatus[IModelStatus[\"ReadOnlyDomain\"] = 65583] = \"ReadOnlyDomain\";\n    IModelStatus[IModelStatus[\"RepositoryManagerError\"] = 65584] = \"RepositoryManagerError\";\n    IModelStatus[IModelStatus[\"SQLiteError\"] = 65585] = \"SQLiteError\";\n    IModelStatus[IModelStatus[\"TransactionActive\"] = 65586] = \"TransactionActive\";\n    IModelStatus[IModelStatus[\"UnitsMissing\"] = 65587] = \"UnitsMissing\";\n    IModelStatus[IModelStatus[\"UnknownFormat\"] = 65588] = \"UnknownFormat\";\n    IModelStatus[IModelStatus[\"UpgradeFailed\"] = 65589] = \"UpgradeFailed\";\n    IModelStatus[IModelStatus[\"ValidationFailed\"] = 65590] = \"ValidationFailed\";\n    IModelStatus[IModelStatus[\"VersionTooNew\"] = 65591] = \"VersionTooNew\";\n    IModelStatus[IModelStatus[\"VersionTooOld\"] = 65592] = \"VersionTooOld\";\n    IModelStatus[IModelStatus[\"ViewNotFound\"] = 65593] = \"ViewNotFound\";\n    IModelStatus[IModelStatus[\"WriteError\"] = 65594] = \"WriteError\";\n    IModelStatus[IModelStatus[\"WrongClass\"] = 65595] = \"WrongClass\";\n    IModelStatus[IModelStatus[\"WrongIModel\"] = 65596] = \"WrongIModel\";\n    IModelStatus[IModelStatus[\"WrongDomain\"] = 65597] = \"WrongDomain\";\n    IModelStatus[IModelStatus[\"WrongElement\"] = 65598] = \"WrongElement\";\n    IModelStatus[IModelStatus[\"WrongHandler\"] = 65599] = \"WrongHandler\";\n    IModelStatus[IModelStatus[\"WrongModel\"] = 65600] = \"WrongModel\";\n    IModelStatus[IModelStatus[\"ConstraintNotUnique\"] = 65601] = \"ConstraintNotUnique\";\n    IModelStatus[IModelStatus[\"NoGeoLocation\"] = 65602] = \"NoGeoLocation\";\n    IModelStatus[IModelStatus[\"ServerTimeout\"] = 65603] = \"ServerTimeout\";\n    IModelStatus[IModelStatus[\"NoContent\"] = 65604] = \"NoContent\";\n    IModelStatus[IModelStatus[\"NotRegistered\"] = 65605] = \"NotRegistered\";\n    IModelStatus[IModelStatus[\"FunctionNotFound\"] = 65606] = \"FunctionNotFound\";\n    IModelStatus[IModelStatus[\"NoActiveCommand\"] = 65607] = \"NoActiveCommand\";\n})(IModelStatus || (IModelStatus = {}));\n/** Error statuses produced by various briefcase operations, typically encountered as the `errorNumber` of an [IModelError]($common).\n * @public\n */\nexport var BriefcaseStatus;\n(function (BriefcaseStatus) {\n    BriefcaseStatus[BriefcaseStatus[\"BRIEFCASE_STATUS_BASE\"] = 131072] = \"BRIEFCASE_STATUS_BASE\";\n    BriefcaseStatus[BriefcaseStatus[\"CannotAcquire\"] = 131072] = \"CannotAcquire\";\n    BriefcaseStatus[BriefcaseStatus[\"CannotDownload\"] = 131073] = \"CannotDownload\";\n    BriefcaseStatus[BriefcaseStatus[\"CannotUpload\"] = 131074] = \"CannotUpload\";\n    BriefcaseStatus[BriefcaseStatus[\"CannotCopy\"] = 131075] = \"CannotCopy\";\n    BriefcaseStatus[BriefcaseStatus[\"CannotDelete\"] = 131076] = \"CannotDelete\";\n    BriefcaseStatus[BriefcaseStatus[\"VersionNotFound\"] = 131077] = \"VersionNotFound\";\n    BriefcaseStatus[BriefcaseStatus[\"CannotApplyChanges\"] = 131078] = \"CannotApplyChanges\";\n    BriefcaseStatus[BriefcaseStatus[\"DownloadCancelled\"] = 131079] = \"DownloadCancelled\";\n    BriefcaseStatus[BriefcaseStatus[\"ContainsDeletedChangeSets\"] = 131080] = \"ContainsDeletedChangeSets\";\n})(BriefcaseStatus || (BriefcaseStatus = {}));\n/** RpcInterface status codes\n * @beta\n */\nexport var RpcInterfaceStatus;\n(function (RpcInterfaceStatus) {\n    RpcInterfaceStatus[RpcInterfaceStatus[\"Success\"] = 0] = \"Success\";\n    RpcInterfaceStatus[RpcInterfaceStatus[\"RPC_INTERFACE_ERROR_BASE\"] = 135168] = \"RPC_INTERFACE_ERROR_BASE\";\n    /** The RpcInterface implemented by the server is incompatible with the interface requested by the client. */\n    RpcInterfaceStatus[RpcInterfaceStatus[\"IncompatibleVersion\"] = 135168] = \"IncompatibleVersion\";\n})(RpcInterfaceStatus || (RpcInterfaceStatus = {}));\n/** Error statuses produced by various Changeset operations, typically encountered as the `errorNumber` of an [IModelError]($common).\n * @public\n */\nexport var ChangeSetStatus;\n(function (ChangeSetStatus) {\n    ChangeSetStatus[ChangeSetStatus[\"Success\"] = 0] = \"Success\";\n    ChangeSetStatus[ChangeSetStatus[\"CHANGESET_ERROR_BASE\"] = 90112] = \"CHANGESET_ERROR_BASE\";\n    /** Error applying a change set when reversing or reinstating it */\n    ChangeSetStatus[ChangeSetStatus[\"ApplyError\"] = 90113] = \"ApplyError\";\n    /** Change tracking has not been enabled. The ChangeSet API mandates this. */\n    ChangeSetStatus[ChangeSetStatus[\"ChangeTrackingNotEnabled\"] = 90114] = \"ChangeTrackingNotEnabled\";\n    /** Contents of the change stream are corrupted and does not match the ChangeSet */\n    ChangeSetStatus[ChangeSetStatus[\"CorruptedChangeStream\"] = 90115] = \"CorruptedChangeStream\";\n    /** File containing the changes to the change set is not found */\n    ChangeSetStatus[ChangeSetStatus[\"FileNotFound\"] = 90116] = \"FileNotFound\";\n    /** Error writing the contents of the change set to the backing change stream file */\n    ChangeSetStatus[ChangeSetStatus[\"FileWriteError\"] = 90117] = \"FileWriteError\";\n    /**  Cannot perform the operation since the Db has local changes */\n    ChangeSetStatus[ChangeSetStatus[\"HasLocalChanges\"] = 90118] = \"HasLocalChanges\";\n    /**  Cannot perform the operation since current transaction has uncommitted changes */\n    ChangeSetStatus[ChangeSetStatus[\"HasUncommittedChanges\"] = 90119] = \"HasUncommittedChanges\";\n    /**  Invalid ChangeSet Id */\n    ChangeSetStatus[ChangeSetStatus[\"InvalidId\"] = 90120] = \"InvalidId\";\n    /**  Invalid version of the change set */\n    ChangeSetStatus[ChangeSetStatus[\"InvalidVersion\"] = 90121] = \"InvalidVersion\";\n    /** Cannot perform the operation since system is in the middle of a dynamic transaction */\n    ChangeSetStatus[ChangeSetStatus[\"InDynamicTransaction\"] = 90122] = \"InDynamicTransaction\";\n    /** Cannot perform operation since system is in the middle of a creating a change set */\n    ChangeSetStatus[ChangeSetStatus[\"IsCreatingChangeSet\"] = 90123] = \"IsCreatingChangeSet\";\n    /** Cannot perform operation since the system is not creating a change set */\n    ChangeSetStatus[ChangeSetStatus[\"IsNotCreatingChangeSet\"] = 90124] = \"IsNotCreatingChangeSet\";\n    /** Error propagating the changes after the merge */\n    ChangeSetStatus[ChangeSetStatus[\"MergePropagationError\"] = 90125] = \"MergePropagationError\";\n    /** No change sets to merge */\n    ChangeSetStatus[ChangeSetStatus[\"NothingToMerge\"] = 90126] = \"NothingToMerge\";\n    /** No transactions are available to create a change set */\n    ChangeSetStatus[ChangeSetStatus[\"NoTransactions\"] = 90127] = \"NoTransactions\";\n    /** Parent change set of the Db does not match the parent id of the change set */\n    ChangeSetStatus[ChangeSetStatus[\"ParentMismatch\"] = 90128] = \"ParentMismatch\";\n    /** Error performing a SQLite operation on the Db */\n    ChangeSetStatus[ChangeSetStatus[\"SQLiteError\"] = 90129] = \"SQLiteError\";\n    /** ChangeSet originated in a different Db */\n    ChangeSetStatus[ChangeSetStatus[\"WrongDgnDb\"] = 90130] = \"WrongDgnDb\";\n    /** Could not open the DgnDb to merge change set */\n    ChangeSetStatus[ChangeSetStatus[\"CouldNotOpenDgnDb\"] = 90131] = \"CouldNotOpenDgnDb\";\n    /** Cannot merge changes in in an open DgnDb. Close the DgnDb, and process the operation when it is opened. */\n    ChangeSetStatus[ChangeSetStatus[\"MergeSchemaChangesOnOpen\"] = 90132] = \"MergeSchemaChangesOnOpen\";\n    /** Cannot reverse or reinstate schema changes. */\n    ChangeSetStatus[ChangeSetStatus[\"ReverseOrReinstateSchemaChanges\"] = 90133] = \"ReverseOrReinstateSchemaChanges\";\n    /** Cannot process changes schema changes in an open DgnDb. Close the DgnDb, and process the operation when it is opened. */\n    ChangeSetStatus[ChangeSetStatus[\"ProcessSchemaChangesOnOpen\"] = 90134] = \"ProcessSchemaChangesOnOpen\";\n    /** Cannot merge changes into a Readonly DgnDb. */\n    ChangeSetStatus[ChangeSetStatus[\"CannotMergeIntoReadonly\"] = 90135] = \"CannotMergeIntoReadonly\";\n    /**  Cannot merge changes into a Master DgnDb. */\n    ChangeSetStatus[ChangeSetStatus[\"CannotMergeIntoMaster\"] = 90136] = \"CannotMergeIntoMaster\";\n    /** Cannot merge changes into a DgnDb that has reversed change sets. */\n    ChangeSetStatus[ChangeSetStatus[\"CannotMergeIntoReversed\"] = 90137] = \"CannotMergeIntoReversed\";\n    /** ChangeSet(s) download was cancelled. */\n    ChangeSetStatus[ChangeSetStatus[\"DownloadCancelled\"] = 90138] = \"DownloadCancelled\";\n})(ChangeSetStatus || (ChangeSetStatus = {}));\n/** Return codes for methods which perform repository management operations\n * @internal\n */\nexport var RepositoryStatus;\n(function (RepositoryStatus) {\n    RepositoryStatus[RepositoryStatus[\"Success\"] = 0] = \"Success\";\n    /** The repository server did not respond to a request */\n    RepositoryStatus[RepositoryStatus[\"ServerUnavailable\"] = 86017] = \"ServerUnavailable\";\n    /** A requested lock was already held by another briefcase */\n    RepositoryStatus[RepositoryStatus[\"LockAlreadyHeld\"] = 86018] = \"LockAlreadyHeld\";\n    /** Failed to sync briefcase manager with server */\n    RepositoryStatus[RepositoryStatus[\"SyncError\"] = 86019] = \"SyncError\";\n    /** Response from server not understood */\n    RepositoryStatus[RepositoryStatus[\"InvalidResponse\"] = 86020] = \"InvalidResponse\";\n    /** An operation requires local changes to be committed or abandoned */\n    RepositoryStatus[RepositoryStatus[\"PendingTransactions\"] = 86021] = \"PendingTransactions\";\n    /** A lock cannot be relinquished because the associated object has been modified */\n    RepositoryStatus[RepositoryStatus[\"LockUsed\"] = 86022] = \"LockUsed\";\n    /** An operation required creation of a ChangeSet, which failed */\n    RepositoryStatus[RepositoryStatus[\"CannotCreateChangeSet\"] = 86023] = \"CannotCreateChangeSet\";\n    /** Request to server not understood */\n    RepositoryStatus[RepositoryStatus[\"InvalidRequest\"] = 86024] = \"InvalidRequest\";\n    /** A change set committed to the server must be integrated into the briefcase before the operation can be completed */\n    RepositoryStatus[RepositoryStatus[\"ChangeSetRequired\"] = 86025] = \"ChangeSetRequired\";\n    /** A requested DgnCode is reserved by another briefcase or in use */\n    RepositoryStatus[RepositoryStatus[\"CodeUnavailable\"] = 86026] = \"CodeUnavailable\";\n    /** A DgnCode cannot be released because it has not been reserved by the requesting briefcase */\n    RepositoryStatus[RepositoryStatus[\"CodeNotReserved\"] = 86027] = \"CodeNotReserved\";\n    /** A DgnCode cannot be relinquished because it has been used locally */\n    RepositoryStatus[RepositoryStatus[\"CodeUsed\"] = 86028] = \"CodeUsed\";\n    /** A required lock is not held by this briefcase */\n    RepositoryStatus[RepositoryStatus[\"LockNotHeld\"] = 86029] = \"LockNotHeld\";\n    /** Repository is currently locked, no changes allowed */\n    RepositoryStatus[RepositoryStatus[\"RepositoryIsLocked\"] = 86030] = \"RepositoryIsLocked\";\n    /** Channel write constraint violation, such as an attempt to write outside the designated channel. */\n    RepositoryStatus[RepositoryStatus[\"ChannelConstraintViolation\"] = 86031] = \"ChannelConstraintViolation\";\n})(RepositoryStatus || (RepositoryStatus = {}));\n/** Status from returned HTTP status code\n * @beta\n */\nexport var HttpStatus;\n(function (HttpStatus) {\n    /** 2xx Success */\n    HttpStatus[HttpStatus[\"Success\"] = 0] = \"Success\";\n    /** 1xx Informational responses */\n    HttpStatus[HttpStatus[\"Info\"] = 94209] = \"Info\";\n    /** 3xx Redirection */\n    HttpStatus[HttpStatus[\"Redirection\"] = 94210] = \"Redirection\";\n    /** 4xx Client errors */\n    HttpStatus[HttpStatus[\"ClientError\"] = 94211] = \"ClientError\";\n    /** 5xx Server errors */\n    HttpStatus[HttpStatus[\"ServerError\"] = 94212] = \"ServerError\";\n})(HttpStatus || (HttpStatus = {}));\n/** Statuses produced by APIs that interact with iModelHub, typically encountered as the `errorNumber` of an [IModelError]($common).\n * @public\n */\nexport var IModelHubStatus;\n(function (IModelHubStatus) {\n    IModelHubStatus[IModelHubStatus[\"Success\"] = 0] = \"Success\";\n    IModelHubStatus[IModelHubStatus[\"IMODELHUBERROR_BASE\"] = 102400] = \"IMODELHUBERROR_BASE\";\n    IModelHubStatus[IModelHubStatus[\"IMODELHUBERROR_REQUESTERRORBASE\"] = 102656] = \"IMODELHUBERROR_REQUESTERRORBASE\";\n    IModelHubStatus[IModelHubStatus[\"Unknown\"] = 102401] = \"Unknown\";\n    IModelHubStatus[IModelHubStatus[\"MissingRequiredProperties\"] = 102402] = \"MissingRequiredProperties\";\n    IModelHubStatus[IModelHubStatus[\"InvalidPropertiesValues\"] = 102403] = \"InvalidPropertiesValues\";\n    IModelHubStatus[IModelHubStatus[\"UserDoesNotHavePermission\"] = 102404] = \"UserDoesNotHavePermission\";\n    IModelHubStatus[IModelHubStatus[\"UserDoesNotHaveAccess\"] = 102405] = \"UserDoesNotHaveAccess\";\n    IModelHubStatus[IModelHubStatus[\"InvalidBriefcase\"] = 102406] = \"InvalidBriefcase\";\n    IModelHubStatus[IModelHubStatus[\"BriefcaseDoesNotExist\"] = 102407] = \"BriefcaseDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"BriefcaseDoesNotBelongToUser\"] = 102408] = \"BriefcaseDoesNotBelongToUser\";\n    IModelHubStatus[IModelHubStatus[\"AnotherUserPushing\"] = 102409] = \"AnotherUserPushing\";\n    IModelHubStatus[IModelHubStatus[\"ChangeSetAlreadyExists\"] = 102410] = \"ChangeSetAlreadyExists\";\n    IModelHubStatus[IModelHubStatus[\"ChangeSetDoesNotExist\"] = 102411] = \"ChangeSetDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"FileIsNotUploaded\"] = 102412] = \"FileIsNotUploaded\";\n    IModelHubStatus[IModelHubStatus[\"iModelIsNotInitialized\"] = 102413] = \"iModelIsNotInitialized\";\n    IModelHubStatus[IModelHubStatus[\"ChangeSetPointsToBadSeed\"] = 102414] = \"ChangeSetPointsToBadSeed\";\n    IModelHubStatus[IModelHubStatus[\"OperationFailed\"] = 102415] = \"OperationFailed\";\n    IModelHubStatus[IModelHubStatus[\"PullIsRequired\"] = 102416] = \"PullIsRequired\";\n    IModelHubStatus[IModelHubStatus[\"MaximumNumberOfBriefcasesPerUser\"] = 102417] = \"MaximumNumberOfBriefcasesPerUser\";\n    IModelHubStatus[IModelHubStatus[\"MaximumNumberOfBriefcasesPerUserPerMinute\"] = 102418] = \"MaximumNumberOfBriefcasesPerUserPerMinute\";\n    IModelHubStatus[IModelHubStatus[\"DatabaseTemporarilyLocked\"] = 102419] = \"DatabaseTemporarilyLocked\";\n    IModelHubStatus[IModelHubStatus[\"iModelIsLocked\"] = 102420] = \"iModelIsLocked\";\n    IModelHubStatus[IModelHubStatus[\"CodesExist\"] = 102421] = \"CodesExist\";\n    IModelHubStatus[IModelHubStatus[\"LocksExist\"] = 102422] = \"LocksExist\";\n    IModelHubStatus[IModelHubStatus[\"iModelAlreadyExists\"] = 102423] = \"iModelAlreadyExists\";\n    IModelHubStatus[IModelHubStatus[\"iModelDoesNotExist\"] = 102424] = \"iModelDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"FileDoesNotExist\"] = 102425] = \"FileDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"FileAlreadyExists\"] = 102426] = \"FileAlreadyExists\";\n    IModelHubStatus[IModelHubStatus[\"LockDoesNotExist\"] = 102427] = \"LockDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"LockOwnedByAnotherBriefcase\"] = 102428] = \"LockOwnedByAnotherBriefcase\";\n    IModelHubStatus[IModelHubStatus[\"CodeStateInvalid\"] = 102429] = \"CodeStateInvalid\";\n    IModelHubStatus[IModelHubStatus[\"CodeReservedByAnotherBriefcase\"] = 102430] = \"CodeReservedByAnotherBriefcase\";\n    IModelHubStatus[IModelHubStatus[\"CodeDoesNotExist\"] = 102431] = \"CodeDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"EventTypeDoesNotExist\"] = 102432] = \"EventTypeDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"EventSubscriptionDoesNotExist\"] = 102433] = \"EventSubscriptionDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"EventSubscriptionAlreadyExists\"] = 102434] = \"EventSubscriptionAlreadyExists\";\n    IModelHubStatus[IModelHubStatus[\"ITwinIdIsNotSpecified\"] = 102435] = \"ITwinIdIsNotSpecified\";\n    IModelHubStatus[IModelHubStatus[\"FailedToGetITwinPermissions\"] = 102436] = \"FailedToGetITwinPermissions\";\n    IModelHubStatus[IModelHubStatus[\"FailedToGetITwinMembers\"] = 102437] = \"FailedToGetITwinMembers\";\n    IModelHubStatus[IModelHubStatus[\"ChangeSetAlreadyHasVersion\"] = 102438] = \"ChangeSetAlreadyHasVersion\";\n    IModelHubStatus[IModelHubStatus[\"VersionAlreadyExists\"] = 102439] = \"VersionAlreadyExists\";\n    IModelHubStatus[IModelHubStatus[\"JobSchedulingFailed\"] = 102440] = \"JobSchedulingFailed\";\n    IModelHubStatus[IModelHubStatus[\"ConflictsAggregate\"] = 102441] = \"ConflictsAggregate\";\n    IModelHubStatus[IModelHubStatus[\"FailedToGetITwinById\"] = 102442] = \"FailedToGetITwinById\";\n    IModelHubStatus[IModelHubStatus[\"DatabaseOperationFailed\"] = 102443] = \"DatabaseOperationFailed\";\n    IModelHubStatus[IModelHubStatus[\"SeedFileInitializationFailed\"] = 102444] = \"SeedFileInitializationFailed\";\n    IModelHubStatus[IModelHubStatus[\"FailedToGetAssetPermissions\"] = 102445] = \"FailedToGetAssetPermissions\";\n    IModelHubStatus[IModelHubStatus[\"FailedToGetAssetMembers\"] = 102446] = \"FailedToGetAssetMembers\";\n    IModelHubStatus[IModelHubStatus[\"ITwinDoesNotExist\"] = 102447] = \"ITwinDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"LockChunkDoesNotExist\"] = 102449] = \"LockChunkDoesNotExist\";\n    IModelHubStatus[IModelHubStatus[\"CheckpointAlreadyExists\"] = 102450] = \"CheckpointAlreadyExists\";\n    IModelHubStatus[IModelHubStatus[\"CheckpointDoesNotExist\"] = 102451] = \"CheckpointDoesNotExist\";\n    // Errors that are returned for incorrect iModelHub request.\n    IModelHubStatus[IModelHubStatus[\"UndefinedArgumentError\"] = 102657] = \"UndefinedArgumentError\";\n    IModelHubStatus[IModelHubStatus[\"InvalidArgumentError\"] = 102658] = \"InvalidArgumentError\";\n    IModelHubStatus[IModelHubStatus[\"MissingDownloadUrlError\"] = 102659] = \"MissingDownloadUrlError\";\n    IModelHubStatus[IModelHubStatus[\"NotSupportedInBrowser\"] = 102660] = \"NotSupportedInBrowser\";\n    IModelHubStatus[IModelHubStatus[\"FileHandlerNotSet\"] = 102661] = \"FileHandlerNotSet\";\n    IModelHubStatus[IModelHubStatus[\"FileNotFound\"] = 102662] = \"FileNotFound\";\n    IModelHubStatus[IModelHubStatus[\"InitializationTimeout\"] = 102663] = \"InitializationTimeout\";\n})(IModelHubStatus || (IModelHubStatus = {}));\n/** GeoServiceStatus errors\n * @public\n */\nexport var GeoServiceStatus;\n(function (GeoServiceStatus) {\n    GeoServiceStatus[GeoServiceStatus[\"Success\"] = 0] = \"Success\";\n    GeoServiceStatus[GeoServiceStatus[\"GEOSERVICESTATUS_BASE\"] = 147456] = \"GEOSERVICESTATUS_BASE\";\n    // Error mapped from 'IModelStatus'\n    GeoServiceStatus[GeoServiceStatus[\"NoGeoLocation\"] = 65602] = \"NoGeoLocation\";\n    // Following errors are mapped from 'GeoCoordStatus'\n    GeoServiceStatus[GeoServiceStatus[\"OutOfUsefulRange\"] = 147457] = \"OutOfUsefulRange\";\n    GeoServiceStatus[GeoServiceStatus[\"OutOfMathematicalDomain\"] = 147458] = \"OutOfMathematicalDomain\";\n    GeoServiceStatus[GeoServiceStatus[\"NoDatumConverter\"] = 147459] = \"NoDatumConverter\";\n    GeoServiceStatus[GeoServiceStatus[\"VerticalDatumConvertError\"] = 147460] = \"VerticalDatumConvertError\";\n    GeoServiceStatus[GeoServiceStatus[\"CSMapError\"] = 147461] = \"CSMapError\";\n    GeoServiceStatus[GeoServiceStatus[\"Pending\"] = 147462] = \"Pending\";\n})(GeoServiceStatus || (GeoServiceStatus = {}));\n/** Error status from various reality data operations\n * @alpha\n */\nexport var RealityDataStatus;\n(function (RealityDataStatus) {\n    RealityDataStatus[RealityDataStatus[\"Success\"] = 0] = \"Success\";\n    RealityDataStatus[RealityDataStatus[\"REALITYDATA_ERROR_BASE\"] = 151552] = \"REALITYDATA_ERROR_BASE\";\n    RealityDataStatus[RealityDataStatus[\"InvalidData\"] = 151553] = \"InvalidData\";\n})(RealityDataStatus || (RealityDataStatus = {}));\nfunction isObject(obj) {\n    return typeof obj === \"object\" && obj !== null;\n}\n/** Base exception class for iTwin.js exceptions.\n * @public\n */\nexport class BentleyError extends Error {\n    /**\n     * @param errorNumber The a number that identifies of the problem.\n     * @param message  message that describes the problem (should not be localized).\n     * @param metaData metaData about the exception.\n     */\n    constructor(errorNumber, message, metaData) {\n        super(message);\n        this.errorNumber = errorNumber;\n        this.errorNumber = errorNumber;\n        this._metaData = metaData;\n        this.name = this._initName();\n    }\n    /** Returns true if this BentleyError includes (optional) metadata. */\n    get hasMetaData() { return undefined !== this._metaData; }\n    /** get the meta data associated with this BentleyError, if any. */\n    getMetaData() {\n        return BentleyError.getMetaData(this._metaData);\n    }\n    /** get the metadata object associated with an ExceptionMetaData, if any. */\n    static getMetaData(metaData) {\n        return (typeof metaData === \"function\") ? metaData() : metaData;\n    }\n    /** This function returns the name of each error status. Override this method to handle more error status codes. */\n    _initName() {\n        switch (this.errorNumber) {\n            case IModelStatus.AlreadyLoaded: return \"Already Loaded\";\n            case IModelStatus.AlreadyOpen: return \"Already Open\";\n            case IModelStatus.BadArg: return \"Bad Arg\";\n            case IModelStatus.BadElement: return \"Bad Element\";\n            case IModelStatus.BadModel: return \"Bad Model\";\n            case IModelStatus.BadRequest: return \"Bad Request\";\n            case IModelStatus.BadSchema: return \"Bad Schema\";\n            case IModelStatus.CannotUndo: return \"Can not Undo\";\n            case IModelStatus.CodeNotReserved: return \"Code Not Reserved\";\n            case IModelStatus.DeletionProhibited: return \"Deletion Prohibited\";\n            case IModelStatus.DuplicateCode: return \"Duplicate Code\";\n            case IModelStatus.DuplicateName: return \"Duplicate Name\";\n            case IModelStatus.ElementBlockedChange: return \"Element Blocked Change\";\n            case IModelStatus.FileAlreadyExists: return \"File Already Exists\";\n            case IModelStatus.FileNotFound: return \"File Not Found\";\n            case IModelStatus.FileNotLoaded: return \"File Not Loaded\";\n            case IModelStatus.ForeignKeyConstraint: return \"ForeignKey Constraint\";\n            case IModelStatus.IdExists: return \"Id Exists\";\n            case IModelStatus.InDynamicTransaction: return \"InDynamicTransaction\";\n            case IModelStatus.InvalidCategory: return \"Invalid Category\";\n            case IModelStatus.InvalidCode: return \"Invalid Code\";\n            case IModelStatus.InvalidCodeSpec: return \"Invalid CodeSpec\";\n            case IModelStatus.InvalidId: return \"Invalid Id\";\n            case IModelStatus.InvalidName: return \"Invalid Name\";\n            case IModelStatus.InvalidParent: return \"Invalid Parent\";\n            case IModelStatus.InvalidProfileVersion: return \"Invalid Profile Version\";\n            case IModelStatus.IsCreatingChangeSet: return \"IsCreatingChangeSet\";\n            case IModelStatus.LockNotHeld: return \"Lock Not Held\";\n            case IModelStatus.Mismatch2d3d: return \"Mismatch 2d3d\";\n            case IModelStatus.MismatchGcs: return \"Mismatch Gcs\";\n            case IModelStatus.MissingDomain: return \"Missing Domain\";\n            case IModelStatus.MissingHandler: return \"Missing Handler\";\n            case IModelStatus.MissingId: return \"Missing Id\";\n            case IModelStatus.NoGeometry: return \"No Geometry\";\n            case IModelStatus.NoMultiTxnOperation: return \"NoMultiTxnOperation\";\n            case IModelStatus.NotEnabled: return \"Not Enabled\";\n            case IModelStatus.NotFound: return \"Not Found\";\n            case IModelStatus.NotOpen: return \"Not Open\";\n            case IModelStatus.NotOpenForWrite: return \"Not Open For Write\";\n            case IModelStatus.NotSameUnitBase: return \"Not Same Unit Base\";\n            case IModelStatus.NothingToRedo: return \"Nothing To Redo\";\n            case IModelStatus.NothingToUndo: return \"Nothing To Undo\";\n            case IModelStatus.ParentBlockedChange: return \"Parent Blocked Change\";\n            case IModelStatus.ReadError: return \"Read Error\";\n            case IModelStatus.ReadOnly: return \"ReadOnly\";\n            case IModelStatus.ReadOnlyDomain: return \"ReadOnlyDomain\";\n            case IModelStatus.RepositoryManagerError: return \"RepositoryManagerError\";\n            case IModelStatus.SQLiteError: return \"SQLiteError\";\n            case IModelStatus.TransactionActive: return \"Transaction Active\";\n            case IModelStatus.UnitsMissing: return \"Units Missing\";\n            case IModelStatus.UnknownFormat: return \"Unknown Format\";\n            case IModelStatus.UpgradeFailed: return \"Upgrade Failed\";\n            case IModelStatus.ValidationFailed: return \"Validation Failed\";\n            case IModelStatus.VersionTooNew: return \"Version Too New\";\n            case IModelStatus.VersionTooOld: return \"Version Too Old\";\n            case IModelStatus.ViewNotFound: return \"View Not Found\";\n            case IModelStatus.WriteError: return \"Write Error\";\n            case IModelStatus.WrongClass: return \"Wrong Class\";\n            case IModelStatus.WrongIModel: return \"Wrong IModel\";\n            case IModelStatus.WrongDomain: return \"Wrong Domain\";\n            case IModelStatus.WrongElement: return \"Wrong Element\";\n            case IModelStatus.WrongHandler: return \"Wrong Handler\";\n            case IModelStatus.WrongModel: return \"Wrong Model\";\n            case DbResult.BE_SQLITE_ERROR: return \"BE_SQLITE_ERROR\";\n            case DbResult.BE_SQLITE_INTERNAL: return \"BE_SQLITE_INTERNAL\";\n            case DbResult.BE_SQLITE_PERM: return \"BE_SQLITE_PERM\";\n            case DbResult.BE_SQLITE_ABORT: return \"BE_SQLITE_ABORT\";\n            case DbResult.BE_SQLITE_BUSY: return \"Db is busy\";\n            case DbResult.BE_SQLITE_LOCKED: return \"Db is Locked\";\n            case DbResult.BE_SQLITE_NOMEM: return \"BE_SQLITE_NOMEM\";\n            case DbResult.BE_SQLITE_READONLY: return \"Readonly\";\n            case DbResult.BE_SQLITE_INTERRUPT: return \"BE_SQLITE_INTERRUPT\";\n            case DbResult.BE_SQLITE_IOERR: return \"BE_SQLITE_IOERR\";\n            case DbResult.BE_SQLITE_CORRUPT: return \"BE_SQLITE_CORRUPT\";\n            case DbResult.BE_SQLITE_NOTFOUND: return \"Not Found\";\n            case DbResult.BE_SQLITE_FULL: return \"BE_SQLITE_FULL\";\n            case DbResult.BE_SQLITE_CANTOPEN: return \"Can't open\";\n            case DbResult.BE_SQLITE_PROTOCOL: return \"BE_SQLITE_PROTOCOL\";\n            case DbResult.BE_SQLITE_EMPTY: return \"BE_SQLITE_EMPTY\";\n            case DbResult.BE_SQLITE_SCHEMA: return \"BE_SQLITE_SCHEMA\";\n            case DbResult.BE_SQLITE_TOOBIG: return \"BE_SQLITE_TOOBIG\";\n            case DbResult.BE_SQLITE_MISMATCH: return \"BE_SQLITE_MISMATCH\";\n            case DbResult.BE_SQLITE_MISUSE: return \"BE_SQLITE_MISUSE\";\n            case DbResult.BE_SQLITE_NOLFS: return \"BE_SQLITE_NOLFS\";\n            case DbResult.BE_SQLITE_AUTH: return \"BE_SQLITE_AUTH\";\n            case DbResult.BE_SQLITE_FORMAT: return \"BE_SQLITE_FORMAT\";\n            case DbResult.BE_SQLITE_RANGE: return \"BE_SQLITE_RANGE\";\n            case DbResult.BE_SQLITE_NOTADB: return \"Not a Database\";\n            case DbResult.BE_SQLITE_IOERR_READ: return \"BE_SQLITE_IOERR_READ\";\n            case DbResult.BE_SQLITE_IOERR_SHORT_READ: return \"BE_SQLITE_IOERR_SHORT_READ\";\n            case DbResult.BE_SQLITE_IOERR_WRITE: return \"BE_SQLITE_IOERR_WRITE\";\n            case DbResult.BE_SQLITE_IOERR_FSYNC: return \"BE_SQLITE_IOERR_FSYNC\";\n            case DbResult.BE_SQLITE_IOERR_DIR_FSYNC: return \"BE_SQLITE_IOERR_DIR_FSYNC\";\n            case DbResult.BE_SQLITE_IOERR_TRUNCATE: return \"BE_SQLITE_IOERR_TRUNCATE\";\n            case DbResult.BE_SQLITE_IOERR_FSTAT: return \"BE_SQLITE_IOERR_FSTAT\";\n            case DbResult.BE_SQLITE_IOERR_UNLOCK: return \"BE_SQLITE_IOERR_UNLOCK\";\n            case DbResult.BE_SQLITE_IOERR_RDLOCK: return \"BE_SQLITE_IOERR_RDLOCK\";\n            case DbResult.BE_SQLITE_IOERR_DELETE: return \"BE_SQLITE_IOERR_DELETE\";\n            case DbResult.BE_SQLITE_IOERR_BLOCKED: return \"BE_SQLITE_IOERR_BLOCKED\";\n            case DbResult.BE_SQLITE_IOERR_NOMEM: return \"BE_SQLITE_IOERR_NOMEM\";\n            case DbResult.BE_SQLITE_IOERR_ACCESS: return \"BE_SQLITE_IOERR_ACCESS\";\n            case DbResult.BE_SQLITE_IOERR_CHECKRESERVEDLOCK: return \"BE_SQLITE_IOERR_CHECKRESERVEDLOCK\";\n            case DbResult.BE_SQLITE_IOERR_LOCK: return \"BE_SQLITE_IOERR_LOCK\";\n            case DbResult.BE_SQLITE_IOERR_CLOSE: return \"BE_SQLITE_IOERR_CLOSE\";\n            case DbResult.BE_SQLITE_IOERR_DIR_CLOSE: return \"BE_SQLITE_IOERR_DIR_CLOSE\";\n            case DbResult.BE_SQLITE_IOERR_SHMOPEN: return \"BE_SQLITE_IOERR_SHMOPEN\";\n            case DbResult.BE_SQLITE_IOERR_SHMSIZE: return \"BE_SQLITE_IOERR_SHMSIZE\";\n            case DbResult.BE_SQLITE_IOERR_SHMLOCK: return \"BE_SQLITE_IOERR_SHMLOCK\";\n            case DbResult.BE_SQLITE_IOERR_SHMMAP: return \"BE_SQLITE_IOERR_SHMMAP\";\n            case DbResult.BE_SQLITE_IOERR_SEEK: return \"BE_SQLITE_IOERR_SEEK\";\n            case DbResult.BE_SQLITE_IOERR_DELETE_NOENT: return \"BE_SQLITE_IOERR_DELETE_NOENT\";\n            case DbResult.BE_SQLITE_ERROR_DataTransformRequired: return \"Schema update require to transform data\";\n            case DbResult.BE_SQLITE_ERROR_FileExists: return \"File Exists\";\n            case DbResult.BE_SQLITE_ERROR_AlreadyOpen: return \"Already Open\";\n            case DbResult.BE_SQLITE_ERROR_NoPropertyTable: return \"No Property Table\";\n            case DbResult.BE_SQLITE_ERROR_FileNotFound: return \"File Not Found\";\n            case DbResult.BE_SQLITE_ERROR_NoTxnActive: return \"No Txn Active\";\n            case DbResult.BE_SQLITE_ERROR_BadDbProfile: return \"Bad Db Profile\";\n            case DbResult.BE_SQLITE_ERROR_InvalidProfileVersion: return \"Invalid Profile Version\";\n            case DbResult.BE_SQLITE_ERROR_ProfileUpgradeFailed: return \"Profile Upgrade Failed\";\n            case DbResult.BE_SQLITE_ERROR_ProfileTooOldForReadWrite: return \"Profile Too Old For ReadWrite\";\n            case DbResult.BE_SQLITE_ERROR_ProfileTooOld: return \"Profile Too Old\";\n            case DbResult.BE_SQLITE_ERROR_ProfileTooNewForReadWrite: return \"Profile Too New For ReadWrite\";\n            case DbResult.BE_SQLITE_ERROR_ProfileTooNew: return \"Profile Too New\";\n            case DbResult.BE_SQLITE_ERROR_ChangeTrackError: return \"ChangeTrack Error\";\n            case DbResult.BE_SQLITE_ERROR_InvalidChangeSetVersion: return \"Invalid ChangeSet Version\";\n            case DbResult.BE_SQLITE_ERROR_SchemaUpgradeRequired: return \"Schema Upgrade Required\";\n            case DbResult.BE_SQLITE_ERROR_SchemaTooNew: return \"Schema Too New\";\n            case DbResult.BE_SQLITE_ERROR_SchemaTooOld: return \"Schema Too Old\";\n            case DbResult.BE_SQLITE_ERROR_SchemaLockFailed: return \"Schema Lock Failed\";\n            case DbResult.BE_SQLITE_ERROR_SchemaUpgradeFailed: return \"Schema Upgrade Failed\";\n            case DbResult.BE_SQLITE_ERROR_SchemaImportFailed: return \"Schema Import Failed\";\n            case DbResult.BE_SQLITE_ERROR_CouldNotAcquireLocksOrCodes: return \"Could Not Acquire Locks Or Codes\";\n            case DbResult.BE_SQLITE_ERROR_SchemaUpgradeRecommended: return \"Recommended that the schemas found in the database be upgraded\";\n            case DbResult.BE_SQLITE_LOCKED_SHAREDCACHE: return \"BE_SQLITE_LOCKED_SHAREDCACHE\";\n            case DbResult.BE_SQLITE_BUSY_RECOVERY: return \"BE_SQLITE_BUSY_RECOVERY\";\n            case DbResult.BE_SQLITE_CANTOPEN_NOTEMPDIR: return \"SQLite No Temp Dir\";\n            case DbResult.BE_SQLITE_CANTOPEN_ISDIR: return \"BE_SQLITE_CANTOPEN_ISDIR\";\n            case DbResult.BE_SQLITE_CANTOPEN_FULLPATH: return \"BE_SQLITE_CANTOPEN_FULLPATH\";\n            case DbResult.BE_SQLITE_CORRUPT_VTAB: return \"BE_SQLITE_CORRUPT_VTAB\";\n            case DbResult.BE_SQLITE_READONLY_RECOVERY: return \"BE_SQLITE_READONLY_RECOVERY\";\n            case DbResult.BE_SQLITE_READONLY_CANTLOCK: return \"BE_SQLITE_READONLY_CANTLOCK\";\n            case DbResult.BE_SQLITE_READONLY_ROLLBACK: return \"BE_SQLITE_READONLY_ROLLBACK\";\n            case DbResult.BE_SQLITE_ABORT_ROLLBACK: return \"BE_SQLITE_ABORT_ROLLBACK\";\n            case DbResult.BE_SQLITE_CONSTRAINT_CHECK: return \"BE_SQLITE_CONSTRAINT_CHECK\";\n            case DbResult.BE_SQLITE_CONSTRAINT_COMMITHOOK: return \"CommitHook Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_FOREIGNKEY: return \"Foreign Key Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_FUNCTION: return \"Function Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_NOTNULL: return \"NotNull Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_PRIMARYKEY: return \"Primary Key Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_TRIGGER: return \"Trigger Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_UNIQUE: return \"Unique Constraint Error\";\n            case DbResult.BE_SQLITE_CONSTRAINT_VTAB: return \"VTable Constraint Error\";\n            case BentleyStatus.ERROR: return \"Error\";\n            case BriefcaseStatus.CannotAcquire: return \"CannotAcquire\";\n            case BriefcaseStatus.CannotDownload: return \"CannotDownload\";\n            case BriefcaseStatus.CannotCopy: return \"CannotCopy\";\n            case BriefcaseStatus.CannotDelete: return \"CannotDelete\";\n            case BriefcaseStatus.VersionNotFound: return \"VersionNotFound\";\n            case BriefcaseStatus.DownloadCancelled: return \"DownloadCancelled\";\n            case BriefcaseStatus.ContainsDeletedChangeSets: return \"ContainsDeletedChangeSets\";\n            case RpcInterfaceStatus.IncompatibleVersion: return \"RpcInterfaceStatus.IncompatibleVersion\";\n            case ChangeSetStatus.ApplyError: return \"Error applying a change set\";\n            case ChangeSetStatus.ChangeTrackingNotEnabled: return \"Change tracking has not been enabled. The ChangeSet API mandates this\";\n            case ChangeSetStatus.CorruptedChangeStream: return \"Contents of the change stream are corrupted and does not match the ChangeSet\";\n            case ChangeSetStatus.FileNotFound: return \"File containing the changes was not found\";\n            case ChangeSetStatus.FileWriteError: return \"Error writing the contents of the change set to the backing change stream file\";\n            case ChangeSetStatus.HasLocalChanges: return \"Cannot perform the operation since the Db has local changes\";\n            case ChangeSetStatus.HasUncommittedChanges: return \"Cannot perform the operation since current transaction has uncommitted changes\";\n            case ChangeSetStatus.InvalidId: return \"Invalid ChangeSet Id\";\n            case ChangeSetStatus.InvalidVersion: return \"Invalid version of the change set\";\n            case ChangeSetStatus.InDynamicTransaction: return \"Cannot perform the operation since system is in the middle of a dynamic transaction\";\n            case ChangeSetStatus.IsCreatingChangeSet: return \"Cannot perform operation since system is in the middle of a creating a change set\";\n            case ChangeSetStatus.IsNotCreatingChangeSet: return \"Cannot perform operation since the system is not creating a change set\";\n            case ChangeSetStatus.MergePropagationError: return \"Error propagating the changes after the merge\";\n            case ChangeSetStatus.NothingToMerge: return \"No change sets to merge\";\n            case ChangeSetStatus.NoTransactions: return \"No transactions are available to create a change set\";\n            case ChangeSetStatus.ParentMismatch: return \"Parent change set of the Db does not match the parent id of the change set\";\n            case ChangeSetStatus.SQLiteError: return \"Error performing a SQLite operation on the Db\";\n            case ChangeSetStatus.WrongDgnDb: return \"ChangeSet originated in a different Db\";\n            case ChangeSetStatus.CouldNotOpenDgnDb: return \"Could not open the DgnDb to merge change set\";\n            case ChangeSetStatus.MergeSchemaChangesOnOpen: return \"Cannot merge changes in in an open DgnDb. Close the DgnDb, and process the operation when it is opened\";\n            case ChangeSetStatus.ReverseOrReinstateSchemaChanges: return \"Cannot reverse or reinstate schema changes.\";\n            case ChangeSetStatus.ProcessSchemaChangesOnOpen: return \"Cannot process changes schema changes in an open DgnDb. Close the DgnDb, and process the operation when it is opened\";\n            case ChangeSetStatus.CannotMergeIntoReadonly: return \"Cannot merge changes into a Readonly DgnDb\";\n            case ChangeSetStatus.CannotMergeIntoMaster: return \"Cannot merge changes into a Master DgnDb\";\n            case ChangeSetStatus.CannotMergeIntoReversed: return \"Cannot merge changes into a DgnDb that has reversed change sets\";\n            case ChangeSetStatus.DownloadCancelled: return \"ChangeSet(s) download was cancelled.\";\n            case RepositoryStatus.ServerUnavailable: return \"ServerUnavailable\";\n            case RepositoryStatus.LockAlreadyHeld: return \"LockAlreadyHeld\";\n            case RepositoryStatus.SyncError: return \"SyncError\";\n            case RepositoryStatus.InvalidResponse: return \"InvalidResponse\";\n            case RepositoryStatus.PendingTransactions: return \"PendingTransactions\";\n            case RepositoryStatus.LockUsed: return \"LockUsed\";\n            case RepositoryStatus.CannotCreateChangeSet: return \"CannotCreateChangeSet\";\n            case RepositoryStatus.InvalidRequest: return \"InvalidRequest\";\n            case RepositoryStatus.ChangeSetRequired: return \"ChangeSetRequired\";\n            case RepositoryStatus.CodeUnavailable: return \"CodeUnavailable\";\n            case RepositoryStatus.CodeNotReserved: return \"CodeNotReserved\";\n            case RepositoryStatus.CodeUsed: return \"CodeUsed\";\n            case RepositoryStatus.LockNotHeld: return \"LockNotHeld\";\n            case RepositoryStatus.RepositoryIsLocked: return \"RepositoryIsLocked\";\n            case RepositoryStatus.ChannelConstraintViolation: return \"ChannelConstraintViolation\";\n            case HttpStatus.Info: return \"HTTP Info\";\n            case HttpStatus.Redirection: return \"HTTP Redirection\";\n            case HttpStatus.ClientError: return \"HTTP Client error\";\n            case HttpStatus.ServerError: return \"HTTP Server error\";\n            case IModelHubStatus.Unknown: return \"Unknown error\";\n            case IModelHubStatus.MissingRequiredProperties: return \"Missing required properties\";\n            case IModelHubStatus.InvalidPropertiesValues: return \"Invalid properties values\";\n            case IModelHubStatus.UserDoesNotHavePermission: return \"User does not have permission\";\n            case IModelHubStatus.UserDoesNotHaveAccess: return \"User does not have access\";\n            case IModelHubStatus.InvalidBriefcase: return \"Invalid briefcase\";\n            case IModelHubStatus.BriefcaseDoesNotExist: return \"Briefcase does not exist\";\n            case IModelHubStatus.BriefcaseDoesNotBelongToUser: return \"Briefcase does not belong to user\";\n            case IModelHubStatus.AnotherUserPushing: return \"Another user pushing\";\n            case IModelHubStatus.ChangeSetAlreadyExists: return \"ChangeSet already exists\";\n            case IModelHubStatus.ChangeSetDoesNotExist: return \"ChangeSet does not exist\";\n            case IModelHubStatus.FileIsNotUploaded: return \"File is not uploaded\";\n            case IModelHubStatus.iModelIsNotInitialized: return \"iModel is not initialized\";\n            case IModelHubStatus.ChangeSetPointsToBadSeed: return \"ChangeSet points to a bad seed file\";\n            case IModelHubStatus.OperationFailed: return \"iModelHub operation has failed\";\n            case IModelHubStatus.PullIsRequired: return \"Pull is required\";\n            case IModelHubStatus.MaximumNumberOfBriefcasesPerUser: return \"Limit of briefcases per user was reached\";\n            case IModelHubStatus.MaximumNumberOfBriefcasesPerUserPerMinute: return \"Limit of briefcases per user per minute was reached\";\n            case IModelHubStatus.DatabaseTemporarilyLocked: return \"Database is temporarily locked\";\n            case IModelHubStatus.iModelIsLocked: return \"iModel is locked\";\n            case IModelHubStatus.CodesExist: return \"Code already exists\";\n            case IModelHubStatus.LocksExist: return \"Lock already exists\";\n            case IModelHubStatus.iModelAlreadyExists: return \"iModel already exists\";\n            case IModelHubStatus.iModelDoesNotExist: return \"iModel does not exist\";\n            case IModelHubStatus.LockDoesNotExist: return \"Lock does not exist\";\n            case IModelHubStatus.LockChunkDoesNotExist: return \"Lock chunk does not exist\";\n            case IModelHubStatus.LockOwnedByAnotherBriefcase: return \"Lock is owned by another briefcase\";\n            case IModelHubStatus.CodeStateInvalid: return \"Code state is invalid\";\n            case IModelHubStatus.CodeReservedByAnotherBriefcase: return \"Code is reserved by another briefcase\";\n            case IModelHubStatus.CodeDoesNotExist: return \"Code does not exist\";\n            case IModelHubStatus.FileDoesNotExist: return \"File does not exist\";\n            case IModelHubStatus.FileAlreadyExists: return \"File already exists\";\n            case IModelHubStatus.EventTypeDoesNotExist: return \"Event type does not exist\";\n            case IModelHubStatus.EventSubscriptionDoesNotExist: return \"Event subscription does not exist\";\n            case IModelHubStatus.EventSubscriptionAlreadyExists: return \"Event subscription already exists\";\n            case IModelHubStatus.ITwinIdIsNotSpecified: return \"ITwin Id is not specified\";\n            case IModelHubStatus.FailedToGetITwinPermissions: return \"Failed to get iTwin permissions\";\n            case IModelHubStatus.FailedToGetITwinMembers: return \"Failed to get iTwin members\";\n            case IModelHubStatus.FailedToGetAssetPermissions: return \"Failed to get asset permissions\";\n            case IModelHubStatus.FailedToGetAssetMembers: return \"Failed to get asset members\";\n            case IModelHubStatus.ChangeSetAlreadyHasVersion: return \"ChangeSet already has version\";\n            case IModelHubStatus.VersionAlreadyExists: return \"Version already exists\";\n            case IModelHubStatus.JobSchedulingFailed: return \"Failed to schedule a background job\";\n            case IModelHubStatus.ConflictsAggregate: return \"Codes or locks are owned by another briefcase\";\n            case IModelHubStatus.FailedToGetITwinById: return \"Failed to query iTwin by its id\";\n            case IModelHubStatus.DatabaseOperationFailed: return \"Database operation has failed\";\n            case IModelHubStatus.ITwinDoesNotExist: return \"ITwin does not exist\";\n            case IModelHubStatus.UndefinedArgumentError: return \"Undefined argument\";\n            case IModelHubStatus.InvalidArgumentError: return \"Invalid argument\";\n            case IModelHubStatus.MissingDownloadUrlError: return \"Missing download url\";\n            case IModelHubStatus.NotSupportedInBrowser: return \"Not supported in browser\";\n            case IModelHubStatus.FileHandlerNotSet: return \"File handler is not set\";\n            case IModelHubStatus.FileNotFound: return \"File not found\";\n            case GeoServiceStatus.NoGeoLocation: return \"No GeoLocation\";\n            case GeoServiceStatus.OutOfUsefulRange: return \"Out of useful range\";\n            case GeoServiceStatus.OutOfMathematicalDomain: return \"Out of mathematical domain\";\n            case GeoServiceStatus.NoDatumConverter: return \"No datum converter\";\n            case GeoServiceStatus.VerticalDatumConvertError: return \"Vertical datum convert error\";\n            case GeoServiceStatus.CSMapError: return \"CSMap error\";\n            case GeoServiceStatus.Pending: return \"Pending\";\n            case RealityDataStatus.InvalidData: return \"Invalid or unknown data\";\n            case IModelStatus.Success:\n            case DbResult.BE_SQLITE_OK:\n            case DbResult.BE_SQLITE_ROW:\n            case DbResult.BE_SQLITE_DONE:\n            case BentleyStatus.SUCCESS:\n                return \"Success\";\n            default:\n                return `Error (${this.errorNumber})`;\n        }\n    }\n    /** Use run-time type checking to safely get a useful string summary of an unknown error value, or `\"\"` if none exists.\n     * @note It's recommended to use this function in `catch` clauses, where a caught value cannot be assumed to be `instanceof Error`\n     * @public\n     */\n    static getErrorMessage(error) {\n        if (typeof error === \"string\")\n            return error;\n        if (error instanceof Error)\n            return error.toString();\n        if (isObject(error)) {\n            if (typeof error.message === \"string\")\n                return error.message;\n            if (typeof error.msg === \"string\")\n                return error.msg;\n            if (error.toString() !== \"[object Object]\")\n                return error.toString();\n        }\n        return \"\";\n    }\n    /** Use run-time type checking to safely get the call stack of an unknown error value, if possible.\n     * @note It's recommended to use this function in `catch` clauses, where a caught value cannot be assumed to be `instanceof Error`\n     * @public\n     */\n    static getErrorStack(error) {\n        if (isObject(error) && typeof error.stack === \"string\")\n            return error.stack;\n        return undefined;\n    }\n    /** Use run-time type checking to safely get the metadata with an unknown error value, if possible.\n     * @note It's recommended to use this function in `catch` clauses, where a caught value cannot be assumed to be `instanceof BentleyError`\n     * @see [[BentleyError.getMetaData]]\n     * @public\n     */\n    static getErrorMetadata(error) {\n        if (isObject(error) && typeof error.getMetaData === \"function\") {\n            const metadata = error.getMetaData();\n            if (typeof metadata === \"object\" && metadata !== null)\n                return metadata;\n        }\n        return undefined;\n    }\n    /** Returns a new `ErrorProps` object representing an unknown error value.  Useful for logging or wrapping/re-throwing caught errors.\n     * @note Unlike `Error` objects (which lose messages and call stacks when serialized to JSON), objects\n     *       returned by this are plain old JavaScript objects, and can be easily logged/serialized to JSON.\n     * @public\n     */\n    static getErrorProps(error) {\n        const serialized = {\n            message: BentleyError.getErrorMessage(error),\n        };\n        const stack = BentleyError.getErrorStack(error);\n        if (stack)\n            serialized.stack = stack;\n        const metadata = BentleyError.getErrorMetadata(error);\n        if (metadata)\n            serialized.metadata = metadata;\n        return serialized;\n    }\n}\n//# sourceMappingURL=BentleyError.js.map",
      "start": 1693508120030,
      "end": 1693508120385,
      "sourcemaps": null
    }
  ]
}
