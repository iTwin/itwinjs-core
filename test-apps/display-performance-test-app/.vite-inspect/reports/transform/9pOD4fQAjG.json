{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/orbitgt/lib/esm/pointcloud/model/ReadRequest.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module OrbitGT\n */\nimport { AList } from \"../../system/collection/AList\";\nimport { ALong } from \"../../system/runtime/ALong\";\nimport { Strings } from \"../../system/runtime/Strings\";\n/**\n * Class ReadRequest allows selective reading of information from a point cloud file.\n *\n * @version 1.0 December 2011\n */\n/** @internal */\nclass ReadRequest {\n    /**\n     * Create a new request to read all data (geometry and attributes) (except deleted points).\n     */\n    constructor() {\n        /* Read the geometry */\n        this._readGeometryAttribute = true;\n        /* Read all standard attributes */\n        this._readColorAttribute = true;\n        this._readIntensityAttribute = true;\n        this._readWeightAttribute = true;\n        this._thinning = 0;\n        /* Read all extra attributes */\n        this._extraAttributes = new AList();\n        this._extraAttributes.add(\"*\");\n        /* Default to not reading deleted points */\n        this._readDeletedAttribute = false;\n        /* Clear */\n        this._areaFilter = null;\n        this._dataTransactions = 0;\n        this._dataSize = ALong.ZERO;\n        this._dataReadTime = ALong.ZERO;\n    }\n    /**\n     * Create a new request.\n     * @param readColor should the color be read?\n     * @param readIntensity should the intensity be read?\n     * @param readWeight should the weight be read?\n     * @param thinning should thinning be used?\n     */\n    static create(readColor, readIntensity, readWeight, thinning) {\n        let request = new ReadRequest();\n        request._readColorAttribute = readColor;\n        request._readIntensityAttribute = readIntensity;\n        request._readWeightAttribute = readWeight;\n        request._thinning = thinning;\n        request._extraAttributes.clear();\n        return request;\n    }\n    /**\n     * Create the request to only read the geometry.\n     * @return the request.\n     */\n    static getGeometry() {\n        return ReadRequest.create(false /*color*/, false /*intensity*/, false /*weight*/, 0 /*thinning*/);\n    }\n    /**\n     * Create the request to only read the geometry and colot.\n     * @return the request.\n     */\n    static getGeometryAndColor() {\n        return ReadRequest.create(true /*color*/, false /*intensity*/, false /*weight*/, 0 /*thinning*/);\n    }\n    /**\n     * Create the request to read the full geometry and all attributes.\n     * @return the request.\n     */\n    static getGeometryAndAttributes() {\n        return new ReadRequest();\n    }\n    /**\n     * Should the geometry be read?\n     * @return true if it should be read.\n     */\n    readGeometry() {\n        return this._readGeometryAttribute;\n    }\n    /**\n     * Should the geometry be read?\n     * @param read true if it should be read.\n     */\n    setReadGeometry(read) {\n        this._readGeometryAttribute = read;\n    }\n    /**\n     * Should the color be read?\n     * @return true if it should be read.\n     */\n    readColor() {\n        return this._readColorAttribute;\n    }\n    /**\n     * Should the intensity be read?\n     * @return true if it should be read.\n     */\n    readIntensity() {\n        return this._readIntensityAttribute;\n    }\n    /**\n     * Should the weight be read?\n     * @return true if it should be read.\n     */\n    readWeight() {\n        return this._readWeightAttribute;\n    }\n    /**\n     * Should thinning be used?\n     * @return the thinning factor.\n     */\n    getThinning() {\n        return this._thinning;\n    }\n    /**\n     * Should the deleted points be read?\n     * @return true if they should be read.\n     */\n    readDeleted() {\n        return this._readDeletedAttribute;\n    }\n    /**\n     * Should the deleted points be read?\n     * @param read true if they should be read.\n     */\n    setReadDeleted(read) {\n        this._readDeletedAttribute = read;\n    }\n    /**\n     * Should all extra attributes be read?\n     * @return true if all extra attribute should be read.\n     */\n    readAllExtraAttributes() {\n        if (this._extraAttributes.size() != 1)\n            return false;\n        let extraAttribute = this._extraAttributes.get(0);\n        return Strings.equals(extraAttribute, \"*\");\n    }\n    /**\n     * Get the list of extra attributes to read.\n     * @return the list of extra attributes to read.\n     */\n    getExtraAttributes() {\n        return this._extraAttributes;\n    }\n    /**\n     * Set the list of extra attributes to read.\n     * @param list the list of extra attributes to read.\n     */\n    setExtraAttributes(list) {\n        this._extraAttributes = list;\n    }\n    /**\n     * Add the name of an extra attribute to read.\n     * @param attributeName the name of the attribute to read.\n     * @return this request for convenient chaining.\n     */\n    addExtraAttribute(attributeName) {\n        this._extraAttributes.add(attributeName);\n        return this;\n    }\n    /**\n     * Get the area filter.\n     * @return the area filter.\n     */\n    getAreaFilter() {\n        return this._areaFilter;\n    }\n    /**\n     * Set the area filter.\n     * @param filter the new area filter.\n     */\n    setAreaFilter(filter) {\n        this._areaFilter = filter;\n    }\n    /**\n     * Add a number of bytes to the data size.\n     * @param size the number of bytes.\n     */\n    addDataSize(size) {\n        this._dataSize = this._dataSize.addInt(size);\n        this._dataTransactions++;\n    }\n    /**\n     * Get the data size of the request.\n     * @return the number of bytes.\n     */\n    getDataSize() {\n        return this._dataSize;\n    }\n    /**\n     * Clear the data size of the request.\n     */\n    clearDataSize() {\n        this._dataSize = ALong.ZERO;\n        this._dataTransactions = 0;\n    }\n    /**\n     * Get the number of data transactions.\n     * @return the number of data transactions.\n     */\n    getDataTransactions() {\n        return this._dataTransactions;\n    }\n    /**\n     * Add a number of nanoseconds to the data read time.\n     * @param time the number of nanoseconds.\n     */\n    addDataReadTime(time) {\n        this._dataReadTime = this._dataReadTime.add(time);\n    }\n    /**\n     * Get the data read time of the request.\n     * @return the number of nanoseconds.\n     */\n    getDataReadTime() {\n        return this._dataReadTime;\n    }\n    /**\n     * Clear the data read time of the request.\n     */\n    clearDataReadTime() {\n        this._dataReadTime = ALong.ZERO;\n    }\n}\n/** The request to only read the geometry */\nReadRequest.READ_GEOMETRY = ReadRequest.getGeometry();\n/** The request to only read the geometry and color */\nReadRequest.READ_GEOMETRY_AND_COLOR = ReadRequest.getGeometryAndColor();\n/** The request to read geometry and attributes */\nReadRequest.READ_ALL = ReadRequest.getGeometryAndAttributes();\nexport { ReadRequest };\n//# sourceMappingURL=ReadRequest.js.map",
      "start": 1693508125334,
      "end": 1693508125385,
      "sourcemaps": null
    }
  ]
}
