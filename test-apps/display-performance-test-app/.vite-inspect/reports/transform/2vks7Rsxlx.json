{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/geometry/LineStyle.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Symbology\n */\nimport { Vector3d, YawPitchRollAngles } from \"@itwin/core-geometry\";\n/** @public */\nexport var LineStyle;\n(function (LineStyle) {\n    /** Optional modifiers to override line style definition */\n    class Modifier {\n        /** constructor for LineStyle.Modifier */\n        constructor(props) {\n            this.scale = props.scale;\n            this.dashScale = props.dashScale;\n            this.gapScale = props.gapScale;\n            this.startWidth = props.startWidth;\n            this.endWidth = props.endWidth;\n            this.distPhase = props.distPhase;\n            this.fractPhase = props.fractPhase;\n            this.centerPhase = props.centerPhase;\n            this.segmentMode = props.segmentMode;\n            this.physicalWidth = props.physicalWidth;\n            this.normal = props.normal ? Vector3d.fromJSON(props.normal) : undefined;\n            this.rotation = props.rotation ? YawPitchRollAngles.fromJSON(props.rotation) : undefined;\n        }\n        /** Returns a deep copy of this object. */\n        clone() {\n            return new Modifier(this);\n        }\n        /** Compare two LineStyle.Modifier for equivalence */\n        equals(other) {\n            if (this === other) // same pointer\n                return true;\n            if (other.scale !== this.scale ||\n                other.dashScale !== this.dashScale ||\n                other.gapScale !== this.gapScale ||\n                other.startWidth !== this.startWidth ||\n                other.endWidth !== this.endWidth ||\n                other.distPhase !== this.distPhase ||\n                other.fractPhase !== this.fractPhase ||\n                other.centerPhase !== this.centerPhase ||\n                other.segmentMode !== this.segmentMode ||\n                other.physicalWidth !== this.physicalWidth)\n                return false;\n            if ((this.normal === undefined) !== (other.normal === undefined))\n                return false;\n            if (this.normal && !this.normal.isAlmostEqual(other.normal))\n                return false;\n            if ((this.rotation === undefined) !== (other.rotation === undefined))\n                return false;\n            if (this.rotation && !this.rotation.isAlmostEqual(other.rotation))\n                return false;\n            return true;\n        }\n        applyTransform(transform) {\n            if (transform.isIdentity)\n                return true;\n            if (this.normal) {\n                transform.matrix.multiplyVector(this.normal, this.normal);\n                const normalized = this.normal.normalize();\n                if (normalized)\n                    this.normal.setFrom(normalized);\n                else\n                    return false;\n            }\n            if (this.rotation) {\n                const newTransform = this.rotation.toMatrix3d().multiplyMatrixTransform(transform);\n                const scales = new Vector3d();\n                if (!newTransform.matrix.normalizeColumnsInPlace(scales))\n                    return false;\n                const newRotation = YawPitchRollAngles.createFromMatrix3d(newTransform.matrix);\n                if (undefined === newRotation)\n                    return false;\n                this.rotation.setFrom(newRotation);\n            }\n            let scaleFactor;\n            const scaleVector = Vector3d.create();\n            const scaleMatrix = transform.matrix;\n            scaleMatrix.normalizeRowsInPlace(scaleVector);\n            // Check for flatten transform, dividing scaleVector by 3 gives wrong scaleFactor\n            if (scaleVector.x !== 0.0 && scaleVector.y !== 0.0 && scaleVector.z !== 0.0)\n                scaleFactor = (scaleVector.x + scaleVector.y + scaleVector.z) / 3.0;\n            else\n                scaleFactor = (scaleVector.x + scaleVector.y + scaleVector.z) / 2.0;\n            if (1.0 === scaleFactor)\n                return true;\n            if (this.scale)\n                this.scale *= scaleFactor;\n            if (this.physicalWidth)\n                return true;\n            if (this.startWidth)\n                this.startWidth *= scaleFactor;\n            if (this.endWidth)\n                this.endWidth *= scaleFactor;\n            return true;\n        }\n    }\n    LineStyle.Modifier = Modifier;\n    /** Line style id and optional modifiers to override line style definition */\n    class Info {\n        /** Creates a LineStyle.Info object */\n        constructor(styleId, styleMod) {\n            this.styleId = styleId;\n            this.styleMod = styleMod;\n        }\n        /** Returns a deep copy of this object. */\n        clone() {\n            return new Info(this.styleId, this.styleMod ? this.styleMod.clone() : undefined);\n        }\n        equals(other) {\n            if (this === other)\n                return true;\n            if (this.styleId !== other.styleId)\n                return false;\n            if ((this.styleMod === undefined) !== (other.styleMod === undefined))\n                return false;\n            if (this.styleMod && !this.styleMod.equals(other.styleMod))\n                return false;\n            return true;\n        }\n    }\n    LineStyle.Info = Info;\n})(LineStyle || (LineStyle = {}));\n//# sourceMappingURL=LineStyle.js.map",
      "start": 1693508120579,
      "end": 1693508120676,
      "sourcemaps": null
    }
  ]
}
