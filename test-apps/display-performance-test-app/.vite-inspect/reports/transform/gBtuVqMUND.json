{
  "resolvedId": "D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/@itwin+browser-authorization@1.0.1_67wltvhdskk2oee2c3z2o4tfly/node_modules/@itwin/browser-authorization/lib/cjs/Logger.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BrowserAuthorizationLogger = void 0;\r\n/** @packageDocumentation\r\n * @module Logging\r\n */\r\nconst core_bentley_1 = require(\"@itwin/core-bentley\");\r\nconst oidc_client_ts_1 = require(\"oidc-client-ts\");\r\nconst LoggerCategory_1 = require(\"./LoggerCategory\");\r\n/**\r\n * Utility to forward oidc-client logs to the Bentley logger\r\n * Because the logger used by the oidc-client library is static, we can't tie specific UserManager instances to different logging categories.\r\n * Thus, the best we can do is tie all logs originating from the library to a single logging category (derived from the name of this class).\r\n * @beta\r\n */\r\nclass BrowserAuthorizationLogger {\r\n    constructor() {\r\n    }\r\n    debug(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logTrace(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    info(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logInfo(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    warn(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logWarning(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    error(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logError(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    static getLogLevel(loggerCategory) {\r\n        const logLevel = core_bentley_1.Logger.getLevel(loggerCategory);\r\n        switch (logLevel) {\r\n            case core_bentley_1.LogLevel.Error:\r\n                return oidc_client_ts_1.Log.ERROR;\r\n            case core_bentley_1.LogLevel.Warning:\r\n                return oidc_client_ts_1.Log.WARN;\r\n            case core_bentley_1.LogLevel.Info:\r\n                return oidc_client_ts_1.Log.INFO;\r\n            case core_bentley_1.LogLevel.Trace:\r\n                return oidc_client_ts_1.Log.DEBUG;\r\n            case core_bentley_1.LogLevel.None:\r\n                return oidc_client_ts_1.Log.NONE;\r\n            default:\r\n                return oidc_client_ts_1.Log.NONE;\r\n        }\r\n    }\r\n    /** Initializes forwarding of OidcClient logs to the Bentley Logger */\r\n    static initializeLogger() {\r\n        const logLevel = BrowserAuthorizationLogger.getLogLevel(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization);\r\n        if (!BrowserAuthorizationLogger.initialized) {\r\n            oidc_client_ts_1.Log.setLogger(new BrowserAuthorizationLogger());\r\n        }\r\n        oidc_client_ts_1.Log.setLevel(logLevel);\r\n        BrowserAuthorizationLogger.initialized = true;\r\n    }\r\n}\r\nexports.BrowserAuthorizationLogger = BrowserAuthorizationLogger;\r\nBrowserAuthorizationLogger.initialized = false;\r\n//# sourceMappingURL=Logger.js.map",
      "start": 1693508119923,
      "end": 1693508120316,
      "sourcemaps": null
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as Logger } from \"\\u0000D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/@itwin+browser-authorization@1.0.1_67wltvhdskk2oee2c3z2o4tfly/node_modules/@itwin/browser-authorization/lib/cjs/Logger.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/hub2023A/itwinjs-core/core/bentley/lib/esm/core-bentley.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/oidc-client-ts@2.2.4/node_modules/oidc-client-ts/dist/umd/oidc-client-ts.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/@itwin+browser-authorization@1.0.1_67wltvhdskk2oee2c3z2o4tfly/node_modules/@itwin/browser-authorization/lib/cjs/LoggerCategory.js?commonjs-proxy\";\n\n\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(Logger, \"__esModule\", { value: true });\r\nvar BrowserAuthorizationLogger_1 = Logger.BrowserAuthorizationLogger = void 0;\r\n/** @packageDocumentation\r\n * @module Logging\r\n */\r\nconst core_bentley_1 = require$$0;\r\nconst oidc_client_ts_1 = require$$1;\r\nconst LoggerCategory_1 = require$$2;\r\n/**\r\n * Utility to forward oidc-client logs to the Bentley logger\r\n * Because the logger used by the oidc-client library is static, we can't tie specific UserManager instances to different logging categories.\r\n * Thus, the best we can do is tie all logs originating from the library to a single logging category (derived from the name of this class).\r\n * @beta\r\n */\r\nclass BrowserAuthorizationLogger {\r\n    constructor() {\r\n    }\r\n    debug(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logTrace(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    info(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logInfo(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    warn(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logWarning(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    error(message, ...optionalParams) {\r\n        core_bentley_1.Logger.logError(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization, message, () => optionalParams);\r\n    }\r\n    static getLogLevel(loggerCategory) {\r\n        const logLevel = core_bentley_1.Logger.getLevel(loggerCategory);\r\n        switch (logLevel) {\r\n            case core_bentley_1.LogLevel.Error:\r\n                return oidc_client_ts_1.Log.ERROR;\r\n            case core_bentley_1.LogLevel.Warning:\r\n                return oidc_client_ts_1.Log.WARN;\r\n            case core_bentley_1.LogLevel.Info:\r\n                return oidc_client_ts_1.Log.INFO;\r\n            case core_bentley_1.LogLevel.Trace:\r\n                return oidc_client_ts_1.Log.DEBUG;\r\n            case core_bentley_1.LogLevel.None:\r\n                return oidc_client_ts_1.Log.NONE;\r\n            default:\r\n                return oidc_client_ts_1.Log.NONE;\r\n        }\r\n    }\r\n    /** Initializes forwarding of OidcClient logs to the Bentley Logger */\r\n    static initializeLogger() {\r\n        const logLevel = BrowserAuthorizationLogger.getLogLevel(LoggerCategory_1.BrowserAuthorizationLoggerCategory.Authorization);\r\n        if (!BrowserAuthorizationLogger.initialized) {\r\n            oidc_client_ts_1.Log.setLogger(new BrowserAuthorizationLogger());\r\n        }\r\n        oidc_client_ts_1.Log.setLevel(logLevel);\r\n        BrowserAuthorizationLogger.initialized = true;\r\n    }\r\n}\r\nBrowserAuthorizationLogger_1 = Logger.BrowserAuthorizationLogger = BrowserAuthorizationLogger;\r\nBrowserAuthorizationLogger.initialized = false;\r\n//# sourceMappingURL=Logger.js.map\n\nexport { Logger as __moduleExports, BrowserAuthorizationLogger_1 as BrowserAuthorizationLogger, Logger as default };",
      "start": 1693508120316,
      "end": 1693508123963,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    }
  ]
}
