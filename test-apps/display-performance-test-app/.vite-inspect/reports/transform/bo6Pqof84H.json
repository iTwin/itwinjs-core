{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/geometry/ElementGeometryFB.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Serialization\n */\nimport { flatbuffers } from \"flatbuffers\";\n/* eslint-disable @typescript-eslint/naming-convention */\n/* eslint-disable @typescript-eslint/explicit-member-accessibility */\n/* eslint-disable @itwin/prefer-get */\n/* eslint-disable no-var */\n// cspell:word flatbuffers\n/** @internal */\nexport var EGFBAccessors;\n(function (EGFBAccessors) {\n    // automatically generated by the FlatBuffers compiler, do not modify\n    /**\n     * @enum {number}\n     */\n    let GradientMode;\n    (function (GradientMode) {\n        GradientMode[GradientMode[\"None\"] = 0] = \"None\";\n        GradientMode[GradientMode[\"Linear\"] = 1] = \"Linear\";\n        GradientMode[GradientMode[\"Curved\"] = 2] = \"Curved\";\n        GradientMode[GradientMode[\"Cylindrical\"] = 3] = \"Cylindrical\";\n        GradientMode[GradientMode[\"Spherical\"] = 4] = \"Spherical\";\n        GradientMode[GradientMode[\"Hemispherical\"] = 5] = \"Hemispherical\";\n        GradientMode[GradientMode[\"Thematic\"] = 6] = \"Thematic\";\n    })(GradientMode = EGFBAccessors.GradientMode || (EGFBAccessors.GradientMode = {}));\n    /**\n     * @enum {number}\n     */\n    let BoundaryType;\n    (function (BoundaryType) {\n        BoundaryType[BoundaryType[\"None\"] = 0] = \"None\";\n        BoundaryType[BoundaryType[\"Open\"] = 1] = \"Open\";\n        BoundaryType[BoundaryType[\"Closed\"] = 2] = \"Closed\";\n    })(BoundaryType = EGFBAccessors.BoundaryType || (EGFBAccessors.BoundaryType = {}));\n    /**\n     * @enum {number}\n     */\n    let FillDisplay;\n    (function (FillDisplay) {\n        FillDisplay[FillDisplay[\"None\"] = 0] = \"None\";\n        FillDisplay[FillDisplay[\"ByView\"] = 1] = \"ByView\";\n        FillDisplay[FillDisplay[\"Always\"] = 2] = \"Always\";\n        FillDisplay[FillDisplay[\"Blanking\"] = 3] = \"Blanking\";\n    })(FillDisplay = EGFBAccessors.FillDisplay || (EGFBAccessors.FillDisplay = {}));\n    /**\n     * @enum {number}\n     */\n    let GeometryClass;\n    (function (GeometryClass) {\n        GeometryClass[GeometryClass[\"Primary\"] = 0] = \"Primary\";\n        GeometryClass[GeometryClass[\"Construction\"] = 1] = \"Construction\";\n        GeometryClass[GeometryClass[\"Dimension\"] = 2] = \"Dimension\";\n        GeometryClass[GeometryClass[\"Pattern\"] = 3] = \"Pattern\";\n    })(GeometryClass = EGFBAccessors.GeometryClass || (EGFBAccessors.GeometryClass = {}));\n    /**\n     * @enum {number}\n     */\n    let BRepType;\n    (function (BRepType) {\n        BRepType[BRepType[\"Solid\"] = 0] = \"Solid\";\n        BRepType[BRepType[\"Sheet\"] = 1] = \"Sheet\";\n        BRepType[BRepType[\"Wire\"] = 2] = \"Wire\";\n    })(BRepType = EGFBAccessors.BRepType || (EGFBAccessors.BRepType = {}));\n    /**\n     * @constructor\n     */\n    class DPoint3d {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DPoint3d\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        y() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        z() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x\n         * @param number y\n         * @param number z\n         * @returns flatbuffers.Offset\n         */\n        static createDPoint3d(builder, x, y, z) {\n            builder.prep(8, 24);\n            builder.writeFloat64(z);\n            builder.writeFloat64(y);\n            builder.writeFloat64(x);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.DPoint3d = DPoint3d;\n    /**\n     * @constructor\n     */\n    class DPoint2d {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DPoint2d\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        y() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x\n         * @param number y\n         * @returns flatbuffers.Offset\n         */\n        static createDPoint2d(builder, x, y) {\n            builder.prep(8, 16);\n            builder.writeFloat64(y);\n            builder.writeFloat64(x);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.DPoint2d = DPoint2d;\n    /**\n     * @constructor\n     */\n    class DVec3d {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DVec3d\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        y() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        z() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x\n         * @param number y\n         * @param number z\n         * @returns flatbuffers.Offset\n         */\n        static createDVec3d(builder, x, y, z) {\n            builder.prep(8, 24);\n            builder.writeFloat64(z);\n            builder.writeFloat64(y);\n            builder.writeFloat64(x);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.DVec3d = DVec3d;\n    /**\n     * @constructor\n     */\n    class RotMatrix {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns RotMatrix\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x00() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        x01() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        x02() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @returns number\n         */\n        x10() {\n            return this.bb.readFloat64(this.bb_pos + 24);\n        }\n        /**\n         * @returns number\n         */\n        x11() {\n            return this.bb.readFloat64(this.bb_pos + 32);\n        }\n        /**\n         * @returns number\n         */\n        x12() {\n            return this.bb.readFloat64(this.bb_pos + 40);\n        }\n        /**\n         * @returns number\n         */\n        x20() {\n            return this.bb.readFloat64(this.bb_pos + 48);\n        }\n        /**\n         * @returns number\n         */\n        x21() {\n            return this.bb.readFloat64(this.bb_pos + 56);\n        }\n        /**\n         * @returns number\n         */\n        x22() {\n            return this.bb.readFloat64(this.bb_pos + 64);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x00\n         * @param number x01\n         * @param number x02\n         * @param number x10\n         * @param number x11\n         * @param number x12\n         * @param number x20\n         * @param number x21\n         * @param number x22\n         * @returns flatbuffers.Offset\n         */\n        static createRotMatrix(builder, x00, x01, x02, x10, x11, x12, x20, x21, x22) {\n            builder.prep(8, 72);\n            builder.writeFloat64(x22);\n            builder.writeFloat64(x21);\n            builder.writeFloat64(x20);\n            builder.writeFloat64(x12);\n            builder.writeFloat64(x11);\n            builder.writeFloat64(x10);\n            builder.writeFloat64(x02);\n            builder.writeFloat64(x01);\n            builder.writeFloat64(x00);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.RotMatrix = RotMatrix;\n    /**\n     * @constructor\n     * @internal\n     */\n    class Transform {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Transform\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x00() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        x01() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        x02() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @returns number\n         */\n        tx() {\n            return this.bb.readFloat64(this.bb_pos + 24);\n        }\n        /**\n         * @returns number\n         */\n        x10() {\n            return this.bb.readFloat64(this.bb_pos + 32);\n        }\n        /**\n         * @returns number\n         */\n        x11() {\n            return this.bb.readFloat64(this.bb_pos + 40);\n        }\n        /**\n         * @returns number\n         */\n        x12() {\n            return this.bb.readFloat64(this.bb_pos + 48);\n        }\n        /**\n         * @returns number\n         */\n        ty() {\n            return this.bb.readFloat64(this.bb_pos + 56);\n        }\n        /**\n         * @returns number\n         */\n        x20() {\n            return this.bb.readFloat64(this.bb_pos + 64);\n        }\n        /**\n         * @returns number\n         */\n        x21() {\n            return this.bb.readFloat64(this.bb_pos + 72);\n        }\n        /**\n         * @returns number\n         */\n        x22() {\n            return this.bb.readFloat64(this.bb_pos + 80);\n        }\n        /**\n         * @returns number\n         */\n        tz() {\n            return this.bb.readFloat64(this.bb_pos + 88);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x00\n         * @param number x01\n         * @param number x02\n         * @param number tx\n         * @param number x10\n         * @param number x11\n         * @param number x12\n         * @param number ty\n         * @param number x20\n         * @param number x21\n         * @param number x22\n         * @param number tz\n         * @returns flatbuffers.Offset\n         */\n        static createTransform(builder, x00, x01, x02, tx, x10, x11, x12, ty, x20, x21, x22, tz) {\n            builder.prep(8, 96);\n            builder.writeFloat64(tz);\n            builder.writeFloat64(x22);\n            builder.writeFloat64(x21);\n            builder.writeFloat64(x20);\n            builder.writeFloat64(ty);\n            builder.writeFloat64(x12);\n            builder.writeFloat64(x11);\n            builder.writeFloat64(x10);\n            builder.writeFloat64(tx);\n            builder.writeFloat64(x02);\n            builder.writeFloat64(x01);\n            builder.writeFloat64(x00);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.Transform = Transform;\n    /**\n     * @constructor\n     */\n    class Trans2x3 {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Trans2x3\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x00() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        x01() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        tx() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @returns number\n         */\n        y00() {\n            return this.bb.readFloat64(this.bb_pos + 24);\n        }\n        /**\n         * @returns number\n         */\n        y01() {\n            return this.bb.readFloat64(this.bb_pos + 32);\n        }\n        /**\n         * @returns number\n         */\n        ty() {\n            return this.bb.readFloat64(this.bb_pos + 40);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x00\n         * @param number x01\n         * @param number tx\n         * @param number y00\n         * @param number y01\n         * @param number ty\n         * @returns flatbuffers.Offset\n         */\n        static createTrans2x3(builder, x00, x01, tx, y00, y01, ty) {\n            builder.prep(8, 48);\n            builder.writeFloat64(ty);\n            builder.writeFloat64(y01);\n            builder.writeFloat64(y00);\n            builder.writeFloat64(tx);\n            builder.writeFloat64(x01);\n            builder.writeFloat64(x00);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.Trans2x3 = Trans2x3;\n    /**\n     * @constructor\n     */\n    class FaceSymbology {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FaceSymbology\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        useColor() {\n            return this.bb.readUint8(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        useMaterial() {\n            return this.bb.readUint8(this.bb_pos + 1);\n        }\n        /**\n         * @returns number\n         */\n        color() {\n            return this.bb.readUint32(this.bb_pos + 4);\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        materialId() {\n            return this.bb.readInt64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        transparency() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @param DPoint2d= obj\n         * @returns DPoint2d|null\n         */\n        uv(obj) {\n            return (obj || new DPoint2d()).__init(this.bb_pos + 24, this.bb);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useColor\n         * @param number useMaterial\n         * @param number color\n         * @param flatbuffers.Long materialId\n         * @param number transparency\n         * @param number uv_x\n         * @param number uv_y\n         * @returns flatbuffers.Offset\n         */\n        static createFaceSymbology(builder, useColor, useMaterial, color, materialId, transparency, uv_x, uv_y) {\n            builder.prep(8, 40);\n            builder.prep(8, 16);\n            builder.writeFloat64(uv_y);\n            builder.writeFloat64(uv_x);\n            builder.writeFloat64(transparency);\n            builder.writeInt64(materialId);\n            builder.writeInt32(color);\n            builder.pad(2);\n            builder.writeInt8(useMaterial);\n            builder.writeInt8(useColor);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.FaceSymbology = FaceSymbology;\n    /**\n     * @constructor\n     */\n    class FaceSymbologyIndex {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns FaceSymbologyIndex\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        faceIndex() {\n            return this.bb.readUint32(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        symbIndex() {\n            return this.bb.readUint32(this.bb_pos + 4);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number faceIndex\n         * @param number symbIndex\n         * @returns flatbuffers.Offset\n         */\n        static createFaceSymbologyIndex(builder, faceIndex, symbIndex) {\n            builder.prep(4, 8);\n            builder.writeInt32(symbIndex);\n            builder.writeInt32(faceIndex);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.FaceSymbologyIndex = FaceSymbologyIndex;\n    /**\n     * @constructor\n     */\n    class DRange1d {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DRange1d\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        low() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        high() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number low\n         * @param number high\n         * @returns flatbuffers.Offset\n         */\n        static createDRange1d(builder, low, high) {\n            builder.prep(8, 16);\n            builder.writeFloat64(high);\n            builder.writeFloat64(low);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.DRange1d = DRange1d;\n    /**\n     * @constructor\n     */\n    class PointPrimitive {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns PointPrimitive\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param PointPrimitive= obj\n         * @returns PointPrimitive\n         */\n        static getRootAsPointPrimitive(bb, obj) {\n            return (obj || new PointPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param PointPrimitive= obj\n         * @returns PointPrimitive\n         */\n        static getSizePrefixedRootAsPointPrimitive(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new PointPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param number index\n         * @param DPoint3d= obj\n         * @returns DPoint3d\n         */\n        coords(index, obj) {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? (obj || new DPoint3d()).__init(this.bb.__vector(this.bb_pos + offset) + index * 24, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        coordsLength() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns BoundaryType\n         */\n        boundary() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : BoundaryType.None;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startPointPrimitive(builder) {\n            builder.startObject(2);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset coordsOffset\n         */\n        static addCoords(builder, coordsOffset) {\n            builder.addFieldOffset(0, coordsOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCoordsVector(builder, numElems) {\n            builder.startVector(24, numElems, 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param BoundaryType boundary\n         */\n        static addBoundary(builder, boundary) {\n            builder.addFieldInt8(1, boundary, BoundaryType.None);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endPointPrimitive(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createPointPrimitive(builder, coordsOffset, boundary) {\n            PointPrimitive.startPointPrimitive(builder);\n            PointPrimitive.addCoords(builder, coordsOffset);\n            PointPrimitive.addBoundary(builder, boundary);\n            return PointPrimitive.endPointPrimitive(builder);\n        }\n    }\n    EGFBAccessors.PointPrimitive = PointPrimitive;\n    /**\n     * @constructor\n     */\n    class PointPrimitive2d {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns PointPrimitive2d\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param PointPrimitive2d= obj\n         * @returns PointPrimitive2d\n         */\n        static getRootAsPointPrimitive2d(bb, obj) {\n            return (obj || new PointPrimitive2d()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param PointPrimitive2d= obj\n         * @returns PointPrimitive2d\n         */\n        static getSizePrefixedRootAsPointPrimitive2d(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new PointPrimitive2d()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param number index\n         * @param DPoint2d= obj\n         * @returns DPoint2d\n         */\n        coords(index, obj) {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? (obj || new DPoint2d()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        coordsLength() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns BoundaryType\n         */\n        boundary() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : BoundaryType.None;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startPointPrimitive2d(builder) {\n            builder.startObject(2);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset coordsOffset\n         */\n        static addCoords(builder, coordsOffset) {\n            builder.addFieldOffset(0, coordsOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startCoordsVector(builder, numElems) {\n            builder.startVector(16, numElems, 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param BoundaryType boundary\n         */\n        static addBoundary(builder, boundary) {\n            builder.addFieldInt8(1, boundary, BoundaryType.None);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endPointPrimitive2d(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createPointPrimitive2d(builder, coordsOffset, boundary) {\n            PointPrimitive2d.startPointPrimitive2d(builder);\n            PointPrimitive2d.addCoords(builder, coordsOffset);\n            PointPrimitive2d.addBoundary(builder, boundary);\n            return PointPrimitive2d.endPointPrimitive2d(builder);\n        }\n    }\n    EGFBAccessors.PointPrimitive2d = PointPrimitive2d;\n    /**\n     * @constructor\n     */\n    class ArcPrimitive {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns ArcPrimitive\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param ArcPrimitive= obj\n         * @returns ArcPrimitive\n         */\n        static getRootAsArcPrimitive(bb, obj) {\n            return (obj || new ArcPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param ArcPrimitive= obj\n         * @returns ArcPrimitive\n         */\n        static getSizePrefixedRootAsArcPrimitive(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new ArcPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        center(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DVec3d= obj\n         * @returns DVec3d|null\n         */\n        vector0(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new DVec3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DVec3d= obj\n         * @returns DVec3d|null\n         */\n        vector90(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new DVec3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        start() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        sweep() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns BoundaryType\n         */\n        boundary() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : BoundaryType.None;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startArcPrimitive(builder) {\n            builder.startObject(6);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset centerOffset\n         */\n        static addCenter(builder, centerOffset) {\n            builder.addFieldStruct(0, centerOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset vector0Offset\n         */\n        static addVector0(builder, vector0Offset) {\n            builder.addFieldStruct(1, vector0Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset vector90Offset\n         */\n        static addVector90(builder, vector90Offset) {\n            builder.addFieldStruct(2, vector90Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number start\n         */\n        static addStart(builder, start) {\n            builder.addFieldFloat64(3, start, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number sweep\n         */\n        static addSweep(builder, sweep) {\n            builder.addFieldFloat64(4, sweep, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param BoundaryType boundary\n         */\n        static addBoundary(builder, boundary) {\n            builder.addFieldInt8(5, boundary, BoundaryType.None);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endArcPrimitive(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createArcPrimitive(builder, centerOffset, vector0Offset, vector90Offset, start, sweep, boundary) {\n            ArcPrimitive.startArcPrimitive(builder);\n            ArcPrimitive.addCenter(builder, centerOffset);\n            ArcPrimitive.addVector0(builder, vector0Offset);\n            ArcPrimitive.addVector90(builder, vector90Offset);\n            ArcPrimitive.addStart(builder, start);\n            ArcPrimitive.addSweep(builder, sweep);\n            ArcPrimitive.addBoundary(builder, boundary);\n            return ArcPrimitive.endArcPrimitive(builder);\n        }\n    }\n    EGFBAccessors.ArcPrimitive = ArcPrimitive;\n    /**\n     * @constructor\n     */\n    class BRepData {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns BRepData\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param BRepData= obj\n         * @returns BRepData\n         */\n        static getRootAsBRepData(bb, obj) {\n            return (obj || new BRepData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param BRepData= obj\n         * @returns BRepData\n         */\n        static getSizePrefixedRootAsBRepData(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new BRepData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param Transform= obj\n         * @returns Transform|null\n         */\n        entityTransform(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? (obj || new Transform()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns BRepType\n         */\n        brepType() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : BRepType.Solid;\n        }\n        /**\n         * @param number index\n         * @returns number\n         */\n        entityData(index) {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;\n        }\n        /**\n         * @returns number\n         */\n        entityDataLength() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns Uint8Array\n         */\n        entityDataArray() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n        }\n        /**\n         * @param number index\n         * @param FaceSymbology= obj\n         * @returns FaceSymbology\n         */\n        symbology(index, obj) {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new FaceSymbology()).__init(this.bb.__vector(this.bb_pos + offset) + index * 40, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        symbologyLength() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param number index\n         * @param FaceSymbologyIndex= obj\n         * @returns FaceSymbologyIndex\n         */\n        symbologyIndex(index, obj) {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? (obj || new FaceSymbologyIndex()).__init(this.bb.__vector(this.bb_pos + offset) + index * 8, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        symbologyIndexLength() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBRepData(builder) {\n            builder.startObject(5);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset entityTransformOffset\n         */\n        static addEntityTransform(builder, entityTransformOffset) {\n            builder.addFieldStruct(0, entityTransformOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param BRepType brepType\n         */\n        static addBrepType(builder, brepType) {\n            builder.addFieldInt8(1, brepType, BRepType.Solid);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset entityDataOffset\n         */\n        static addEntityData(builder, entityDataOffset) {\n            builder.addFieldOffset(2, entityDataOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createEntityDataVector(builder, data) {\n            builder.startVector(1, data.length, 1);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addInt8(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startEntityDataVector(builder, numElems) {\n            builder.startVector(1, numElems, 1);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset symbologyOffset\n         */\n        static addSymbology(builder, symbologyOffset) {\n            builder.addFieldOffset(3, symbologyOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startSymbologyVector(builder, numElems) {\n            builder.startVector(40, numElems, 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset symbologyIndexOffset\n         */\n        static addSymbologyIndex(builder, symbologyIndexOffset) {\n            builder.addFieldOffset(4, symbologyIndexOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startSymbologyIndexVector(builder, numElems) {\n            builder.startVector(8, numElems, 4);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBRepData(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createBRepData(builder, entityTransformOffset, brepType, entityDataOffset, symbologyOffset, symbologyIndexOffset) {\n            BRepData.startBRepData(builder);\n            BRepData.addEntityTransform(builder, entityTransformOffset);\n            BRepData.addBrepType(builder, brepType);\n            BRepData.addEntityData(builder, entityDataOffset);\n            BRepData.addSymbology(builder, symbologyOffset);\n            BRepData.addSymbologyIndex(builder, symbologyIndexOffset);\n            return BRepData.endBRepData(builder);\n        }\n    }\n    EGFBAccessors.BRepData = BRepData;\n    /**\n     * @constructor\n     */\n    class Image {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Image\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Image= obj\n         * @returns Image\n         */\n        static getRootAsImage(bb, obj) {\n            return (obj || new Image()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Image= obj\n         * @returns Image\n         */\n        static getSizePrefixedRootAsImage(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new Image()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        drawBorder() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        useFillTint() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        tileCorner0(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        tileCorner1(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        tileCorner2(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        tileCorner3(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        width() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        height() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        format() {\n            var offset = this.bb.__offset(this.bb_pos, 20);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param number index\n         * @returns number\n         */\n        byteData(index) {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;\n        }\n        /**\n         * @returns number\n         */\n        byteDataLength() {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns Uint8Array\n         */\n        byteDataArray() {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        textureId() {\n            var offset = this.bb.__offset(this.bb_pos, 24);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startImage(builder) {\n            builder.startObject(11);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number drawBorder\n         */\n        static addDrawBorder(builder, drawBorder) {\n            builder.addFieldInt8(0, drawBorder, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useFillTint\n         */\n        static addUseFillTint(builder, useFillTint) {\n            builder.addFieldInt8(1, useFillTint, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset tileCorner0Offset\n         */\n        static addTileCorner0(builder, tileCorner0Offset) {\n            builder.addFieldStruct(2, tileCorner0Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset tileCorner1Offset\n         */\n        static addTileCorner1(builder, tileCorner1Offset) {\n            builder.addFieldStruct(3, tileCorner1Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset tileCorner2Offset\n         */\n        static addTileCorner2(builder, tileCorner2Offset) {\n            builder.addFieldStruct(4, tileCorner2Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset tileCorner3Offset\n         */\n        static addTileCorner3(builder, tileCorner3Offset) {\n            builder.addFieldStruct(5, tileCorner3Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number width\n         */\n        static addWidth(builder, width) {\n            builder.addFieldInt32(6, width, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number height\n         */\n        static addHeight(builder, height) {\n            builder.addFieldInt32(7, height, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number format\n         */\n        static addFormat(builder, format) {\n            builder.addFieldInt32(8, format, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset byteDataOffset\n         */\n        static addByteData(builder, byteDataOffset) {\n            builder.addFieldOffset(9, byteDataOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createByteDataVector(builder, data) {\n            builder.startVector(1, data.length, 1);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addInt8(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startByteDataVector(builder, numElems) {\n            builder.startVector(1, numElems, 1);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long textureId\n         */\n        static addTextureId(builder, textureId) {\n            builder.addFieldInt64(10, textureId, builder.createLong(0, 0));\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endImage(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createImage(builder, drawBorder, useFillTint, tileCorner0Offset, tileCorner1Offset, tileCorner2Offset, tileCorner3Offset, width, height, format, byteDataOffset, textureId) {\n            Image.startImage(builder);\n            Image.addDrawBorder(builder, drawBorder);\n            Image.addUseFillTint(builder, useFillTint);\n            Image.addTileCorner0(builder, tileCorner0Offset);\n            Image.addTileCorner1(builder, tileCorner1Offset);\n            Image.addTileCorner2(builder, tileCorner2Offset);\n            Image.addTileCorner3(builder, tileCorner3Offset);\n            Image.addWidth(builder, width);\n            Image.addHeight(builder, height);\n            Image.addFormat(builder, format);\n            Image.addByteData(builder, byteDataOffset);\n            Image.addTextureId(builder, textureId);\n            return Image.endImage(builder);\n        }\n    }\n    EGFBAccessors.Image = Image;\n    /**\n     * @constructor\n     */\n    class GeometryPart {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns GeometryPart\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param GeometryPart= obj\n         * @returns GeometryPart\n         */\n        static getRootAsGeometryPart(bb, obj) {\n            return (obj || new GeometryPart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param GeometryPart= obj\n         * @returns GeometryPart\n         */\n        static getSizePrefixedRootAsGeometryPart(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new GeometryPart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        geomPartId() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        origin(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        yaw() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        pitch() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        roll() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        scale() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 1.0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startGeometryPart(builder) {\n            builder.startObject(6);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long geomPartId\n         */\n        static addGeomPartId(builder, geomPartId) {\n            builder.addFieldInt64(0, geomPartId, builder.createLong(0, 0));\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset originOffset\n         */\n        static addOrigin(builder, originOffset) {\n            builder.addFieldStruct(1, originOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number yaw\n         */\n        static addYaw(builder, yaw) {\n            builder.addFieldFloat64(2, yaw, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number pitch\n         */\n        static addPitch(builder, pitch) {\n            builder.addFieldFloat64(3, pitch, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number roll\n         */\n        static addRoll(builder, roll) {\n            builder.addFieldFloat64(4, roll, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder, scale) {\n            builder.addFieldFloat64(5, scale, 1.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endGeometryPart(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createGeometryPart(builder, geomPartId, originOffset, yaw, pitch, roll, scale) {\n            GeometryPart.startGeometryPart(builder);\n            GeometryPart.addGeomPartId(builder, geomPartId);\n            GeometryPart.addOrigin(builder, originOffset);\n            GeometryPart.addYaw(builder, yaw);\n            GeometryPart.addPitch(builder, pitch);\n            GeometryPart.addRoll(builder, roll);\n            GeometryPart.addScale(builder, scale);\n            return GeometryPart.endGeometryPart(builder);\n        }\n    }\n    EGFBAccessors.GeometryPart = GeometryPart;\n    /**\n     * @constructor\n     */\n    class BasicSymbology {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns BasicSymbology\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param BasicSymbology= obj\n         * @returns BasicSymbology\n         */\n        static getRootAsBasicSymbology(bb, obj) {\n            return (obj || new BasicSymbology()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param BasicSymbology= obj\n         * @returns BasicSymbology\n         */\n        static getSizePrefixedRootAsBasicSymbology(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new BasicSymbology()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        subCategoryId() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n        }\n        /**\n         * @returns number\n         */\n        color() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        weight() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        lineStyleId() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n        }\n        /**\n         * @returns number\n         */\n        transparency() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        displayPriority() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns GeometryClass\n         */\n        geomClass() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : GeometryClass.Primary;\n        }\n        /**\n         * @returns number\n         */\n        useColor() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        useWeight() {\n            var offset = this.bb.__offset(this.bb_pos, 20);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        useStyle() {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startBasicSymbology(builder) {\n            builder.startObject(10);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long subCategoryId\n         */\n        static addSubCategoryId(builder, subCategoryId) {\n            builder.addFieldInt64(0, subCategoryId, builder.createLong(0, 0));\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number color\n         */\n        static addColor(builder, color) {\n            builder.addFieldInt32(1, color, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number weight\n         */\n        static addWeight(builder, weight) {\n            builder.addFieldInt32(2, weight, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long lineStyleId\n         */\n        static addLineStyleId(builder, lineStyleId) {\n            builder.addFieldInt64(3, lineStyleId, builder.createLong(0, 0));\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number transparency\n         */\n        static addTransparency(builder, transparency) {\n            builder.addFieldFloat64(4, transparency, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number displayPriority\n         */\n        static addDisplayPriority(builder, displayPriority) {\n            builder.addFieldInt32(5, displayPriority, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param GeometryClass geomClass\n         */\n        static addGeomClass(builder, geomClass) {\n            builder.addFieldInt8(6, geomClass, GeometryClass.Primary);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useColor\n         */\n        static addUseColor(builder, useColor) {\n            builder.addFieldInt8(7, useColor, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useWeight\n         */\n        static addUseWeight(builder, useWeight) {\n            builder.addFieldInt8(8, useWeight, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useStyle\n         */\n        static addUseStyle(builder, useStyle) {\n            builder.addFieldInt8(9, useStyle, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endBasicSymbology(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createBasicSymbology(builder, subCategoryId, color, weight, lineStyleId, transparency, displayPriority, geomClass, useColor, useWeight, useStyle) {\n            BasicSymbology.startBasicSymbology(builder);\n            BasicSymbology.addSubCategoryId(builder, subCategoryId);\n            BasicSymbology.addColor(builder, color);\n            BasicSymbology.addWeight(builder, weight);\n            BasicSymbology.addLineStyleId(builder, lineStyleId);\n            BasicSymbology.addTransparency(builder, transparency);\n            BasicSymbology.addDisplayPriority(builder, displayPriority);\n            BasicSymbology.addGeomClass(builder, geomClass);\n            BasicSymbology.addUseColor(builder, useColor);\n            BasicSymbology.addUseWeight(builder, useWeight);\n            BasicSymbology.addUseStyle(builder, useStyle);\n            return BasicSymbology.endBasicSymbology(builder);\n        }\n    }\n    EGFBAccessors.BasicSymbology = BasicSymbology;\n    /**\n     * @constructor\n     */\n    class LineStyleModifiers {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns LineStyleModifiers\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LineStyleModifiers= obj\n         * @returns LineStyleModifiers\n         */\n        static getRootAsLineStyleModifiers(bb, obj) {\n            return (obj || new LineStyleModifiers()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param LineStyleModifiers= obj\n         * @returns LineStyleModifiers\n         */\n        static getSizePrefixedRootAsLineStyleModifiers(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new LineStyleModifiers()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        modifiers() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        scale() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        dashScale() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        gapScale() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        startWidth() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        endWidth() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        distPhase() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        fractPhase() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        normal(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 20);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        yaw() {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        pitch() {\n            var offset = this.bb.__offset(this.bb_pos, 24);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        roll() {\n            var offset = this.bb.__offset(this.bb_pos, 26);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startLineStyleModifiers(builder) {\n            builder.startObject(12);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number modifiers\n         */\n        static addModifiers(builder, modifiers) {\n            builder.addFieldInt32(0, modifiers, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder, scale) {\n            builder.addFieldFloat64(1, scale, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number dashScale\n         */\n        static addDashScale(builder, dashScale) {\n            builder.addFieldFloat64(2, dashScale, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number gapScale\n         */\n        static addGapScale(builder, gapScale) {\n            builder.addFieldFloat64(3, gapScale, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number startWidth\n         */\n        static addStartWidth(builder, startWidth) {\n            builder.addFieldFloat64(4, startWidth, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number endWidth\n         */\n        static addEndWidth(builder, endWidth) {\n            builder.addFieldFloat64(5, endWidth, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number distPhase\n         */\n        static addDistPhase(builder, distPhase) {\n            builder.addFieldFloat64(6, distPhase, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number fractPhase\n         */\n        static addFractPhase(builder, fractPhase) {\n            builder.addFieldFloat64(7, fractPhase, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset normalOffset\n         */\n        static addNormal(builder, normalOffset) {\n            builder.addFieldStruct(8, normalOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number yaw\n         */\n        static addYaw(builder, yaw) {\n            builder.addFieldFloat64(9, yaw, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number pitch\n         */\n        static addPitch(builder, pitch) {\n            builder.addFieldFloat64(10, pitch, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number roll\n         */\n        static addRoll(builder, roll) {\n            builder.addFieldFloat64(11, roll, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endLineStyleModifiers(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createLineStyleModifiers(builder, modifiers, scale, dashScale, gapScale, startWidth, endWidth, distPhase, fractPhase, normalOffset, yaw, pitch, roll) {\n            LineStyleModifiers.startLineStyleModifiers(builder);\n            LineStyleModifiers.addModifiers(builder, modifiers);\n            LineStyleModifiers.addScale(builder, scale);\n            LineStyleModifiers.addDashScale(builder, dashScale);\n            LineStyleModifiers.addGapScale(builder, gapScale);\n            LineStyleModifiers.addStartWidth(builder, startWidth);\n            LineStyleModifiers.addEndWidth(builder, endWidth);\n            LineStyleModifiers.addDistPhase(builder, distPhase);\n            LineStyleModifiers.addFractPhase(builder, fractPhase);\n            LineStyleModifiers.addNormal(builder, normalOffset);\n            LineStyleModifiers.addYaw(builder, yaw);\n            LineStyleModifiers.addPitch(builder, pitch);\n            LineStyleModifiers.addRoll(builder, roll);\n            return LineStyleModifiers.endLineStyleModifiers(builder);\n        }\n    }\n    EGFBAccessors.LineStyleModifiers = LineStyleModifiers;\n    /**\n     * @constructor\n     */\n    class Material {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns Material\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Material= obj\n         * @returns Material\n         */\n        static getRootAsMaterial(bb, obj) {\n            return (obj || new Material()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param Material= obj\n         * @returns Material\n         */\n        static getSizePrefixedRootAsMaterial(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new Material()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        useMaterial() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        materialId() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        origin(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        size(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        yaw() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        pitch() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        roll() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @param Trans2x3= obj\n         * @returns Trans2x3|null\n         */\n        trans2x3(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? (obj || new Trans2x3()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startMaterial(builder) {\n            builder.startObject(8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useMaterial\n         */\n        static addUseMaterial(builder, useMaterial) {\n            builder.addFieldInt8(0, useMaterial, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long materialId\n         */\n        static addMaterialId(builder, materialId) {\n            builder.addFieldInt64(1, materialId, builder.createLong(0, 0));\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset originOffset\n         */\n        static addOrigin(builder, originOffset) {\n            builder.addFieldStruct(2, originOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset sizeOffset\n         */\n        static addSize(builder, sizeOffset) {\n            builder.addFieldStruct(3, sizeOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number yaw\n         */\n        static addYaw(builder, yaw) {\n            builder.addFieldFloat64(4, yaw, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number pitch\n         */\n        static addPitch(builder, pitch) {\n            builder.addFieldFloat64(5, pitch, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number roll\n         */\n        static addRoll(builder, roll) {\n            builder.addFieldFloat64(6, roll, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset trans2x3Offset\n         */\n        static addTrans2x3(builder, trans2x3Offset) {\n            builder.addFieldStruct(7, trans2x3Offset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endMaterial(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createMaterial(builder, useMaterial, materialId, originOffset, sizeOffset, yaw, pitch, roll, trans2x3Offset) {\n            Material.startMaterial(builder);\n            Material.addUseMaterial(builder, useMaterial);\n            Material.addMaterialId(builder, materialId);\n            Material.addOrigin(builder, originOffset);\n            Material.addSize(builder, sizeOffset);\n            Material.addYaw(builder, yaw);\n            Material.addPitch(builder, pitch);\n            Material.addRoll(builder, roll);\n            Material.addTrans2x3(builder, trans2x3Offset);\n            return Material.endMaterial(builder);\n        }\n    }\n    EGFBAccessors.Material = Material;\n    /**\n     * @constructor\n     */\n    class ThematicSettings {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns ThematicSettings\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param ThematicSettings= obj\n         * @returns ThematicSettings\n         */\n        static getRootAsThematicSettings(bb, obj) {\n            return (obj || new ThematicSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param ThematicSettings= obj\n         * @returns ThematicSettings\n         */\n        static getSizePrefixedRootAsThematicSettings(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new ThematicSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        stepCount() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        margin() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        marginColor() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        mode() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        colorScheme() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param DRange1d= obj\n         * @returns DRange1d|null\n         */\n        range(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? (obj || new DRange1d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startThematicSettings(builder) {\n            builder.startObject(6);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number stepCount\n         */\n        static addStepCount(builder, stepCount) {\n            builder.addFieldInt32(0, stepCount, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number margin\n         */\n        static addMargin(builder, margin) {\n            builder.addFieldFloat64(1, margin, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number marginColor\n         */\n        static addMarginColor(builder, marginColor) {\n            builder.addFieldInt32(2, marginColor, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number mode\n         */\n        static addMode(builder, mode) {\n            builder.addFieldInt32(3, mode, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number colorScheme\n         */\n        static addColorScheme(builder, colorScheme) {\n            builder.addFieldInt32(4, colorScheme, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset rangeOffset\n         */\n        static addRange(builder, rangeOffset) {\n            builder.addFieldStruct(5, rangeOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endThematicSettings(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createThematicSettings(builder, stepCount, margin, marginColor, mode, colorScheme, rangeOffset) {\n            ThematicSettings.startThematicSettings(builder);\n            ThematicSettings.addStepCount(builder, stepCount);\n            ThematicSettings.addMargin(builder, margin);\n            ThematicSettings.addMarginColor(builder, marginColor);\n            ThematicSettings.addMode(builder, mode);\n            ThematicSettings.addColorScheme(builder, colorScheme);\n            ThematicSettings.addRange(builder, rangeOffset);\n            return ThematicSettings.endThematicSettings(builder);\n        }\n    }\n    EGFBAccessors.ThematicSettings = ThematicSettings;\n    /**\n     * @constructor\n     */\n    class AreaFill {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns AreaFill\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param AreaFill= obj\n         * @returns AreaFill\n         */\n        static getRootAsAreaFill(bb, obj) {\n            return (obj || new AreaFill()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param AreaFill= obj\n         * @returns AreaFill\n         */\n        static getSizePrefixedRootAsAreaFill(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new AreaFill()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns FillDisplay\n         */\n        fill() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : FillDisplay.None;\n        }\n        /**\n         * @returns number\n         */\n        color() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        useColor() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        backgroundFill() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        transparency() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns GradientMode\n         */\n        mode() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : GradientMode.None;\n        }\n        /**\n         * @returns number\n         */\n        flags() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        angle() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        tint() {\n            var offset = this.bb.__offset(this.bb_pos, 20);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        shift() {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @param number index\n         * @returns number\n         */\n        colors(index) {\n            var offset = this.bb.__offset(this.bb_pos, 24);\n            return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n        /**\n         * @returns number\n         */\n        colorsLength() {\n            var offset = this.bb.__offset(this.bb_pos, 24);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns Uint32Array\n         */\n        colorsArray() {\n            var offset = this.bb.__offset(this.bb_pos, 24);\n            return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n        }\n        /**\n         * @param number index\n         * @returns number\n         */\n        values(index) {\n            var offset = this.bb.__offset(this.bb_pos, 26);\n            return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;\n        }\n        /**\n         * @returns number\n         */\n        valuesLength() {\n            var offset = this.bb.__offset(this.bb_pos, 26);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns Float64Array\n         */\n        valuesArray() {\n            var offset = this.bb.__offset(this.bb_pos, 26);\n            return offset ? new Float64Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n        }\n        /**\n         * @param ThematicSettings= obj\n         * @returns ThematicSettings|null\n         */\n        thematicSettings(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 28);\n            return offset ? (obj || new ThematicSettings()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startAreaFill(builder) {\n            builder.startObject(13);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param FillDisplay fill\n         */\n        static addFill(builder, fill) {\n            builder.addFieldInt8(0, fill, FillDisplay.None);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number color\n         */\n        static addColor(builder, color) {\n            builder.addFieldInt32(1, color, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useColor\n         */\n        static addUseColor(builder, useColor) {\n            builder.addFieldInt8(2, useColor, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number backgroundFill\n         */\n        static addBackgroundFill(builder, backgroundFill) {\n            builder.addFieldInt8(3, backgroundFill, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number transparency\n         */\n        static addTransparency(builder, transparency) {\n            builder.addFieldFloat64(4, transparency, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param GradientMode mode\n         */\n        static addMode(builder, mode) {\n            builder.addFieldInt8(5, mode, GradientMode.None);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number flags\n         */\n        static addFlags(builder, flags) {\n            builder.addFieldInt16(6, flags, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number angle\n         */\n        static addAngle(builder, angle) {\n            builder.addFieldFloat64(7, angle, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number tint\n         */\n        static addTint(builder, tint) {\n            builder.addFieldFloat64(8, tint, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number shift\n         */\n        static addShift(builder, shift) {\n            builder.addFieldFloat64(9, shift, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset colorsOffset\n         */\n        static addColors(builder, colorsOffset) {\n            builder.addFieldOffset(10, colorsOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createColorsVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startColorsVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset valuesOffset\n         */\n        static addValues(builder, valuesOffset) {\n            builder.addFieldOffset(11, valuesOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createValuesVector(builder, data) {\n            builder.startVector(8, data.length, 8);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addFloat64(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startValuesVector(builder, numElems) {\n            builder.startVector(8, numElems, 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset thematicSettingsOffset\n         */\n        static addThematicSettings(builder, thematicSettingsOffset) {\n            builder.addFieldOffset(12, thematicSettingsOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endAreaFill(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createAreaFill(builder, fill, color, useColor, backgroundFill, transparency, mode, flags, angle, tint, shift, colorsOffset, valuesOffset, thematicSettingsOffset) {\n            AreaFill.startAreaFill(builder);\n            AreaFill.addFill(builder, fill);\n            AreaFill.addColor(builder, color);\n            AreaFill.addUseColor(builder, useColor);\n            AreaFill.addBackgroundFill(builder, backgroundFill);\n            AreaFill.addTransparency(builder, transparency);\n            AreaFill.addMode(builder, mode);\n            AreaFill.addFlags(builder, flags);\n            AreaFill.addAngle(builder, angle);\n            AreaFill.addTint(builder, tint);\n            AreaFill.addShift(builder, shift);\n            AreaFill.addColors(builder, colorsOffset);\n            AreaFill.addValues(builder, valuesOffset);\n            AreaFill.addThematicSettings(builder, thematicSettingsOffset);\n            return AreaFill.endAreaFill(builder);\n        }\n    }\n    EGFBAccessors.AreaFill = AreaFill;\n    /**\n     * @constructor\n     */\n    class DwgHatchDefLine {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns DwgHatchDefLine\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DwgHatchDefLine= obj\n         * @returns DwgHatchDefLine\n         */\n        static getRootAsDwgHatchDefLine(bb, obj) {\n            return (obj || new DwgHatchDefLine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param DwgHatchDefLine= obj\n         * @returns DwgHatchDefLine\n         */\n        static getSizePrefixedRootAsDwgHatchDefLine(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new DwgHatchDefLine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        angle() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @param DPoint2d= obj\n         * @returns DPoint2d|null\n         */\n        through(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new DPoint2d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param DPoint2d= obj\n         * @returns DPoint2d|null\n         */\n        offset(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? (obj || new DPoint2d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param number index\n         * @returns number\n         */\n        dashes(index) {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readFloat64(this.bb.__vector(this.bb_pos + offset) + index * 8) : 0;\n        }\n        /**\n         * @returns number\n         */\n        dashesLength() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns Float64Array\n         */\n        dashesArray() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? new Float64Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startDwgHatchDefLine(builder) {\n            builder.startObject(4);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number angle\n         */\n        static addAngle(builder, angle) {\n            builder.addFieldFloat64(0, angle, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset throughOffset\n         */\n        static addThrough(builder, throughOffset) {\n            builder.addFieldStruct(1, throughOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset offsetOffset\n         */\n        static addOffset(builder, offsetOffset) {\n            builder.addFieldStruct(2, offsetOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset dashesOffset\n         */\n        static addDashes(builder, dashesOffset) {\n            builder.addFieldOffset(3, dashesOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createDashesVector(builder, data) {\n            builder.startVector(8, data.length, 8);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addFloat64(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDashesVector(builder, numElems) {\n            builder.startVector(8, numElems, 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endDwgHatchDefLine(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createDwgHatchDefLine(builder, angle, throughOffset, offsetOffset, dashesOffset) {\n            DwgHatchDefLine.startDwgHatchDefLine(builder);\n            DwgHatchDefLine.addAngle(builder, angle);\n            DwgHatchDefLine.addThrough(builder, throughOffset);\n            DwgHatchDefLine.addOffset(builder, offsetOffset);\n            DwgHatchDefLine.addDashes(builder, dashesOffset);\n            return DwgHatchDefLine.endDwgHatchDefLine(builder);\n        }\n    }\n    EGFBAccessors.DwgHatchDefLine = DwgHatchDefLine;\n    /**\n     * @constructor\n     */\n    class AreaPattern {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns AreaPattern\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param AreaPattern= obj\n         * @returns AreaPattern\n         */\n        static getRootAsAreaPattern(bb, obj) {\n            return (obj || new AreaPattern()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param AreaPattern= obj\n         * @returns AreaPattern\n         */\n        static getSizePrefixedRootAsAreaPattern(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new AreaPattern()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param DPoint3d= obj\n         * @returns DPoint3d|null\n         */\n        origin(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param RotMatrix= obj\n         * @returns RotMatrix|null\n         */\n        rotation(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? (obj || new RotMatrix()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        space1() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        space2() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        angle1() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        angle2() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        scale() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        color() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        weight() {\n            var offset = this.bb.__offset(this.bb_pos, 20);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        useColor() {\n            var offset = this.bb.__offset(this.bb_pos, 22);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        useWeight() {\n            var offset = this.bb.__offset(this.bb_pos, 24);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        invisibleBoundary() {\n            var offset = this.bb.__offset(this.bb_pos, 26);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        snappable() {\n            var offset = this.bb.__offset(this.bb_pos, 28);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns flatbuffers.Long\n         */\n        symbolId() {\n            var offset = this.bb.__offset(this.bb_pos, 30);\n            return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);\n        }\n        /**\n         * @param number index\n         * @param DwgHatchDefLine= obj\n         * @returns DwgHatchDefLine\n         */\n        defLine(index, obj) {\n            var offset = this.bb.__offset(this.bb_pos, 32);\n            return offset ? (obj || new DwgHatchDefLine()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        defLineLength() {\n            var offset = this.bb.__offset(this.bb_pos, 32);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startAreaPattern(builder) {\n            builder.startObject(15);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset originOffset\n         */\n        static addOrigin(builder, originOffset) {\n            builder.addFieldStruct(0, originOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset rotationOffset\n         */\n        static addRotation(builder, rotationOffset) {\n            builder.addFieldStruct(1, rotationOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number space1\n         */\n        static addSpace1(builder, space1) {\n            builder.addFieldFloat64(2, space1, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number space2\n         */\n        static addSpace2(builder, space2) {\n            builder.addFieldFloat64(3, space2, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number angle1\n         */\n        static addAngle1(builder, angle1) {\n            builder.addFieldFloat64(4, angle1, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number angle2\n         */\n        static addAngle2(builder, angle2) {\n            builder.addFieldFloat64(5, angle2, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number scale\n         */\n        static addScale(builder, scale) {\n            builder.addFieldFloat64(6, scale, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number color\n         */\n        static addColor(builder, color) {\n            builder.addFieldInt32(7, color, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number weight\n         */\n        static addWeight(builder, weight) {\n            builder.addFieldInt32(8, weight, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useColor\n         */\n        static addUseColor(builder, useColor) {\n            builder.addFieldInt8(9, useColor, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number useWeight\n         */\n        static addUseWeight(builder, useWeight) {\n            builder.addFieldInt8(10, useWeight, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number invisibleBoundary\n         */\n        static addInvisibleBoundary(builder, invisibleBoundary) {\n            builder.addFieldInt8(11, invisibleBoundary, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number snappable\n         */\n        static addSnappable(builder, snappable) {\n            builder.addFieldInt8(12, snappable, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Long symbolId\n         */\n        static addSymbolId(builder, symbolId) {\n            builder.addFieldInt64(13, symbolId, builder.createLong(0, 0));\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset defLineOffset\n         */\n        static addDefLine(builder, defLineOffset) {\n            builder.addFieldOffset(14, defLineOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<flatbuffers.Offset> data\n         * @returns flatbuffers.Offset\n         */\n        static createDefLineVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addOffset(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startDefLineVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endAreaPattern(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createAreaPattern(builder, originOffset, rotationOffset, space1, space2, angle1, angle2, scale, color, weight, useColor, useWeight, invisibleBoundary, snappable, symbolId, defLineOffset) {\n            AreaPattern.startAreaPattern(builder);\n            AreaPattern.addOrigin(builder, originOffset);\n            AreaPattern.addRotation(builder, rotationOffset);\n            AreaPattern.addSpace1(builder, space1);\n            AreaPattern.addSpace2(builder, space2);\n            AreaPattern.addAngle1(builder, angle1);\n            AreaPattern.addAngle2(builder, angle2);\n            AreaPattern.addScale(builder, scale);\n            AreaPattern.addColor(builder, color);\n            AreaPattern.addWeight(builder, weight);\n            AreaPattern.addUseColor(builder, useColor);\n            AreaPattern.addUseWeight(builder, useWeight);\n            AreaPattern.addInvisibleBoundary(builder, invisibleBoundary);\n            AreaPattern.addSnappable(builder, snappable);\n            AreaPattern.addSymbolId(builder, symbolId);\n            AreaPattern.addDefLine(builder, defLineOffset);\n            return AreaPattern.endAreaPattern(builder);\n        }\n    }\n    EGFBAccessors.AreaPattern = AreaPattern;\n    /**\n     * @constructor\n     */\n    class TextStringTransform {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns TextStringTransform\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        form3d00() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        form3d01() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        form3d02() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @returns number\n         */\n        form3d03() {\n            return this.bb.readFloat64(this.bb_pos + 24);\n        }\n        /**\n         * @returns number\n         */\n        form3d10() {\n            return this.bb.readFloat64(this.bb_pos + 32);\n        }\n        /**\n         * @returns number\n         */\n        form3d11() {\n            return this.bb.readFloat64(this.bb_pos + 40);\n        }\n        /**\n         * @returns number\n         */\n        form3d12() {\n            return this.bb.readFloat64(this.bb_pos + 48);\n        }\n        /**\n         * @returns number\n         */\n        form3d13() {\n            return this.bb.readFloat64(this.bb_pos + 56);\n        }\n        /**\n         * @returns number\n         */\n        form3d20() {\n            return this.bb.readFloat64(this.bb_pos + 64);\n        }\n        /**\n         * @returns number\n         */\n        form3d21() {\n            return this.bb.readFloat64(this.bb_pos + 72);\n        }\n        /**\n         * @returns number\n         */\n        form3d22() {\n            return this.bb.readFloat64(this.bb_pos + 80);\n        }\n        /**\n         * @returns number\n         */\n        form3d23() {\n            return this.bb.readFloat64(this.bb_pos + 88);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number form3d00\n         * @param number form3d01\n         * @param number form3d02\n         * @param number form3d03\n         * @param number form3d10\n         * @param number form3d11\n         * @param number form3d12\n         * @param number form3d13\n         * @param number form3d20\n         * @param number form3d21\n         * @param number form3d22\n         * @param number form3d23\n         * @returns flatbuffers.Offset\n         */\n        static createTextStringTransform(builder, form3d00, form3d01, form3d02, form3d03, form3d10, form3d11, form3d12, form3d13, form3d20, form3d21, form3d22, form3d23) {\n            builder.prep(8, 96);\n            builder.writeFloat64(form3d23);\n            builder.writeFloat64(form3d22);\n            builder.writeFloat64(form3d21);\n            builder.writeFloat64(form3d20);\n            builder.writeFloat64(form3d13);\n            builder.writeFloat64(form3d12);\n            builder.writeFloat64(form3d11);\n            builder.writeFloat64(form3d10);\n            builder.writeFloat64(form3d03);\n            builder.writeFloat64(form3d02);\n            builder.writeFloat64(form3d01);\n            builder.writeFloat64(form3d00);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.TextStringTransform = TextStringTransform;\n    /**\n     * @constructor\n     */\n    class TextStringRange {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns TextStringRange\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        lowx() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        lowy() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @returns number\n         */\n        highx() {\n            return this.bb.readFloat64(this.bb_pos + 16);\n        }\n        /**\n         * @returns number\n         */\n        highy() {\n            return this.bb.readFloat64(this.bb_pos + 24);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number lowx\n         * @param number lowy\n         * @param number highx\n         * @param number highy\n         * @returns flatbuffers.Offset\n         */\n        static createTextStringRange(builder, lowx, lowy, highx, highy) {\n            builder.prep(8, 32);\n            builder.writeFloat64(highy);\n            builder.writeFloat64(highx);\n            builder.writeFloat64(lowy);\n            builder.writeFloat64(lowx);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.TextStringRange = TextStringRange;\n    /**\n     * @constructor\n     */\n    class TextStringGlyphOrigin {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns TextStringGlyphOrigin\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @returns number\n         */\n        x() {\n            return this.bb.readFloat64(this.bb_pos);\n        }\n        /**\n         * @returns number\n         */\n        y() {\n            return this.bb.readFloat64(this.bb_pos + 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number x\n         * @param number y\n         * @returns flatbuffers.Offset\n         */\n        static createTextStringGlyphOrigin(builder, x, y) {\n            builder.prep(8, 16);\n            builder.writeFloat64(y);\n            builder.writeFloat64(x);\n            return builder.offset();\n        }\n    }\n    EGFBAccessors.TextStringGlyphOrigin = TextStringGlyphOrigin;\n    /**\n     * @constructor\n     */\n    class TextStringStyle {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns TextStringStyle\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param TextStringStyle= obj\n         * @returns TextStringStyle\n         */\n        static getRootAsTextStringStyle(bb, obj) {\n            return (obj || new TextStringStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param TextStringStyle= obj\n         * @returns TextStringStyle\n         */\n        static getSizePrefixedRootAsTextStringStyle(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new TextStringStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        majorVersion() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        minorVersion() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        fontId() {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns boolean\n         */\n        isBold() {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n        }\n        /**\n         * @returns boolean\n         */\n        isItalic() {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n        }\n        /**\n         * @returns boolean\n         */\n        isUnderlined() {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;\n        }\n        /**\n         * @returns number\n         */\n        height() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @returns number\n         */\n        widthFactor() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTextStringStyle(builder) {\n            builder.startObject(8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number majorVersion\n         */\n        static addMajorVersion(builder, majorVersion) {\n            builder.addFieldInt8(0, majorVersion, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number minorVersion\n         */\n        static addMinorVersion(builder, minorVersion) {\n            builder.addFieldInt8(1, minorVersion, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number fontId\n         */\n        static addFontId(builder, fontId) {\n            builder.addFieldInt32(2, fontId, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isBold\n         */\n        static addIsBold(builder, isBold) {\n            builder.addFieldInt8(3, +isBold, +false);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isItalic\n         */\n        static addIsItalic(builder, isItalic) {\n            builder.addFieldInt8(4, +isItalic, +false);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param boolean isUnderlined\n         */\n        static addIsUnderlined(builder, isUnderlined) {\n            builder.addFieldInt8(5, +isUnderlined, +false);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number height\n         */\n        static addHeight(builder, height) {\n            builder.addFieldFloat64(6, height, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number widthFactor\n         */\n        static addWidthFactor(builder, widthFactor) {\n            builder.addFieldFloat64(7, widthFactor, 0.0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTextStringStyle(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createTextStringStyle(builder, majorVersion, minorVersion, fontId, isBold, isItalic, isUnderlined, height, widthFactor) {\n            TextStringStyle.startTextStringStyle(builder);\n            TextStringStyle.addMajorVersion(builder, majorVersion);\n            TextStringStyle.addMinorVersion(builder, minorVersion);\n            TextStringStyle.addFontId(builder, fontId);\n            TextStringStyle.addIsBold(builder, isBold);\n            TextStringStyle.addIsItalic(builder, isItalic);\n            TextStringStyle.addIsUnderlined(builder, isUnderlined);\n            TextStringStyle.addHeight(builder, height);\n            TextStringStyle.addWidthFactor(builder, widthFactor);\n            return TextStringStyle.endTextStringStyle(builder);\n        }\n    }\n    EGFBAccessors.TextStringStyle = TextStringStyle;\n    /**\n     * @constructor\n     */\n    class TextString {\n        constructor() {\n            this.bb = null;\n            this.bb_pos = 0;\n        }\n        /**\n         * @param number i\n         * @param flatbuffers.ByteBuffer bb\n         * @returns TextString\n         */\n        __init(i, bb) {\n            this.bb_pos = i;\n            this.bb = bb;\n            return this;\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param TextString= obj\n         * @returns TextString\n         */\n        static getRootAsTextString(bb, obj) {\n            return (obj || new TextString()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @param flatbuffers.ByteBuffer bb\n         * @param TextString= obj\n         * @returns TextString\n         */\n        static getSizePrefixedRootAsTextString(bb, obj) {\n            bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n            return (obj || new TextString()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n        }\n        /**\n         * @returns number\n         */\n        majorVersion() {\n            var offset = this.bb.__offset(this.bb_pos, 4);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns number\n         */\n        minorVersion() {\n            var offset = this.bb.__offset(this.bb_pos, 6);\n            return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;\n        }\n        text(optionalEncoding) {\n            var offset = this.bb.__offset(this.bb_pos, 8);\n            return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n        }\n        /**\n         * @param TextStringStyle= obj\n         * @returns TextStringStyle|null\n         */\n        style(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 10);\n            return offset ? (obj || new TextStringStyle()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;\n        }\n        /**\n         * @param TextStringTransform= obj\n         * @returns TextStringTransform|null\n         */\n        transform(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 12);\n            return offset ? (obj || new TextStringTransform()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param TextStringRange= obj\n         * @returns TextStringRange|null\n         */\n        range(obj) {\n            var offset = this.bb.__offset(this.bb_pos, 14);\n            return offset ? (obj || new TextStringRange()).__init(this.bb_pos + offset, this.bb) : null;\n        }\n        /**\n         * @param number index\n         * @returns number\n         */\n        glyphIds(index) {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;\n        }\n        /**\n         * @returns number\n         */\n        glyphIdsLength() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @returns Uint32Array\n         */\n        glyphIdsArray() {\n            var offset = this.bb.__offset(this.bb_pos, 16);\n            return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;\n        }\n        /**\n         * @param number index\n         * @param TextStringGlyphOrigin= obj\n         * @returns TextStringGlyphOrigin\n         */\n        glyphOrigins(index, obj) {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? (obj || new TextStringGlyphOrigin()).__init(this.bb.__vector(this.bb_pos + offset) + index * 16, this.bb) : null;\n        }\n        /**\n         * @returns number\n         */\n        glyphOriginsLength() {\n            var offset = this.bb.__offset(this.bb_pos, 18);\n            return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         */\n        static startTextString(builder) {\n            builder.startObject(8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number majorVersion\n         */\n        static addMajorVersion(builder, majorVersion) {\n            builder.addFieldInt8(0, majorVersion, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number minorVersion\n         */\n        static addMinorVersion(builder, minorVersion) {\n            builder.addFieldInt8(1, minorVersion, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset textOffset\n         */\n        static addText(builder, textOffset) {\n            builder.addFieldOffset(2, textOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset styleOffset\n         */\n        static addStyle(builder, styleOffset) {\n            builder.addFieldOffset(3, styleOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset transformOffset\n         */\n        static addTransform(builder, transformOffset) {\n            builder.addFieldStruct(4, transformOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset rangeOffset\n         */\n        static addRange(builder, rangeOffset) {\n            builder.addFieldStruct(5, rangeOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset glyphIdsOffset\n         */\n        static addGlyphIds(builder, glyphIdsOffset) {\n            builder.addFieldOffset(6, glyphIdsOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param Array.<number> data\n         * @returns flatbuffers.Offset\n         */\n        static createGlyphIdsVector(builder, data) {\n            builder.startVector(4, data.length, 4);\n            for (var i = data.length - 1; i >= 0; i--) {\n                builder.addInt32(data[i]);\n            }\n            return builder.endVector();\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startGlyphIdsVector(builder, numElems) {\n            builder.startVector(4, numElems, 4);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param flatbuffers.Offset glyphOriginsOffset\n         */\n        static addGlyphOrigins(builder, glyphOriginsOffset) {\n            builder.addFieldOffset(7, glyphOriginsOffset, 0);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @param number numElems\n         */\n        static startGlyphOriginsVector(builder, numElems) {\n            builder.startVector(16, numElems, 8);\n        }\n        /**\n         * @param flatbuffers.Builder builder\n         * @returns flatbuffers.Offset\n         */\n        static endTextString(builder) {\n            var offset = builder.endObject();\n            return offset;\n        }\n        static createTextString(builder, majorVersion, minorVersion, textOffset, styleOffset, transformOffset, rangeOffset, glyphIdsOffset, glyphOriginsOffset) {\n            TextString.startTextString(builder);\n            TextString.addMajorVersion(builder, majorVersion);\n            TextString.addMinorVersion(builder, minorVersion);\n            TextString.addText(builder, textOffset);\n            TextString.addStyle(builder, styleOffset);\n            TextString.addTransform(builder, transformOffset);\n            TextString.addRange(builder, rangeOffset);\n            TextString.addGlyphIds(builder, glyphIdsOffset);\n            TextString.addGlyphOrigins(builder, glyphOriginsOffset);\n            return TextString.endTextString(builder);\n        }\n    }\n    EGFBAccessors.TextString = TextString;\n})(EGFBAccessors || (EGFBAccessors = {}));\n//# sourceMappingURL=ElementGeometryFB.js.map",
      "start": 1693508122109,
      "end": 1693508122224,
      "sourcemaps": null
    }
  ]
}
