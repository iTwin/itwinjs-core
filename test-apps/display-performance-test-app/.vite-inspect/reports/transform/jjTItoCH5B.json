{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/bentley/lib/esm/ProcessDetector.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module ProcessDetector\n */\n/** Functions to determine the type of JavaScript process currently executing.\n * @public\n */\nexport class ProcessDetector {\n    /** Is this a browser process?\n     * @note this method will also return `true` for the frontend of Electron or Mobile apps. They *are* browser processes.\n     */\n    static get isBrowserProcess() { return typeof window === \"object\" && typeof window.navigator === \"object\"; }\n    /** Is this a Node process?\n     * @note this means \"is this a backend process\"? It will return `true` for all backend process, including Electron and mobile apps.\n    */\n    static get isNodeProcess() { return typeof process === \"object\" && undefined !== process.platform; }\n    /** Is this process the frontend of an Electron app? */\n    static get isElectronAppFrontend() { return typeof navigator === \"object\" && navigator.userAgent.toLowerCase().indexOf(\"electron\") >= 0; }\n    /** Is this process the backend of an Electron app? */\n    static get isElectronAppBackend() { return typeof process === \"object\" && process.versions.hasOwnProperty(\"electron\"); }\n    /** Is this process running in a browser on an iPad?\n     * @note This method will return `true` for any frontend running on an iPad, whether it is a user-launched web browser (e.g. Safari) or the frontend of a mobile app.\n     */\n    static get isIPadBrowser() {\n        return this.isBrowserProcess && window.navigator.platform === \"iPad\" || (window.navigator.platform === \"MacIntel\" && window.navigator.maxTouchPoints > 0 && !(\"MSStream\" in window)); /* eslint-disable-line deprecation/deprecation */\n    }\n    /** Is this process running in a browser on an iPhone?\n     * @note This method will return `true` for any frontend running on an iPhone, whether it is a user-launched web browser (e.g. Safari) or the frontend of a mobile app.\n     */\n    static get isIPhoneBrowser() { return this.isBrowserProcess && (/(iphone|ipod)/i.test(window.navigator.userAgent)); }\n    /** Is this process running in a browser on an iOS device?\n     * @note This method will return `true` for any frontend running on an iOS device, whether it is a user-launched web browser (e.g. Safari) or the frontend of a mobile app.\n    */\n    static get isIOSBrowser() { return this.isIPadBrowser || this.isIPhoneBrowser; }\n    /** Is this process running in a browser on an Android device?\n     * @note This method will return `true` for any frontend running on an Android device, whether it is a user-launched web browser (e.g. Chrome) or the frontend of a mobile app.\n    */\n    static get isAndroidBrowser() { return this.isBrowserProcess && /android/i.test(window.navigator.userAgent); }\n    /** Is this process running in a browser on a mobile device?\n     * @note This method will return `true` for any frontend running on a mobile device, whether it is a user-launched web browser or the frontend of a mobile app.\n    */\n    static get isMobileBrowser() { return this.isIOSBrowser || this.isAndroidBrowser; }\n    /** Is this process running in a Chromium based browser (Chrome / new Edge / Electron front end)? */\n    static get isChromium() {\n        return (this.isBrowserProcess && window.navigator.userAgent.indexOf(\"Chrome\") > -1 && window.navigator.userAgent.indexOf(\"OP\") === -1) || this.isElectronAppFrontend;\n    }\n    /** Is this process the frontend of an iTwin mobile application?\n     * @note this indicates that this is a browser process started by an iTwin mobile application.\n     * It will return `false` when running user-launched web browsers on a mobile device.\n     */\n    static get isMobileAppFrontend() { return this.isAndroidAppFrontend || this.isIOSAppFrontend; }\n    /** Is this process the frontend of an iOS mobile application? */\n    static get isIOSAppFrontend() { return this.isBrowserProcess && window.location.hash.indexOf(\"platform=ios\") !== -1; }\n    /** Is this process the frontend of an Android mobile application? */\n    static get isAndroidAppFrontend() { return this.isBrowserProcess && window.location.hash.indexOf(\"platform=android\") !== -1; }\n    /** Is this process the backend of an iOS mobile application? */\n    static get isIOSAppBackend() { return this.isNodeProcess && process.platform === \"ios\"; }\n    /** Is this process the backend of an Android mobile application? */\n    static get isAndroidAppBackend() { return this.isNodeProcess && process.platform === \"android\"; }\n    /**  Is this process a mobile app backend? */\n    static get isMobileAppBackend() { return this.isIOSAppBackend || this.isAndroidAppBackend; }\n    /** Is this process the frontend of a native (Electron or Mobile) app? */\n    static get isNativeAppFrontend() { return this.isElectronAppFrontend || this.isMobileAppFrontend; }\n}\n//# sourceMappingURL=ProcessDetector.js.map",
      "start": 1693508120419,
      "end": 1693508120478,
      "sourcemaps": null
    }
  ]
}
