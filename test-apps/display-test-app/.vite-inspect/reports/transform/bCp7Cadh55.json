{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/frontend/lib/esm/common/imdl/ImdlModel.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Tiles\n */\n/** Collect an array of all the [transferable objects](https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Transferable_objects)\n * within the specified document.\n * @internal\n */\nexport function collectTransferables(document) {\n    const xfers = new Set();\n    const add = (array) => {\n        if (array)\n            xfers.add(array.buffer);\n    };\n    add(document.binaryData);\n    add(document.featureTable.data);\n    add(document.featureTable.animationNodeIds);\n    const addPrimitive = (primitive) => {\n        if (primitive.type === \"pattern\") {\n            add(primitive.params.xyOffsets);\n            return;\n        }\n        add(primitive.params.vertices.data);\n        if (primitive.modifier?.type === \"instances\") {\n            add(primitive.modifier.transforms);\n            add(primitive.modifier.featureIds);\n            add(primitive.modifier.symbologyOverrides);\n        }\n        switch (primitive.type) {\n            case \"point\":\n                add(primitive.params.indices);\n                break;\n            case \"polyline\":\n                add(primitive.params.polyline.indices);\n                add(primitive.params.polyline.prevIndices);\n                add(primitive.params.polyline.nextIndicesAndParams);\n                break;\n            case \"mesh\":\n                add(primitive.params.surface.indices);\n                const edges = primitive.params.edges;\n                if (edges) {\n                    add(edges.segments?.indices);\n                    add(edges.segments?.endPointAndQuadIndices);\n                    add(edges.silhouettes?.indices);\n                    add(edges.silhouettes?.endPointAndQuadIndices);\n                    add(edges.silhouettes?.normalPairs);\n                    add(edges.polylines?.indices);\n                    add(edges.polylines?.prevIndices);\n                    add(edges.polylines?.nextIndicesAndParams);\n                    add(edges.indexed?.indices);\n                    add(edges.indexed?.edges.data);\n                }\n                break;\n        }\n    };\n    for (const node of document.nodes)\n        for (const primitive of node.primitives)\n            addPrimitive(primitive);\n    for (const primitives of document.patterns.values())\n        for (const primitive of primitives)\n            addPrimitive(primitive);\n    return Array.from(xfers);\n}\n//# sourceMappingURL=ImdlModel.js.map",
      "start": 1693508118556,
      "end": 1693508119170,
      "sourcemaps": null
    }
  ]
}
