{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/rpc/core/RpcConstants.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module RpcInterface\n */\n/* eslint-disable deprecation/deprecation */\n/** Describes available options for RPC response caching.\n * @public\n */\nexport var RpcResponseCacheControl;\n(function (RpcResponseCacheControl) {\n    RpcResponseCacheControl[RpcResponseCacheControl[\"None\"] = 0] = \"None\";\n    RpcResponseCacheControl[RpcResponseCacheControl[\"Immutable\"] = 1] = \"Immutable\";\n})(RpcResponseCacheControl || (RpcResponseCacheControl = {}));\n/** RPC protocol event types.\n * @public\n * @deprecated in 3.6. The RPC system will be significantly refactored (or replaced) in version 5.0.\n */\nexport var RpcProtocolEvent;\n(function (RpcProtocolEvent) {\n    RpcProtocolEvent[RpcProtocolEvent[\"RequestCreated\"] = 0] = \"RequestCreated\";\n    RpcProtocolEvent[RpcProtocolEvent[\"ResponseLoaded\"] = 1] = \"ResponseLoaded\";\n    RpcProtocolEvent[RpcProtocolEvent[\"ResponseLoading\"] = 2] = \"ResponseLoading\";\n    RpcProtocolEvent[RpcProtocolEvent[\"ConnectionErrorReceived\"] = 3] = \"ConnectionErrorReceived\";\n    RpcProtocolEvent[RpcProtocolEvent[\"UnknownErrorReceived\"] = 4] = \"UnknownErrorReceived\";\n    RpcProtocolEvent[RpcProtocolEvent[\"BackendErrorReceived\"] = 5] = \"BackendErrorReceived\";\n    RpcProtocolEvent[RpcProtocolEvent[\"ConnectionAborted\"] = 6] = \"ConnectionAborted\";\n    RpcProtocolEvent[RpcProtocolEvent[\"RequestReceived\"] = 7] = \"RequestReceived\";\n    RpcProtocolEvent[RpcProtocolEvent[\"BackendResponseCreated\"] = 8] = \"BackendResponseCreated\";\n    RpcProtocolEvent[RpcProtocolEvent[\"BackendReportedPending\"] = 9] = \"BackendReportedPending\";\n    RpcProtocolEvent[RpcProtocolEvent[\"BackendReportedNotFound\"] = 10] = \"BackendReportedNotFound\";\n    RpcProtocolEvent[RpcProtocolEvent[\"BackendErrorOccurred\"] = 11] = \"BackendErrorOccurred\";\n    RpcProtocolEvent[RpcProtocolEvent[\"BackendReportedNoContent\"] = 12] = \"BackendReportedNoContent\";\n})(RpcProtocolEvent || (RpcProtocolEvent = {}));\n/** The status of an RPC operation request.\n * @public\n * @deprecated in 3.6. The RPC system will be significantly refactored (or replaced) in version 5.0.\n */\nexport var RpcRequestStatus;\n(function (RpcRequestStatus) {\n    RpcRequestStatus[RpcRequestStatus[\"Unknown\"] = 0] = \"Unknown\";\n    RpcRequestStatus[RpcRequestStatus[\"Created\"] = 1] = \"Created\";\n    RpcRequestStatus[RpcRequestStatus[\"Submitted\"] = 2] = \"Submitted\";\n    RpcRequestStatus[RpcRequestStatus[\"Pending\"] = 3] = \"Pending\";\n    RpcRequestStatus[RpcRequestStatus[\"Resolved\"] = 4] = \"Resolved\";\n    RpcRequestStatus[RpcRequestStatus[\"Rejected\"] = 5] = \"Rejected\";\n    RpcRequestStatus[RpcRequestStatus[\"Disposed\"] = 6] = \"Disposed\";\n    RpcRequestStatus[RpcRequestStatus[\"NotFound\"] = 7] = \"NotFound\";\n    RpcRequestStatus[RpcRequestStatus[\"Cancelled\"] = 8] = \"Cancelled\";\n    RpcRequestStatus[RpcRequestStatus[\"NoContent\"] = 9] = \"NoContent\";\n    RpcRequestStatus[RpcRequestStatus[\"BadGateway\"] = 10] = \"BadGateway\";\n    RpcRequestStatus[RpcRequestStatus[\"ServiceUnavailable\"] = 11] = \"ServiceUnavailable\";\n    RpcRequestStatus[RpcRequestStatus[\"GatewayTimeout\"] = 12] = \"GatewayTimeout\";\n    RpcRequestStatus[RpcRequestStatus[\"RequestTimeout\"] = 13] = \"RequestTimeout\";\n    RpcRequestStatus[RpcRequestStatus[\"TooManyRequests\"] = 14] = \"TooManyRequests\";\n})(RpcRequestStatus || (RpcRequestStatus = {}));\n/** @public @deprecated in 3.6. The RPC system will be significantly refactored (or replaced) in version 5.0. */\n(function (RpcRequestStatus) {\n    function isTransientError(status) {\n        return status === RpcRequestStatus.BadGateway || status === RpcRequestStatus.ServiceUnavailable || status === RpcRequestStatus.GatewayTimeout\n            || status === RpcRequestStatus.RequestTimeout || status === RpcRequestStatus.TooManyRequests;\n    }\n    RpcRequestStatus.isTransientError = isTransientError;\n})(RpcRequestStatus || (RpcRequestStatus = {}));\n/** RPC request event types.\n * @public\n * @deprecated in 3.6. The RPC system will be significantly refactored (or replaced) in version 5.0.\n */\nexport var RpcRequestEvent;\n(function (RpcRequestEvent) {\n    RpcRequestEvent[RpcRequestEvent[\"StatusChanged\"] = 0] = \"StatusChanged\";\n    RpcRequestEvent[RpcRequestEvent[\"PendingUpdateReceived\"] = 1] = \"PendingUpdateReceived\";\n    RpcRequestEvent[RpcRequestEvent[\"TransientErrorReceived\"] = 2] = \"TransientErrorReceived\";\n})(RpcRequestEvent || (RpcRequestEvent = {}));\n/** RPC content types.\n * @public\n * @deprecated in 3.6. The RPC system will be significantly refactored (or replaced) in version 5.0.\n */\nexport var RpcContentType;\n(function (RpcContentType) {\n    RpcContentType[RpcContentType[\"Unknown\"] = 0] = \"Unknown\";\n    RpcContentType[RpcContentType[\"Text\"] = 1] = \"Text\";\n    RpcContentType[RpcContentType[\"Binary\"] = 2] = \"Binary\";\n    RpcContentType[RpcContentType[\"Multipart\"] = 3] = \"Multipart\";\n    RpcContentType[RpcContentType[\"Stream\"] = 4] = \"Stream\";\n})(RpcContentType || (RpcContentType = {}));\n/** Endpoints for RPC protocols.\n * @public\n * @deprecated in 3.6. The RPC system will be significantly refactored (or replaced) in version 5.0.\n */\nexport var RpcEndpoint;\n(function (RpcEndpoint) {\n    RpcEndpoint[RpcEndpoint[\"Frontend\"] = 0] = \"Frontend\";\n    RpcEndpoint[RpcEndpoint[\"Backend\"] = 1] = \"Backend\";\n})(RpcEndpoint || (RpcEndpoint = {}));\n/* eslint-disable @typescript-eslint/naming-convention */\n/** @internal */\nexport const WEB_RPC_CONSTANTS = {\n    CONTENT: \"Content-Type\",\n    TEXT: \"text/plain\",\n    ANY_TEXT: \"text/\",\n    BINARY: \"application/octet-stream\",\n    MULTIPART: \"multipart/form-data\",\n};\n//# sourceMappingURL=RpcConstants.js.map",
      "start": 1693508121006,
      "end": 1693508121052,
      "sourcemaps": null
    }
  ]
}
