{
  "resolvedId": "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/DebugWindow.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\nimport { assert } from \"@itwin/core-bentley\";\r\nimport { DiagnosticsPanel } from \"@itwin/frontend-devtools\";\r\nimport { IModelApp, Viewport } from \"@itwin/core-frontend\";\r\nimport { Surface } from \"./Surface\";\r\nimport { Window } from \"./Window\";\r\n\r\nexport class DebugWindow extends Window {\r\n  private readonly _windowId: string;\r\n  private readonly _panel: DiagnosticsPanel;\r\n  private readonly _dispose: () => void;\r\n  private _isOpen = false;\r\n\r\n  public constructor(viewport: Viewport) {\r\n    super(Surface.instance, { top: 0, left: 0 });\r\n\r\n    this._panel = new DiagnosticsPanel(viewport, { exclude: { keyin: true } });\r\n    this._panel.element.className = \"debugPanel\";\r\n\r\n    this._panel.element.style.height = \"auto\";\r\n    this._panel.element.style.top = \"0px\";\r\n    this._panel.element.style.left = \"0px\";\r\n    this._panel.element.style.zIndex = \"inherit\";\r\n\r\n    this.contentDiv.appendChild(this._panel.element);\r\n\r\n    this.title = `[ ${viewport.viewportId} ] Diagnostics`;\r\n    this._windowId = `debugPanel-${viewport.viewportId}`;\r\n    this.isPinned = true;\r\n\r\n    this._dispose = IModelApp.viewManager.onSelectedViewportChanged.addListener((args) => {\r\n      this.container.style.display = args.current === viewport ? \"flex\" : \"none\";\r\n    });\r\n  }\r\n\r\n  public dispose(): void {\r\n    this._panel.dispose();\r\n    this.hide();\r\n    this._dispose();\r\n  }\r\n\r\n  public override get isResizable() { return false; }\r\n  public get windowId() { return this._windowId; }\r\n\r\n  public toggle(): void {\r\n    if (this._isOpen)\r\n      this.hide();\r\n    else\r\n      this.show();\r\n  }\r\n\r\n  public show(): void {\r\n    if (!this._isOpen) {\r\n      this.surface.addWindow(this);\r\n      this.surface.element.appendChild(this.container);\r\n      this._isOpen = true;\r\n      const w = this._panel.element.clientWidth + 2;\r\n      const h = this._panel.element.clientHeight;\r\n      this._header.resizeContent(w, h);\r\n    }\r\n  }\r\n\r\n  public hide(): void {\r\n    if (this._isOpen) {\r\n      this.surface.close(this);\r\n      assert(!this._isOpen);\r\n    }\r\n  }\r\n\r\n  public override onClosed(): void {\r\n    this._isOpen = false;\r\n  }\r\n}\r\n",
      "start": 1693508124559,
      "end": 1693508124707,
      "sourcemaps": null
    },
    {
      "name": "vite:esbuild",
      "result": "\"use strict\";\nimport { assert } from \"@itwin/core-bentley\";\nimport { DiagnosticsPanel } from \"@itwin/frontend-devtools\";\nimport { IModelApp } from \"@itwin/core-frontend\";\nimport { Surface } from \"./Surface\";\nimport { Window } from \"./Window\";\nexport class DebugWindow extends Window {\n  constructor(viewport) {\n    super(Surface.instance, { top: 0, left: 0 });\n    this._isOpen = false;\n    this._panel = new DiagnosticsPanel(viewport, { exclude: { keyin: true } });\n    this._panel.element.className = \"debugPanel\";\n    this._panel.element.style.height = \"auto\";\n    this._panel.element.style.top = \"0px\";\n    this._panel.element.style.left = \"0px\";\n    this._panel.element.style.zIndex = \"inherit\";\n    this.contentDiv.appendChild(this._panel.element);\n    this.title = `[ ${viewport.viewportId} ] Diagnostics`;\n    this._windowId = `debugPanel-${viewport.viewportId}`;\n    this.isPinned = true;\n    this._dispose = IModelApp.viewManager.onSelectedViewportChanged.addListener((args) => {\n      this.container.style.display = args.current === viewport ? \"flex\" : \"none\";\n    });\n  }\n  dispose() {\n    this._panel.dispose();\n    this.hide();\n    this._dispose();\n  }\n  get isResizable() {\n    return false;\n  }\n  get windowId() {\n    return this._windowId;\n  }\n  toggle() {\n    if (this._isOpen)\n      this.hide();\n    else\n      this.show();\n  }\n  show() {\n    if (!this._isOpen) {\n      this.surface.addWindow(this);\n      this.surface.element.appendChild(this.container);\n      this._isOpen = true;\n      const w = this._panel.element.clientWidth + 2;\n      const h = this._panel.element.clientHeight;\n      this._header.resizeContent(w, h);\n    }\n  }\n  hide() {\n    if (this._isOpen) {\n      this.surface.close(this);\n      assert(!this._isOpen);\n    }\n  }\n  onClosed() {\n    this._isOpen = false;\n  }\n}\n",
      "start": 1693508124707,
      "end": 1693508124710,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/DebugWindow.ts"
        ],
        "sourcesContent": [
          "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\nimport { assert } from \"@itwin/core-bentley\";\r\nimport { DiagnosticsPanel } from \"@itwin/frontend-devtools\";\r\nimport { IModelApp, Viewport } from \"@itwin/core-frontend\";\r\nimport { Surface } from \"./Surface\";\r\nimport { Window } from \"./Window\";\r\n\r\nexport class DebugWindow extends Window {\r\n  private readonly _windowId: string;\r\n  private readonly _panel: DiagnosticsPanel;\r\n  private readonly _dispose: () => void;\r\n  private _isOpen = false;\r\n\r\n  public constructor(viewport: Viewport) {\r\n    super(Surface.instance, { top: 0, left: 0 });\r\n\r\n    this._panel = new DiagnosticsPanel(viewport, { exclude: { keyin: true } });\r\n    this._panel.element.className = \"debugPanel\";\r\n\r\n    this._panel.element.style.height = \"auto\";\r\n    this._panel.element.style.top = \"0px\";\r\n    this._panel.element.style.left = \"0px\";\r\n    this._panel.element.style.zIndex = \"inherit\";\r\n\r\n    this.contentDiv.appendChild(this._panel.element);\r\n\r\n    this.title = `[ ${viewport.viewportId} ] Diagnostics`;\r\n    this._windowId = `debugPanel-${viewport.viewportId}`;\r\n    this.isPinned = true;\r\n\r\n    this._dispose = IModelApp.viewManager.onSelectedViewportChanged.addListener((args) => {\r\n      this.container.style.display = args.current === viewport ? \"flex\" : \"none\";\r\n    });\r\n  }\r\n\r\n  public dispose(): void {\r\n    this._panel.dispose();\r\n    this.hide();\r\n    this._dispose();\r\n  }\r\n\r\n  public override get isResizable() { return false; }\r\n  public get windowId() { return this._windowId; }\r\n\r\n  public toggle(): void {\r\n    if (this._isOpen)\r\n      this.hide();\r\n    else\r\n      this.show();\r\n  }\r\n\r\n  public show(): void {\r\n    if (!this._isOpen) {\r\n      this.surface.addWindow(this);\r\n      this.surface.element.appendChild(this.container);\r\n      this._isOpen = true;\r\n      const w = this._panel.element.clientWidth + 2;\r\n      const h = this._panel.element.clientHeight;\r\n      this._header.resizeContent(w, h);\r\n    }\r\n  }\r\n\r\n  public hide(): void {\r\n    if (this._isOpen) {\r\n      this.surface.close(this);\r\n      assert(!this._isOpen);\r\n    }\r\n  }\r\n\r\n  public override onClosed(): void {\r\n    this._isOpen = false;\r\n  }\r\n}\r\n"
        ],
        "mappings": ";AAIA,SAAS,cAAc;AACvB,SAAS,wBAAwB;AACjC,SAAS,iBAA2B;AACpC,SAAS,eAAe;AACxB,SAAS,cAAc;AAEhB,aAAM,oBAAoB,OAAO;AAAA,EAM/B,YAAY,UAAoB;AACrC,UAAM,QAAQ,UAAU,EAAE,KAAK,GAAG,MAAM,EAAE,CAAC;AAH7C,SAAQ,UAAU;AAKhB,SAAK,SAAS,IAAI,iBAAiB,UAAU,EAAE,SAAS,EAAE,OAAO,KAAK,EAAE,CAAC;AACzE,SAAK,OAAO,QAAQ,YAAY;AAEhC,SAAK,OAAO,QAAQ,MAAM,SAAS;AACnC,SAAK,OAAO,QAAQ,MAAM,MAAM;AAChC,SAAK,OAAO,QAAQ,MAAM,OAAO;AACjC,SAAK,OAAO,QAAQ,MAAM,SAAS;AAEnC,SAAK,WAAW,YAAY,KAAK,OAAO,OAAO;AAE/C,SAAK,QAAQ,KAAK,SAAS,UAAU;AACrC,SAAK,YAAY,cAAc,SAAS,UAAU;AAClD,SAAK,WAAW;AAEhB,SAAK,WAAW,UAAU,YAAY,0BAA0B,YAAY,CAAC,SAAS;AACpF,WAAK,UAAU,MAAM,UAAU,KAAK,YAAY,WAAW,SAAS;AAAA,IACtE,CAAC;AAAA,EACH;AAAA,EAEO,UAAgB;AACrB,SAAK,OAAO,QAAQ;AACpB,SAAK,KAAK;AACV,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,IAAoB,cAAc;AAAE,WAAO;AAAA,EAAO;AAAA,EAClD,IAAW,WAAW;AAAE,WAAO,KAAK;AAAA,EAAW;AAAA,EAExC,SAAe;AACpB,QAAI,KAAK;AACP,WAAK,KAAK;AAAA;AAEV,WAAK,KAAK;AAAA,EACd;AAAA,EAEO,OAAa;AAClB,QAAI,CAAC,KAAK,SAAS;AACjB,WAAK,QAAQ,UAAU,IAAI;AAC3B,WAAK,QAAQ,QAAQ,YAAY,KAAK,SAAS;AAC/C,WAAK,UAAU;AACf,YAAM,IAAI,KAAK,OAAO,QAAQ,cAAc;AAC5C,YAAM,IAAI,KAAK,OAAO,QAAQ;AAC9B,WAAK,QAAQ,cAAc,GAAG,CAAC;AAAA,IACjC;AAAA,EACF;AAAA,EAEO,OAAa;AAClB,QAAI,KAAK,SAAS;AAChB,WAAK,QAAQ,MAAM,IAAI;AACvB,aAAO,CAAC,KAAK,OAAO;AAAA,IACtB;AAAA,EACF;AAAA,EAEgB,WAAiB;AAC/B,SAAK,UAAU;AAAA,EACjB;AACF;",
        "names": []
      }
    }
  ]
}
