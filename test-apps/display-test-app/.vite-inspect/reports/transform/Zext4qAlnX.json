{
  "resolvedId": "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/StandardRotations.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IModelApp, Viewport } from \"@itwin/core-frontend\";\r\nimport { createToolButton, ToolBarDropDown } from \"./ToolBar\";\r\n\r\nconst entries = [\r\n  \"\\ue916\", // top\r\n  \"\\ue910\", // bottom\r\n  \"\\ue914\", // left\r\n  \"\\ue915\", // right\r\n  \"\\ue911\", // front\r\n  \"\\ue90f\", // back\r\n  \"\\ue912\", // isoLeft\r\n  \"\\ue913\", // isoRight\r\n];\r\n\r\nexport class StandardRotations extends ToolBarDropDown {\r\n  private readonly _element: HTMLElement;\r\n  private readonly _parent: HTMLElement;\r\n  private readonly _vp: Viewport;\r\n\r\n  public constructor(parent: HTMLElement, vp: Viewport) {\r\n    super();\r\n    this._parent = parent;\r\n    this._vp = vp;\r\n    this._element = document.createElement(\"div\");\r\n    this._element.className = \"toolMenu\";\r\n    this._element.style.display = \"block\";\r\n\r\n    // 2 rows of 4 buttons.\r\n    let div = document.createElement(\"div\");\r\n    div.style.display = \"flex\";\r\n    this._element.appendChild(div);\r\n    for (let i = 0; i < entries.length; i++) {\r\n      if (4 === i) {\r\n        div = document.createElement(\"div\");\r\n        div.style.display = \"flex\";\r\n        this._element.appendChild(div);\r\n      }\r\n\r\n      div.appendChild(createToolButton({\r\n        iconUnicode: entries[i],\r\n        click: async () => IModelApp.tools.run(\"View.Standard\", IModelApp.viewManager.selectedView, i),\r\n      }));\r\n    }\r\n\r\n    parent.appendChild(this._element);\r\n  }\r\n\r\n  public get isOpen() { return \"none\" !== this._element.style.display; }\r\n  protected _open() { this._element.style.display = \"block\"; }\r\n  protected _close() { this._element.style.display = \"none\"; }\r\n\r\n  public override get onViewChanged(): Promise<void> {\r\n    this._parent.style.display = this._vp.view.allow3dManipulations() ? \"block\" : \"none\";\r\n    return Promise.resolve();\r\n  }\r\n}\r\n",
      "start": 1693508124583,
      "end": 1693508124719,
      "sourcemaps": null
    },
    {
      "name": "vite:esbuild",
      "result": "\"use strict\";\nimport { IModelApp } from \"@itwin/core-frontend\";\nimport { createToolButton, ToolBarDropDown } from \"./ToolBar\";\nconst entries = [\n  \"\",\n  // top\n  \"\",\n  // bottom\n  \"\",\n  // left\n  \"\",\n  // right\n  \"\",\n  // front\n  \"\",\n  // back\n  \"\",\n  // isoLeft\n  \"\"\n  // isoRight\n];\nexport class StandardRotations extends ToolBarDropDown {\n  constructor(parent, vp) {\n    super();\n    this._parent = parent;\n    this._vp = vp;\n    this._element = document.createElement(\"div\");\n    this._element.className = \"toolMenu\";\n    this._element.style.display = \"block\";\n    let div = document.createElement(\"div\");\n    div.style.display = \"flex\";\n    this._element.appendChild(div);\n    for (let i = 0; i < entries.length; i++) {\n      if (4 === i) {\n        div = document.createElement(\"div\");\n        div.style.display = \"flex\";\n        this._element.appendChild(div);\n      }\n      div.appendChild(createToolButton({\n        iconUnicode: entries[i],\n        click: async () => IModelApp.tools.run(\"View.Standard\", IModelApp.viewManager.selectedView, i)\n      }));\n    }\n    parent.appendChild(this._element);\n  }\n  get isOpen() {\n    return \"none\" !== this._element.style.display;\n  }\n  _open() {\n    this._element.style.display = \"block\";\n  }\n  _close() {\n    this._element.style.display = \"none\";\n  }\n  get onViewChanged() {\n    this._parent.style.display = this._vp.view.allow3dManipulations() ? \"block\" : \"none\";\n    return Promise.resolve();\n  }\n}\n",
      "start": 1693508124719,
      "end": 1693508124833,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/StandardRotations.ts"
        ],
        "sourcesContent": [
          "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport { IModelApp, Viewport } from \"@itwin/core-frontend\";\r\nimport { createToolButton, ToolBarDropDown } from \"./ToolBar\";\r\n\r\nconst entries = [\r\n  \"\\ue916\", // top\r\n  \"\\ue910\", // bottom\r\n  \"\\ue914\", // left\r\n  \"\\ue915\", // right\r\n  \"\\ue911\", // front\r\n  \"\\ue90f\", // back\r\n  \"\\ue912\", // isoLeft\r\n  \"\\ue913\", // isoRight\r\n];\r\n\r\nexport class StandardRotations extends ToolBarDropDown {\r\n  private readonly _element: HTMLElement;\r\n  private readonly _parent: HTMLElement;\r\n  private readonly _vp: Viewport;\r\n\r\n  public constructor(parent: HTMLElement, vp: Viewport) {\r\n    super();\r\n    this._parent = parent;\r\n    this._vp = vp;\r\n    this._element = document.createElement(\"div\");\r\n    this._element.className = \"toolMenu\";\r\n    this._element.style.display = \"block\";\r\n\r\n    // 2 rows of 4 buttons.\r\n    let div = document.createElement(\"div\");\r\n    div.style.display = \"flex\";\r\n    this._element.appendChild(div);\r\n    for (let i = 0; i < entries.length; i++) {\r\n      if (4 === i) {\r\n        div = document.createElement(\"div\");\r\n        div.style.display = \"flex\";\r\n        this._element.appendChild(div);\r\n      }\r\n\r\n      div.appendChild(createToolButton({\r\n        iconUnicode: entries[i],\r\n        click: async () => IModelApp.tools.run(\"View.Standard\", IModelApp.viewManager.selectedView, i),\r\n      }));\r\n    }\r\n\r\n    parent.appendChild(this._element);\r\n  }\r\n\r\n  public get isOpen() { return \"none\" !== this._element.style.display; }\r\n  protected _open() { this._element.style.display = \"block\"; }\r\n  protected _close() { this._element.style.display = \"none\"; }\r\n\r\n  public override get onViewChanged(): Promise<void> {\r\n    this._parent.style.display = this._vp.view.allow3dManipulations() ? \"block\" : \"none\";\r\n    return Promise.resolve();\r\n  }\r\n}\r\n"
        ],
        "mappings": ";AAKA,SAAS,iBAA2B;AACpC,SAAS,kBAAkB,uBAAuB;AAElD,MAAM,UAAU;AAAA,EACd;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AAAA,EACA;AAAA;AACF;AAEO,aAAM,0BAA0B,gBAAgB;AAAA,EAK9C,YAAY,QAAqB,IAAc;AACpD,UAAM;AACN,SAAK,UAAU;AACf,SAAK,MAAM;AACX,SAAK,WAAW,SAAS,cAAc,KAAK;AAC5C,SAAK,SAAS,YAAY;AAC1B,SAAK,SAAS,MAAM,UAAU;AAG9B,QAAI,MAAM,SAAS,cAAc,KAAK;AACtC,QAAI,MAAM,UAAU;AACpB,SAAK,SAAS,YAAY,GAAG;AAC7B,aAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,UAAI,MAAM,GAAG;AACX,cAAM,SAAS,cAAc,KAAK;AAClC,YAAI,MAAM,UAAU;AACpB,aAAK,SAAS,YAAY,GAAG;AAAA,MAC/B;AAEA,UAAI,YAAY,iBAAiB;AAAA,QAC/B,aAAa,QAAQ,CAAC;AAAA,QACtB,OAAO,YAAY,UAAU,MAAM,IAAI,iBAAiB,UAAU,YAAY,cAAc,CAAC;AAAA,MAC/F,CAAC,CAAC;AAAA,IACJ;AAEA,WAAO,YAAY,KAAK,QAAQ;AAAA,EAClC;AAAA,EAEA,IAAW,SAAS;AAAE,WAAO,WAAW,KAAK,SAAS,MAAM;AAAA,EAAS;AAAA,EAC3D,QAAQ;AAAE,SAAK,SAAS,MAAM,UAAU;AAAA,EAAS;AAAA,EACjD,SAAS;AAAE,SAAK,SAAS,MAAM,UAAU;AAAA,EAAQ;AAAA,EAE3D,IAAoB,gBAA+B;AACjD,SAAK,QAAQ,MAAM,UAAU,KAAK,IAAI,KAAK,qBAAqB,IAAI,UAAU;AAC9E,WAAO,QAAQ,QAAQ;AAAA,EACzB;AACF;",
        "names": []
      }
    }
  ]
}
