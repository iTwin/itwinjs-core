{
  "resolvedId": "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/EnvironmentEditor.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport {\r\n  CheckBox, ColorInput, createButton, createCheckBox, createColorInput, createNestedMenu, createRadioBox, createSlider, RadioBox, Slider,\r\n} from \"@itwin/frontend-devtools\";\r\nimport { ColorDef, Environment, RenderMode, SkyBox, SkyBoxProps, SkyGradient } from \"@itwin/core-common\";\r\nimport { Viewport, ViewState, ViewState3d } from \"@itwin/core-frontend\";\r\nimport { LightingEditor } from \"./LightingEditor\";\r\nimport { AtmosphereEditor } from \"./Atmosphere\";\r\n\r\ntype UpdateAttribute = (view: ViewState) => void;\r\n\r\nlet expandEnvironmentEditor = false;\r\n\r\nexport class EnvironmentEditor {\r\n  private readonly _vp: Viewport;\r\n  private readonly _updates: UpdateAttribute[] = [];\r\n  private readonly _eeSkyboxType: RadioBox;\r\n  private readonly _eeZenithColor: ColorInput;\r\n  private readonly _eeSkyColor: ColorInput;\r\n  private readonly _eeGroundColor: ColorInput;\r\n  private readonly _eeNadirColor: ColorInput;\r\n  private readonly _eeSkyExponent: Slider;\r\n  private readonly _eeGroundExponent: Slider;\r\n  private readonly _eeBackgroundColor: ColorInput;\r\n  private _id = 0;\r\n  private _removeEnvironmentListener?: VoidFunction;\r\n  private _removeDisplayStyleListener?: VoidFunction;\r\n  private _updatingEnvironment = false;\r\n\r\n  public constructor(vp: Viewport, parent: HTMLElement) {\r\n    this._vp = vp;\r\n\r\n    const envMenu = createNestedMenu({\r\n      id: \"ee_menu\",\r\n      label: \"Environment\",\r\n      parent,\r\n      // We use a static so the expand/collapse state persists after closing and reopening the drop-down.\r\n      expand: expandEnvironmentEditor,\r\n      handler: (expanded) => {\r\n        expandEnvironmentEditor = expanded;\r\n        envMenu.label.style.fontWeight = expanded ? \"bold\" : \"500\";\r\n      },\r\n    });\r\n    (envMenu.div.firstElementChild!.lastElementChild! as HTMLElement).style.borderColor = \"grey\";\r\n    const nestedMenu = envMenu.body;\r\n    const is3d = this._vp.view.is3d();\r\n\r\n    const lightingDiv = document.createElement(\"div\");\r\n    const lightingEditor = new LightingEditor(vp, lightingDiv);\r\n    this._updates.push((view: ViewState) => {\r\n      lightingEditor.update(view);\r\n      lightingDiv.style.display = view.is3d() && RenderMode.SmoothShade === view.viewFlags.renderMode ? \"\" : \"none\";\r\n    });\r\n\r\n    lightingDiv.appendChild(document.createElement(\"hr\"));\r\n    nestedMenu.appendChild(lightingDiv);\r\n\r\n    const atmosphereDiv = document.createElement(\"div\");\r\n    const atmosphereEditor = new AtmosphereEditor(vp, atmosphereDiv);\r\n    this._updates.push((view: ViewState) => {\r\n      atmosphereEditor.update(view);\r\n    });\r\n    nestedMenu.appendChild(atmosphereDiv);\r\n\r\n    this._eeBackgroundColor = createColorInput({\r\n      parent: nestedMenu,\r\n      value: this._vp.view.backgroundColor.toHexString(),\r\n      handler: (value) => {\r\n        this._vp.view.displayStyle.backgroundColor = ColorDef.create(value);\r\n        this.sync();\r\n      },\r\n      id: \"ee_bgColor\",\r\n      label: \"Background Color\",\r\n      display: is3d ? \"none\" : \"block\",\r\n    });\r\n    this._eeBackgroundColor.div.style.textAlign = \"right\";\r\n\r\n    this.listen();\r\n\r\n    const curEnv = this._vp.view.is3d() ? this._vp.view.getDisplayStyle3d().environment : undefined;\r\n    const curGrad = curEnv?.sky.gradient;\r\n\r\n    const eeDiv = document.createElement(\"div\");\r\n    eeDiv.hidden = undefined !== curEnv && !curEnv.displaySky;\r\n\r\n    const showSkyboxControls = (enabled: boolean) => {\r\n      eeDiv.hidden = !enabled;\r\n      this._eeBackgroundColor.div.style.display = enabled ? \"none\" : \"block\";\r\n    };\r\n\r\n    this.addEnvAttribute(nestedMenu, \"Sky Box\", \"sky\", showSkyboxControls);\r\n\r\n    nestedMenu.appendChild(this._eeBackgroundColor.div);\r\n\r\n    this._eeSkyboxType = createRadioBox({\r\n      id: \"ee_skyboxType\",\r\n      entries: [\r\n        { value: \"2colors\", label: \"2 Colors\" },\r\n        { value: \"4colors\", label: \"4 Colors\" },\r\n      ],\r\n      handler: (value) => {\r\n        this.updateEnvironment({ twoColor: value === \"2colors\" });\r\n\r\n        // Hide elements not relevant to 2 colors\r\n        const twoColors = value !== \"4colors\";\r\n        this._eeSkyColor.div.hidden = twoColors;\r\n        this._eeGroundColor.div.hidden = twoColors;\r\n        this._eeSkyExponent.div.style.display = twoColors ? \"none\" : \"block\";\r\n        this._eeGroundExponent.div.style.display = twoColors ? \"none\" : \"block\";\r\n      },\r\n      parent: eeDiv,\r\n      defaultValue: curGrad && curGrad.twoColor ? \"2colors\" : \"4colors\",\r\n    });\r\n\r\n    const row1 = document.createElement(\"div\");\r\n    eeDiv.appendChild(row1);\r\n    row1.style.display = \"flex\";\r\n    row1.style.justifyContent = \"flex-end\";\r\n\r\n    this._eeSkyColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ skyColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.skyColor.toHexString(),\r\n      label: \"Sky Color\",\r\n      parent: row1,\r\n    });\r\n    this._eeSkyColor.div.style.marginRight = \"10px\";\r\n\r\n    this._eeZenithColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ zenithColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.zenithColor.toHexString(),\r\n      label: \"Zenith Color\",\r\n      parent: row1,\r\n    });\r\n\r\n    const row2 = document.createElement(\"div\");\r\n    eeDiv.appendChild(row2);\r\n    row2.style.display = \"flex\";\r\n    row2.style.justifyContent = \"flex-end\";\r\n\r\n    this._eeGroundColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ groundColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.groundColor.toHexString(),\r\n      label: \"Ground Color\",\r\n      parent: row2,\r\n    });\r\n    this._eeGroundColor.div.style.marginRight = \"16px\";\r\n\r\n    this._eeNadirColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ nadirColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.nadirColor.toHexString(),\r\n      label: \"Nadir Color\",\r\n      parent: row2,\r\n    });\r\n\r\n    this._eeSkyExponent = createSlider({\r\n      parent: eeDiv,\r\n      name: \"Sky Exponent\",\r\n      id: \"ee_skyExponent\",\r\n      min: \"0.0\",\r\n      step: \"0.25\",\r\n      max: \"20.0\",\r\n      readout: \"right\",\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.skyExponent.toString(),\r\n      handler: (slider) => this.updateEnvironment({ skyExponent: parseFloat(slider.value) }),\r\n    });\r\n\r\n    this._eeGroundExponent = createSlider({\r\n      parent: eeDiv,\r\n      name: \"Ground Exponent\",\r\n      id: \"ee_groundExponent\",\r\n      min: \"0.0\",\r\n      step: \"0.25\",\r\n      max: \"20.0\",\r\n      readout: \"right\",\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.groundExponent.toString(),\r\n      handler: (slider) => this.updateEnvironment({ groundExponent: parseFloat(slider.value) }),\r\n    });\r\n\r\n    const buttonDiv = document.createElement(\"div\");\r\n\r\n    createButton({\r\n      parent: buttonDiv,\r\n      id: \"viewAttr_EEReset\",\r\n      value: \"Reset\",\r\n      inline: true,\r\n      handler: () => this.resetEnvironmentEditor(),\r\n    });\r\n\r\n    createButton({\r\n      parent: buttonDiv,\r\n      id: \"viewAttr_eeExport\",\r\n      value: \"Export\",\r\n      inline: true,\r\n      handler: () => {\r\n        const env = (this._vp.view as ViewState3d).getDisplayStyle3d().environment.sky.gradient;\r\n        let msg = `Zenith Color: ${env.zenithColor.toRgbString()}\\nNadir Color: ${env.nadirColor.toRgbString()}`;\r\n        if (!env.twoColor)\r\n          msg = msg.concat(`\\nSky Color: ${env.skyColor.toRgbString()}\\nGround Color: ${env.groundColor.toRgbString()}\\nSky Exponent: ${env.skyExponent}\\nGround Exponent: ${env.groundExponent}`);\r\n        alert(msg);\r\n      },\r\n    });\r\n    buttonDiv.style.textAlign = \"center\";\r\n    eeDiv.appendChild(buttonDiv);\r\n\r\n    showSkyboxControls(undefined !== curEnv && curEnv.displaySky);\r\n    nestedMenu.appendChild(eeDiv);\r\n\r\n    this._updates.push((view) => {\r\n      let skyboxEnabled = false;\r\n      if (view.is3d()) {\r\n        skyboxEnabled = view.getDisplayStyle3d().environment.displaySky;\r\n      }\r\n\r\n      showSkyboxControls(skyboxEnabled);\r\n      envMenu.label.style.fontWeight = expandEnvironmentEditor ? \"bold\" : \"500\";\r\n    });\r\n\r\n    this.addEnvAttribute(nestedMenu, \"Ground Plane\", \"ground\");\r\n\r\n    const hr = document.createElement(\"hr\");\r\n    hr.style.borderColor = \"grey\";\r\n    nestedMenu.appendChild(hr);\r\n  }\r\n\r\n  public update(view: ViewState): void {\r\n    for (const update of this._updates)\r\n      update(view);\r\n  }\r\n\r\n  private listen(): void {\r\n    this.listenForEnvironment();\r\n    if (this._removeDisplayStyleListener) {\r\n      this._removeDisplayStyleListener();\r\n      this._removeDisplayStyleListener = undefined;\r\n    }\r\n\r\n    if (this._vp.view.is3d())\r\n      this._removeDisplayStyleListener = this._vp.view.onDisplayStyleChanged.addListener(() => this.listen());\r\n  }\r\n\r\n  private listenForEnvironment(): void {\r\n    if (this._removeEnvironmentListener) {\r\n      this._removeEnvironmentListener();\r\n      this._removeEnvironmentListener = undefined;\r\n    }\r\n\r\n    if (this._vp.view.is3d()) {\r\n      this._removeEnvironmentListener = this._vp.view.displayStyle.settings.onEnvironmentChanged.addListener((env) => {\r\n        this.updateEnvironmentEditorUI(env);\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateEnvironment(newEnv: SkyBoxProps): void {\r\n    if (this._updatingEnvironment || !this._vp.view.is3d())\r\n      return;\r\n\r\n    // We don't want our event listeners to respond to events we ourselves produced.\r\n    this._updatingEnvironment = true;\r\n\r\n    const style = this._vp.view.displayStyle;\r\n    const gradient = SkyGradient.fromJSON({ ...style.environment.sky.toJSON(), ...newEnv });\r\n    style.environment = style.environment.clone({ sky: SkyBox.createGradient(gradient) });\r\n\r\n    this.sync();\r\n    this._updatingEnvironment = false;\r\n  }\r\n\r\n  private updateEnvironmentEditorUI(env: Environment): void {\r\n    if (this._updatingEnvironment)\r\n      return;\r\n\r\n    // Setting the values of UI controls below will trigger callbacks that call updateEnvironment().\r\n    // We don't want to do that when we're modifying the controls ourselves.\r\n    this._updatingEnvironment = true;\r\n\r\n    this._eeBackgroundColor.input.value = this._vp.view.backgroundColor.toHexString();\r\n\r\n    const gradient = env.sky.gradient;\r\n\r\n    this._eeSkyboxType.setValue(gradient.twoColor ? \"2colors\" : \"4colors\");\r\n    this._eeZenithColor.input.value = gradient.zenithColor.toHexString();\r\n    this._eeSkyColor.input.value = gradient.skyColor.toHexString();\r\n    this._eeGroundColor.input.value = gradient.groundColor.toHexString();\r\n    this._eeNadirColor.input.value = gradient.nadirColor.toHexString();\r\n    this._eeSkyExponent.slider.value = this._eeSkyExponent.readout.innerText = gradient.skyExponent.toString();\r\n    this._eeGroundExponent.slider.value = this._eeGroundExponent.readout.innerText = gradient.groundExponent.toString();\r\n\r\n    this._updatingEnvironment = false;\r\n  }\r\n\r\n  private resetEnvironmentEditor(): void {\r\n    const view = this._vp.view;\r\n    if (!view.is3d())\r\n      return;\r\n\r\n    view.displayStyle.environment = Environment.defaults.withDisplay({ sky: true });\r\n    this.sync();\r\n    this.updateEnvironmentEditorUI(view.displayStyle.environment);\r\n  }\r\n\r\n  private addEnvAttribute(parent: HTMLElement, label: string, which: \"sky\" | \"ground\", updateHandler?: (enabled: boolean) => void): void {\r\n    const elems = this.addCheckbox(label, (enabled: boolean) => {\r\n      const view3d = this._vp.view as ViewState3d;\r\n      const style = view3d.getDisplayStyle3d();\r\n      style.environment = style.environment.withDisplay(\"sky\" === which ? { sky: enabled } : { ground: enabled });\r\n\r\n      if (undefined !== updateHandler)\r\n        updateHandler(enabled);\r\n\r\n      this.sync();\r\n    }, parent, this._nextId);\r\n\r\n    const update = (view: ViewState) => {\r\n      const visible = view.is3d();\r\n      elems.div.style.display = visible ? \"block\" : \"none\";\r\n      if (visible) {\r\n        const view3d = view;\r\n        const style = view3d.getDisplayStyle3d();\r\n        elems.checkbox.checked = style.environment[which === \"sky\" ? \"displaySky\" : \"displayGround\"];\r\n      }\r\n    };\r\n\r\n    this._updates.push(update);\r\n  }\r\n\r\n  private sync(): void {\r\n    this._vp.synchWithView();\r\n  }\r\n\r\n  private addCheckbox(cbLabel: string, handler: (enabled: boolean) => void, parent: HTMLElement, id: string): CheckBox {\r\n    return createCheckBox({\r\n      parent,\r\n      name: cbLabel,\r\n      id,\r\n      handler: (cb) => handler(cb.checked),\r\n    });\r\n  }\r\n\r\n  private get _nextId(): string {\r\n    return `ee_checkbox_${++this._id}`;\r\n  }\r\n}\r\n",
      "start": 1693508126106,
      "end": 1693508126251,
      "sourcemaps": null
    },
    {
      "name": "vite:esbuild",
      "result": "\"use strict\";\nimport {\n  createButton,\n  createCheckBox,\n  createColorInput,\n  createNestedMenu,\n  createRadioBox,\n  createSlider\n} from \"@itwin/frontend-devtools\";\nimport { ColorDef, Environment, RenderMode, SkyBox, SkyGradient } from \"@itwin/core-common\";\nimport { LightingEditor } from \"./LightingEditor\";\nimport { AtmosphereEditor } from \"./Atmosphere\";\nlet expandEnvironmentEditor = false;\nexport class EnvironmentEditor {\n  constructor(vp, parent) {\n    this._updates = [];\n    this._id = 0;\n    this._updatingEnvironment = false;\n    this._vp = vp;\n    const envMenu = createNestedMenu({\n      id: \"ee_menu\",\n      label: \"Environment\",\n      parent,\n      // We use a static so the expand/collapse state persists after closing and reopening the drop-down.\n      expand: expandEnvironmentEditor,\n      handler: (expanded) => {\n        expandEnvironmentEditor = expanded;\n        envMenu.label.style.fontWeight = expanded ? \"bold\" : \"500\";\n      }\n    });\n    envMenu.div.firstElementChild.lastElementChild.style.borderColor = \"grey\";\n    const nestedMenu = envMenu.body;\n    const is3d = this._vp.view.is3d();\n    const lightingDiv = document.createElement(\"div\");\n    const lightingEditor = new LightingEditor(vp, lightingDiv);\n    this._updates.push((view) => {\n      lightingEditor.update(view);\n      lightingDiv.style.display = view.is3d() && RenderMode.SmoothShade === view.viewFlags.renderMode ? \"\" : \"none\";\n    });\n    lightingDiv.appendChild(document.createElement(\"hr\"));\n    nestedMenu.appendChild(lightingDiv);\n    const atmosphereDiv = document.createElement(\"div\");\n    const atmosphereEditor = new AtmosphereEditor(vp, atmosphereDiv);\n    this._updates.push((view) => {\n      atmosphereEditor.update(view);\n    });\n    nestedMenu.appendChild(atmosphereDiv);\n    this._eeBackgroundColor = createColorInput({\n      parent: nestedMenu,\n      value: this._vp.view.backgroundColor.toHexString(),\n      handler: (value) => {\n        this._vp.view.displayStyle.backgroundColor = ColorDef.create(value);\n        this.sync();\n      },\n      id: \"ee_bgColor\",\n      label: \"Background Color\",\n      display: is3d ? \"none\" : \"block\"\n    });\n    this._eeBackgroundColor.div.style.textAlign = \"right\";\n    this.listen();\n    const curEnv = this._vp.view.is3d() ? this._vp.view.getDisplayStyle3d().environment : void 0;\n    const curGrad = curEnv?.sky.gradient;\n    const eeDiv = document.createElement(\"div\");\n    eeDiv.hidden = void 0 !== curEnv && !curEnv.displaySky;\n    const showSkyboxControls = (enabled) => {\n      eeDiv.hidden = !enabled;\n      this._eeBackgroundColor.div.style.display = enabled ? \"none\" : \"block\";\n    };\n    this.addEnvAttribute(nestedMenu, \"Sky Box\", \"sky\", showSkyboxControls);\n    nestedMenu.appendChild(this._eeBackgroundColor.div);\n    this._eeSkyboxType = createRadioBox({\n      id: \"ee_skyboxType\",\n      entries: [\n        { value: \"2colors\", label: \"2 Colors\" },\n        { value: \"4colors\", label: \"4 Colors\" }\n      ],\n      handler: (value) => {\n        this.updateEnvironment({ twoColor: value === \"2colors\" });\n        const twoColors = value !== \"4colors\";\n        this._eeSkyColor.div.hidden = twoColors;\n        this._eeGroundColor.div.hidden = twoColors;\n        this._eeSkyExponent.div.style.display = twoColors ? \"none\" : \"block\";\n        this._eeGroundExponent.div.style.display = twoColors ? \"none\" : \"block\";\n      },\n      parent: eeDiv,\n      defaultValue: curGrad && curGrad.twoColor ? \"2colors\" : \"4colors\"\n    });\n    const row1 = document.createElement(\"div\");\n    eeDiv.appendChild(row1);\n    row1.style.display = \"flex\";\n    row1.style.justifyContent = \"flex-end\";\n    this._eeSkyColor = createColorInput({\n      handler: (value) => this.updateEnvironment({ skyColor: ColorDef.create(value).toJSON() }),\n      value: !curGrad ? \"#FFFFFF\" : curGrad.skyColor.toHexString(),\n      label: \"Sky Color\",\n      parent: row1\n    });\n    this._eeSkyColor.div.style.marginRight = \"10px\";\n    this._eeZenithColor = createColorInput({\n      handler: (value) => this.updateEnvironment({ zenithColor: ColorDef.create(value).toJSON() }),\n      value: !curGrad ? \"#FFFFFF\" : curGrad.zenithColor.toHexString(),\n      label: \"Zenith Color\",\n      parent: row1\n    });\n    const row2 = document.createElement(\"div\");\n    eeDiv.appendChild(row2);\n    row2.style.display = \"flex\";\n    row2.style.justifyContent = \"flex-end\";\n    this._eeGroundColor = createColorInput({\n      handler: (value) => this.updateEnvironment({ groundColor: ColorDef.create(value).toJSON() }),\n      value: !curGrad ? \"#FFFFFF\" : curGrad.groundColor.toHexString(),\n      label: \"Ground Color\",\n      parent: row2\n    });\n    this._eeGroundColor.div.style.marginRight = \"16px\";\n    this._eeNadirColor = createColorInput({\n      handler: (value) => this.updateEnvironment({ nadirColor: ColorDef.create(value).toJSON() }),\n      value: !curGrad ? \"#FFFFFF\" : curGrad.nadirColor.toHexString(),\n      label: \"Nadir Color\",\n      parent: row2\n    });\n    this._eeSkyExponent = createSlider({\n      parent: eeDiv,\n      name: \"Sky Exponent\",\n      id: \"ee_skyExponent\",\n      min: \"0.0\",\n      step: \"0.25\",\n      max: \"20.0\",\n      readout: \"right\",\n      value: !curGrad ? \"#FFFFFF\" : curGrad.skyExponent.toString(),\n      handler: (slider) => this.updateEnvironment({ skyExponent: parseFloat(slider.value) })\n    });\n    this._eeGroundExponent = createSlider({\n      parent: eeDiv,\n      name: \"Ground Exponent\",\n      id: \"ee_groundExponent\",\n      min: \"0.0\",\n      step: \"0.25\",\n      max: \"20.0\",\n      readout: \"right\",\n      value: !curGrad ? \"#FFFFFF\" : curGrad.groundExponent.toString(),\n      handler: (slider) => this.updateEnvironment({ groundExponent: parseFloat(slider.value) })\n    });\n    const buttonDiv = document.createElement(\"div\");\n    createButton({\n      parent: buttonDiv,\n      id: \"viewAttr_EEReset\",\n      value: \"Reset\",\n      inline: true,\n      handler: () => this.resetEnvironmentEditor()\n    });\n    createButton({\n      parent: buttonDiv,\n      id: \"viewAttr_eeExport\",\n      value: \"Export\",\n      inline: true,\n      handler: () => {\n        const env = this._vp.view.getDisplayStyle3d().environment.sky.gradient;\n        let msg = `Zenith Color: ${env.zenithColor.toRgbString()}\nNadir Color: ${env.nadirColor.toRgbString()}`;\n        if (!env.twoColor)\n          msg = msg.concat(`\nSky Color: ${env.skyColor.toRgbString()}\nGround Color: ${env.groundColor.toRgbString()}\nSky Exponent: ${env.skyExponent}\nGround Exponent: ${env.groundExponent}`);\n        alert(msg);\n      }\n    });\n    buttonDiv.style.textAlign = \"center\";\n    eeDiv.appendChild(buttonDiv);\n    showSkyboxControls(void 0 !== curEnv && curEnv.displaySky);\n    nestedMenu.appendChild(eeDiv);\n    this._updates.push((view) => {\n      let skyboxEnabled = false;\n      if (view.is3d()) {\n        skyboxEnabled = view.getDisplayStyle3d().environment.displaySky;\n      }\n      showSkyboxControls(skyboxEnabled);\n      envMenu.label.style.fontWeight = expandEnvironmentEditor ? \"bold\" : \"500\";\n    });\n    this.addEnvAttribute(nestedMenu, \"Ground Plane\", \"ground\");\n    const hr = document.createElement(\"hr\");\n    hr.style.borderColor = \"grey\";\n    nestedMenu.appendChild(hr);\n  }\n  update(view) {\n    for (const update of this._updates)\n      update(view);\n  }\n  listen() {\n    this.listenForEnvironment();\n    if (this._removeDisplayStyleListener) {\n      this._removeDisplayStyleListener();\n      this._removeDisplayStyleListener = void 0;\n    }\n    if (this._vp.view.is3d())\n      this._removeDisplayStyleListener = this._vp.view.onDisplayStyleChanged.addListener(() => this.listen());\n  }\n  listenForEnvironment() {\n    if (this._removeEnvironmentListener) {\n      this._removeEnvironmentListener();\n      this._removeEnvironmentListener = void 0;\n    }\n    if (this._vp.view.is3d()) {\n      this._removeEnvironmentListener = this._vp.view.displayStyle.settings.onEnvironmentChanged.addListener((env) => {\n        this.updateEnvironmentEditorUI(env);\n      });\n    }\n  }\n  updateEnvironment(newEnv) {\n    if (this._updatingEnvironment || !this._vp.view.is3d())\n      return;\n    this._updatingEnvironment = true;\n    const style = this._vp.view.displayStyle;\n    const gradient = SkyGradient.fromJSON({ ...style.environment.sky.toJSON(), ...newEnv });\n    style.environment = style.environment.clone({ sky: SkyBox.createGradient(gradient) });\n    this.sync();\n    this._updatingEnvironment = false;\n  }\n  updateEnvironmentEditorUI(env) {\n    if (this._updatingEnvironment)\n      return;\n    this._updatingEnvironment = true;\n    this._eeBackgroundColor.input.value = this._vp.view.backgroundColor.toHexString();\n    const gradient = env.sky.gradient;\n    this._eeSkyboxType.setValue(gradient.twoColor ? \"2colors\" : \"4colors\");\n    this._eeZenithColor.input.value = gradient.zenithColor.toHexString();\n    this._eeSkyColor.input.value = gradient.skyColor.toHexString();\n    this._eeGroundColor.input.value = gradient.groundColor.toHexString();\n    this._eeNadirColor.input.value = gradient.nadirColor.toHexString();\n    this._eeSkyExponent.slider.value = this._eeSkyExponent.readout.innerText = gradient.skyExponent.toString();\n    this._eeGroundExponent.slider.value = this._eeGroundExponent.readout.innerText = gradient.groundExponent.toString();\n    this._updatingEnvironment = false;\n  }\n  resetEnvironmentEditor() {\n    const view = this._vp.view;\n    if (!view.is3d())\n      return;\n    view.displayStyle.environment = Environment.defaults.withDisplay({ sky: true });\n    this.sync();\n    this.updateEnvironmentEditorUI(view.displayStyle.environment);\n  }\n  addEnvAttribute(parent, label, which, updateHandler) {\n    const elems = this.addCheckbox(label, (enabled) => {\n      const view3d = this._vp.view;\n      const style = view3d.getDisplayStyle3d();\n      style.environment = style.environment.withDisplay(\"sky\" === which ? { sky: enabled } : { ground: enabled });\n      if (void 0 !== updateHandler)\n        updateHandler(enabled);\n      this.sync();\n    }, parent, this._nextId);\n    const update = (view) => {\n      const visible = view.is3d();\n      elems.div.style.display = visible ? \"block\" : \"none\";\n      if (visible) {\n        const view3d = view;\n        const style = view3d.getDisplayStyle3d();\n        elems.checkbox.checked = style.environment[which === \"sky\" ? \"displaySky\" : \"displayGround\"];\n      }\n    };\n    this._updates.push(update);\n  }\n  sync() {\n    this._vp.synchWithView();\n  }\n  addCheckbox(cbLabel, handler, parent, id) {\n    return createCheckBox({\n      parent,\n      name: cbLabel,\n      id,\n      handler: (cb) => handler(cb.checked)\n    });\n  }\n  get _nextId() {\n    return `ee_checkbox_${++this._id}`;\n  }\n}\n",
      "start": 1693508126251,
      "end": 1693508126316,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/EnvironmentEditor.ts"
        ],
        "sourcesContent": [
          "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport {\r\n  CheckBox, ColorInput, createButton, createCheckBox, createColorInput, createNestedMenu, createRadioBox, createSlider, RadioBox, Slider,\r\n} from \"@itwin/frontend-devtools\";\r\nimport { ColorDef, Environment, RenderMode, SkyBox, SkyBoxProps, SkyGradient } from \"@itwin/core-common\";\r\nimport { Viewport, ViewState, ViewState3d } from \"@itwin/core-frontend\";\r\nimport { LightingEditor } from \"./LightingEditor\";\r\nimport { AtmosphereEditor } from \"./Atmosphere\";\r\n\r\ntype UpdateAttribute = (view: ViewState) => void;\r\n\r\nlet expandEnvironmentEditor = false;\r\n\r\nexport class EnvironmentEditor {\r\n  private readonly _vp: Viewport;\r\n  private readonly _updates: UpdateAttribute[] = [];\r\n  private readonly _eeSkyboxType: RadioBox;\r\n  private readonly _eeZenithColor: ColorInput;\r\n  private readonly _eeSkyColor: ColorInput;\r\n  private readonly _eeGroundColor: ColorInput;\r\n  private readonly _eeNadirColor: ColorInput;\r\n  private readonly _eeSkyExponent: Slider;\r\n  private readonly _eeGroundExponent: Slider;\r\n  private readonly _eeBackgroundColor: ColorInput;\r\n  private _id = 0;\r\n  private _removeEnvironmentListener?: VoidFunction;\r\n  private _removeDisplayStyleListener?: VoidFunction;\r\n  private _updatingEnvironment = false;\r\n\r\n  public constructor(vp: Viewport, parent: HTMLElement) {\r\n    this._vp = vp;\r\n\r\n    const envMenu = createNestedMenu({\r\n      id: \"ee_menu\",\r\n      label: \"Environment\",\r\n      parent,\r\n      // We use a static so the expand/collapse state persists after closing and reopening the drop-down.\r\n      expand: expandEnvironmentEditor,\r\n      handler: (expanded) => {\r\n        expandEnvironmentEditor = expanded;\r\n        envMenu.label.style.fontWeight = expanded ? \"bold\" : \"500\";\r\n      },\r\n    });\r\n    (envMenu.div.firstElementChild!.lastElementChild! as HTMLElement).style.borderColor = \"grey\";\r\n    const nestedMenu = envMenu.body;\r\n    const is3d = this._vp.view.is3d();\r\n\r\n    const lightingDiv = document.createElement(\"div\");\r\n    const lightingEditor = new LightingEditor(vp, lightingDiv);\r\n    this._updates.push((view: ViewState) => {\r\n      lightingEditor.update(view);\r\n      lightingDiv.style.display = view.is3d() && RenderMode.SmoothShade === view.viewFlags.renderMode ? \"\" : \"none\";\r\n    });\r\n\r\n    lightingDiv.appendChild(document.createElement(\"hr\"));\r\n    nestedMenu.appendChild(lightingDiv);\r\n\r\n    const atmosphereDiv = document.createElement(\"div\");\r\n    const atmosphereEditor = new AtmosphereEditor(vp, atmosphereDiv);\r\n    this._updates.push((view: ViewState) => {\r\n      atmosphereEditor.update(view);\r\n    });\r\n    nestedMenu.appendChild(atmosphereDiv);\r\n\r\n    this._eeBackgroundColor = createColorInput({\r\n      parent: nestedMenu,\r\n      value: this._vp.view.backgroundColor.toHexString(),\r\n      handler: (value) => {\r\n        this._vp.view.displayStyle.backgroundColor = ColorDef.create(value);\r\n        this.sync();\r\n      },\r\n      id: \"ee_bgColor\",\r\n      label: \"Background Color\",\r\n      display: is3d ? \"none\" : \"block\",\r\n    });\r\n    this._eeBackgroundColor.div.style.textAlign = \"right\";\r\n\r\n    this.listen();\r\n\r\n    const curEnv = this._vp.view.is3d() ? this._vp.view.getDisplayStyle3d().environment : undefined;\r\n    const curGrad = curEnv?.sky.gradient;\r\n\r\n    const eeDiv = document.createElement(\"div\");\r\n    eeDiv.hidden = undefined !== curEnv && !curEnv.displaySky;\r\n\r\n    const showSkyboxControls = (enabled: boolean) => {\r\n      eeDiv.hidden = !enabled;\r\n      this._eeBackgroundColor.div.style.display = enabled ? \"none\" : \"block\";\r\n    };\r\n\r\n    this.addEnvAttribute(nestedMenu, \"Sky Box\", \"sky\", showSkyboxControls);\r\n\r\n    nestedMenu.appendChild(this._eeBackgroundColor.div);\r\n\r\n    this._eeSkyboxType = createRadioBox({\r\n      id: \"ee_skyboxType\",\r\n      entries: [\r\n        { value: \"2colors\", label: \"2 Colors\" },\r\n        { value: \"4colors\", label: \"4 Colors\" },\r\n      ],\r\n      handler: (value) => {\r\n        this.updateEnvironment({ twoColor: value === \"2colors\" });\r\n\r\n        // Hide elements not relevant to 2 colors\r\n        const twoColors = value !== \"4colors\";\r\n        this._eeSkyColor.div.hidden = twoColors;\r\n        this._eeGroundColor.div.hidden = twoColors;\r\n        this._eeSkyExponent.div.style.display = twoColors ? \"none\" : \"block\";\r\n        this._eeGroundExponent.div.style.display = twoColors ? \"none\" : \"block\";\r\n      },\r\n      parent: eeDiv,\r\n      defaultValue: curGrad && curGrad.twoColor ? \"2colors\" : \"4colors\",\r\n    });\r\n\r\n    const row1 = document.createElement(\"div\");\r\n    eeDiv.appendChild(row1);\r\n    row1.style.display = \"flex\";\r\n    row1.style.justifyContent = \"flex-end\";\r\n\r\n    this._eeSkyColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ skyColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.skyColor.toHexString(),\r\n      label: \"Sky Color\",\r\n      parent: row1,\r\n    });\r\n    this._eeSkyColor.div.style.marginRight = \"10px\";\r\n\r\n    this._eeZenithColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ zenithColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.zenithColor.toHexString(),\r\n      label: \"Zenith Color\",\r\n      parent: row1,\r\n    });\r\n\r\n    const row2 = document.createElement(\"div\");\r\n    eeDiv.appendChild(row2);\r\n    row2.style.display = \"flex\";\r\n    row2.style.justifyContent = \"flex-end\";\r\n\r\n    this._eeGroundColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ groundColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.groundColor.toHexString(),\r\n      label: \"Ground Color\",\r\n      parent: row2,\r\n    });\r\n    this._eeGroundColor.div.style.marginRight = \"16px\";\r\n\r\n    this._eeNadirColor = createColorInput({\r\n      handler: (value: string) => this.updateEnvironment({ nadirColor: ColorDef.create(value).toJSON() }),\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.nadirColor.toHexString(),\r\n      label: \"Nadir Color\",\r\n      parent: row2,\r\n    });\r\n\r\n    this._eeSkyExponent = createSlider({\r\n      parent: eeDiv,\r\n      name: \"Sky Exponent\",\r\n      id: \"ee_skyExponent\",\r\n      min: \"0.0\",\r\n      step: \"0.25\",\r\n      max: \"20.0\",\r\n      readout: \"right\",\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.skyExponent.toString(),\r\n      handler: (slider) => this.updateEnvironment({ skyExponent: parseFloat(slider.value) }),\r\n    });\r\n\r\n    this._eeGroundExponent = createSlider({\r\n      parent: eeDiv,\r\n      name: \"Ground Exponent\",\r\n      id: \"ee_groundExponent\",\r\n      min: \"0.0\",\r\n      step: \"0.25\",\r\n      max: \"20.0\",\r\n      readout: \"right\",\r\n      value: !curGrad ? \"#FFFFFF\" : curGrad.groundExponent.toString(),\r\n      handler: (slider) => this.updateEnvironment({ groundExponent: parseFloat(slider.value) }),\r\n    });\r\n\r\n    const buttonDiv = document.createElement(\"div\");\r\n\r\n    createButton({\r\n      parent: buttonDiv,\r\n      id: \"viewAttr_EEReset\",\r\n      value: \"Reset\",\r\n      inline: true,\r\n      handler: () => this.resetEnvironmentEditor(),\r\n    });\r\n\r\n    createButton({\r\n      parent: buttonDiv,\r\n      id: \"viewAttr_eeExport\",\r\n      value: \"Export\",\r\n      inline: true,\r\n      handler: () => {\r\n        const env = (this._vp.view as ViewState3d).getDisplayStyle3d().environment.sky.gradient;\r\n        let msg = `Zenith Color: ${env.zenithColor.toRgbString()}\\nNadir Color: ${env.nadirColor.toRgbString()}`;\r\n        if (!env.twoColor)\r\n          msg = msg.concat(`\\nSky Color: ${env.skyColor.toRgbString()}\\nGround Color: ${env.groundColor.toRgbString()}\\nSky Exponent: ${env.skyExponent}\\nGround Exponent: ${env.groundExponent}`);\r\n        alert(msg);\r\n      },\r\n    });\r\n    buttonDiv.style.textAlign = \"center\";\r\n    eeDiv.appendChild(buttonDiv);\r\n\r\n    showSkyboxControls(undefined !== curEnv && curEnv.displaySky);\r\n    nestedMenu.appendChild(eeDiv);\r\n\r\n    this._updates.push((view) => {\r\n      let skyboxEnabled = false;\r\n      if (view.is3d()) {\r\n        skyboxEnabled = view.getDisplayStyle3d().environment.displaySky;\r\n      }\r\n\r\n      showSkyboxControls(skyboxEnabled);\r\n      envMenu.label.style.fontWeight = expandEnvironmentEditor ? \"bold\" : \"500\";\r\n    });\r\n\r\n    this.addEnvAttribute(nestedMenu, \"Ground Plane\", \"ground\");\r\n\r\n    const hr = document.createElement(\"hr\");\r\n    hr.style.borderColor = \"grey\";\r\n    nestedMenu.appendChild(hr);\r\n  }\r\n\r\n  public update(view: ViewState): void {\r\n    for (const update of this._updates)\r\n      update(view);\r\n  }\r\n\r\n  private listen(): void {\r\n    this.listenForEnvironment();\r\n    if (this._removeDisplayStyleListener) {\r\n      this._removeDisplayStyleListener();\r\n      this._removeDisplayStyleListener = undefined;\r\n    }\r\n\r\n    if (this._vp.view.is3d())\r\n      this._removeDisplayStyleListener = this._vp.view.onDisplayStyleChanged.addListener(() => this.listen());\r\n  }\r\n\r\n  private listenForEnvironment(): void {\r\n    if (this._removeEnvironmentListener) {\r\n      this._removeEnvironmentListener();\r\n      this._removeEnvironmentListener = undefined;\r\n    }\r\n\r\n    if (this._vp.view.is3d()) {\r\n      this._removeEnvironmentListener = this._vp.view.displayStyle.settings.onEnvironmentChanged.addListener((env) => {\r\n        this.updateEnvironmentEditorUI(env);\r\n      });\r\n    }\r\n  }\r\n\r\n  private updateEnvironment(newEnv: SkyBoxProps): void {\r\n    if (this._updatingEnvironment || !this._vp.view.is3d())\r\n      return;\r\n\r\n    // We don't want our event listeners to respond to events we ourselves produced.\r\n    this._updatingEnvironment = true;\r\n\r\n    const style = this._vp.view.displayStyle;\r\n    const gradient = SkyGradient.fromJSON({ ...style.environment.sky.toJSON(), ...newEnv });\r\n    style.environment = style.environment.clone({ sky: SkyBox.createGradient(gradient) });\r\n\r\n    this.sync();\r\n    this._updatingEnvironment = false;\r\n  }\r\n\r\n  private updateEnvironmentEditorUI(env: Environment): void {\r\n    if (this._updatingEnvironment)\r\n      return;\r\n\r\n    // Setting the values of UI controls below will trigger callbacks that call updateEnvironment().\r\n    // We don't want to do that when we're modifying the controls ourselves.\r\n    this._updatingEnvironment = true;\r\n\r\n    this._eeBackgroundColor.input.value = this._vp.view.backgroundColor.toHexString();\r\n\r\n    const gradient = env.sky.gradient;\r\n\r\n    this._eeSkyboxType.setValue(gradient.twoColor ? \"2colors\" : \"4colors\");\r\n    this._eeZenithColor.input.value = gradient.zenithColor.toHexString();\r\n    this._eeSkyColor.input.value = gradient.skyColor.toHexString();\r\n    this._eeGroundColor.input.value = gradient.groundColor.toHexString();\r\n    this._eeNadirColor.input.value = gradient.nadirColor.toHexString();\r\n    this._eeSkyExponent.slider.value = this._eeSkyExponent.readout.innerText = gradient.skyExponent.toString();\r\n    this._eeGroundExponent.slider.value = this._eeGroundExponent.readout.innerText = gradient.groundExponent.toString();\r\n\r\n    this._updatingEnvironment = false;\r\n  }\r\n\r\n  private resetEnvironmentEditor(): void {\r\n    const view = this._vp.view;\r\n    if (!view.is3d())\r\n      return;\r\n\r\n    view.displayStyle.environment = Environment.defaults.withDisplay({ sky: true });\r\n    this.sync();\r\n    this.updateEnvironmentEditorUI(view.displayStyle.environment);\r\n  }\r\n\r\n  private addEnvAttribute(parent: HTMLElement, label: string, which: \"sky\" | \"ground\", updateHandler?: (enabled: boolean) => void): void {\r\n    const elems = this.addCheckbox(label, (enabled: boolean) => {\r\n      const view3d = this._vp.view as ViewState3d;\r\n      const style = view3d.getDisplayStyle3d();\r\n      style.environment = style.environment.withDisplay(\"sky\" === which ? { sky: enabled } : { ground: enabled });\r\n\r\n      if (undefined !== updateHandler)\r\n        updateHandler(enabled);\r\n\r\n      this.sync();\r\n    }, parent, this._nextId);\r\n\r\n    const update = (view: ViewState) => {\r\n      const visible = view.is3d();\r\n      elems.div.style.display = visible ? \"block\" : \"none\";\r\n      if (visible) {\r\n        const view3d = view;\r\n        const style = view3d.getDisplayStyle3d();\r\n        elems.checkbox.checked = style.environment[which === \"sky\" ? \"displaySky\" : \"displayGround\"];\r\n      }\r\n    };\r\n\r\n    this._updates.push(update);\r\n  }\r\n\r\n  private sync(): void {\r\n    this._vp.synchWithView();\r\n  }\r\n\r\n  private addCheckbox(cbLabel: string, handler: (enabled: boolean) => void, parent: HTMLElement, id: string): CheckBox {\r\n    return createCheckBox({\r\n      parent,\r\n      name: cbLabel,\r\n      id,\r\n      handler: (cb) => handler(cb.checked),\r\n    });\r\n  }\r\n\r\n  private get _nextId(): string {\r\n    return `ee_checkbox_${++this._id}`;\r\n  }\r\n}\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    }
  ]
}
