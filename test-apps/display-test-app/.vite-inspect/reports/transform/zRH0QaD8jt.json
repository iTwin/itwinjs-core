{
  "resolvedId": "D:/hub2023A/itwinjs-core/extensions/map-layers-formats/lib/esm/ArcGisFeature/esriPBuffer.gen.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n/* eslint-disable */\n/**\n * Generated by the protoc-gen-ts.  DO NOT EDIT!\n * compiler version: 3.21.2\n * source: https://github.com/Esri/arcgis-pbf/blob/main/proto/FeatureCollection/FeatureCollection.proto\n * git: https://github.com/thesayyn/protoc-gen-ts */\nimport * as pb_1 from \"google-protobuf\";\n/** @internal */\nexport var esriPBuffer;\n(function (esriPBuffer) {\n    var _FeatureCollectionPBuffer_one_of_decls;\n    class FeatureCollectionPBuffer extends pb_1.Message {\n        constructor(data) {\n            super();\n            _FeatureCollectionPBuffer_one_of_decls.set(this, []);\n            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _FeatureCollectionPBuffer_one_of_decls, \"f\"));\n            if (!Array.isArray(data) && typeof data == \"object\") {\n                if (\"version\" in data && data.version != undefined) {\n                    this.version = data.version;\n                }\n                if (\"queryResult\" in data && data.queryResult != undefined) {\n                    this.queryResult = data.queryResult;\n                }\n            }\n        }\n        get version() {\n            return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n        }\n        set version(value) {\n            pb_1.Message.setField(this, 1, value);\n        }\n        get queryResult() {\n            return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.QueryResult, 2);\n        }\n        set queryResult(value) {\n            pb_1.Message.setWrapperField(this, 2, value);\n        }\n        get has_queryResult() {\n            return pb_1.Message.getField(this, 2) != null;\n        }\n        static fromObject(data) {\n            const message = new FeatureCollectionPBuffer({});\n            if (data.version != null) {\n                message.version = data.version;\n            }\n            if (data.queryResult != null) {\n                message.queryResult = FeatureCollectionPBuffer.QueryResult.fromObject(data.queryResult);\n            }\n            return message;\n        }\n        toObject() {\n            const data = {};\n            if (this.version != null) {\n                data.version = this.version;\n            }\n            if (this.queryResult != null) {\n                data.queryResult = this.queryResult.toObject();\n            }\n            return data;\n        }\n        serialize(w) {\n            const writer = w || new pb_1.BinaryWriter();\n            if (this.version.length)\n                writer.writeString(1, this.version);\n            if (this.has_queryResult)\n                writer.writeMessage(2, this.queryResult, () => this.queryResult.serialize(writer));\n            if (!w)\n                return writer.getResultBuffer();\n        }\n        static deserialize(bytes) {\n            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FeatureCollectionPBuffer();\n            while (reader.nextField()) {\n                if (reader.isEndGroup())\n                    break;\n                switch (reader.getFieldNumber()) {\n                    case 1:\n                        message.version = reader.readString();\n                        break;\n                    case 2:\n                        reader.readMessage(message.queryResult, () => message.queryResult = FeatureCollectionPBuffer.QueryResult.deserialize(reader));\n                        break;\n                    default: reader.skipField();\n                }\n            }\n            return message;\n        }\n        serializeBinary() {\n            return this.serialize();\n        }\n        static deserializeBinary(bytes) {\n            return FeatureCollectionPBuffer.deserialize(bytes);\n        }\n    }\n    _FeatureCollectionPBuffer_one_of_decls = new WeakMap();\n    esriPBuffer.FeatureCollectionPBuffer = FeatureCollectionPBuffer;\n    (function (FeatureCollectionPBuffer) {\n        var _SpatialReference_one_of_decls, _Field_one_of_decls, _Value_one_of_decls, _Geometry_one_of_decls, _esriShapeBuffer_one_of_decls, _Feature_one_of_decls, _UniqueIdField_one_of_decls, _GeometryProperties_one_of_decls, _ServerGens_one_of_decls, _Scale_one_of_decls, _Translate_one_of_decls, _Transform_one_of_decls, _FeatureResult_one_of_decls, _CountResult_one_of_decls, _ObjectIdsResult_one_of_decls, _QueryResult_one_of_decls;\n        let GeometryType;\n        (function (GeometryType) {\n            GeometryType[GeometryType[\"esriGeometryTypePoint\"] = 0] = \"esriGeometryTypePoint\";\n            GeometryType[GeometryType[\"esriGeometryTypeMultipoint\"] = 1] = \"esriGeometryTypeMultipoint\";\n            GeometryType[GeometryType[\"esriGeometryTypePolyline\"] = 2] = \"esriGeometryTypePolyline\";\n            GeometryType[GeometryType[\"esriGeometryTypePolygon\"] = 3] = \"esriGeometryTypePolygon\";\n            GeometryType[GeometryType[\"esriGeometryTypeMultipatch\"] = 4] = \"esriGeometryTypeMultipatch\";\n            GeometryType[GeometryType[\"esriGeometryTypeNone\"] = 127] = \"esriGeometryTypeNone\";\n        })(GeometryType = FeatureCollectionPBuffer.GeometryType || (FeatureCollectionPBuffer.GeometryType = {}));\n        let FieldType;\n        (function (FieldType) {\n            FieldType[FieldType[\"esriFieldTypeSmallInteger\"] = 0] = \"esriFieldTypeSmallInteger\";\n            FieldType[FieldType[\"esriFieldTypeInteger\"] = 1] = \"esriFieldTypeInteger\";\n            FieldType[FieldType[\"esriFieldTypeSingle\"] = 2] = \"esriFieldTypeSingle\";\n            FieldType[FieldType[\"esriFieldTypeDouble\"] = 3] = \"esriFieldTypeDouble\";\n            FieldType[FieldType[\"esriFieldTypeString\"] = 4] = \"esriFieldTypeString\";\n            FieldType[FieldType[\"esriFieldTypeDate\"] = 5] = \"esriFieldTypeDate\";\n            FieldType[FieldType[\"esriFieldTypeOID\"] = 6] = \"esriFieldTypeOID\";\n            FieldType[FieldType[\"esriFieldTypeGeometry\"] = 7] = \"esriFieldTypeGeometry\";\n            FieldType[FieldType[\"esriFieldTypeBlob\"] = 8] = \"esriFieldTypeBlob\";\n            FieldType[FieldType[\"esriFieldTypeRaster\"] = 9] = \"esriFieldTypeRaster\";\n            FieldType[FieldType[\"esriFieldTypeGUID\"] = 10] = \"esriFieldTypeGUID\";\n            FieldType[FieldType[\"esriFieldTypeGlobalID\"] = 11] = \"esriFieldTypeGlobalID\";\n            FieldType[FieldType[\"esriFieldTypeXML\"] = 12] = \"esriFieldTypeXML\";\n        })(FieldType = FeatureCollectionPBuffer.FieldType || (FeatureCollectionPBuffer.FieldType = {}));\n        let SQLType;\n        (function (SQLType) {\n            SQLType[SQLType[\"sqlTypeBigInt\"] = 0] = \"sqlTypeBigInt\";\n            SQLType[SQLType[\"sqlTypeBinary\"] = 1] = \"sqlTypeBinary\";\n            SQLType[SQLType[\"sqlTypeBit\"] = 2] = \"sqlTypeBit\";\n            SQLType[SQLType[\"sqlTypeChar\"] = 3] = \"sqlTypeChar\";\n            SQLType[SQLType[\"sqlTypeDate\"] = 4] = \"sqlTypeDate\";\n            SQLType[SQLType[\"sqlTypeDecimal\"] = 5] = \"sqlTypeDecimal\";\n            SQLType[SQLType[\"sqlTypeDouble\"] = 6] = \"sqlTypeDouble\";\n            SQLType[SQLType[\"sqlTypeFloat\"] = 7] = \"sqlTypeFloat\";\n            SQLType[SQLType[\"sqlTypeGeometry\"] = 8] = \"sqlTypeGeometry\";\n            SQLType[SQLType[\"sqlTypeGUID\"] = 9] = \"sqlTypeGUID\";\n            SQLType[SQLType[\"sqlTypeInteger\"] = 10] = \"sqlTypeInteger\";\n            SQLType[SQLType[\"sqlTypeLongNVarchar\"] = 11] = \"sqlTypeLongNVarchar\";\n            SQLType[SQLType[\"sqlTypeLongVarbinary\"] = 12] = \"sqlTypeLongVarbinary\";\n            SQLType[SQLType[\"sqlTypeLongVarchar\"] = 13] = \"sqlTypeLongVarchar\";\n            SQLType[SQLType[\"sqlTypeNChar\"] = 14] = \"sqlTypeNChar\";\n            SQLType[SQLType[\"sqlTypeNVarchar\"] = 15] = \"sqlTypeNVarchar\";\n            SQLType[SQLType[\"sqlTypeOther\"] = 16] = \"sqlTypeOther\";\n            SQLType[SQLType[\"sqlTypeReal\"] = 17] = \"sqlTypeReal\";\n            SQLType[SQLType[\"sqlTypeSmallInt\"] = 18] = \"sqlTypeSmallInt\";\n            SQLType[SQLType[\"sqlTypeSqlXml\"] = 19] = \"sqlTypeSqlXml\";\n            SQLType[SQLType[\"sqlTypeTime\"] = 20] = \"sqlTypeTime\";\n            SQLType[SQLType[\"sqlTypeTimestamp\"] = 21] = \"sqlTypeTimestamp\";\n            SQLType[SQLType[\"sqlTypeTimestamp2\"] = 22] = \"sqlTypeTimestamp2\";\n            SQLType[SQLType[\"sqlTypeTinyInt\"] = 23] = \"sqlTypeTinyInt\";\n            SQLType[SQLType[\"sqlTypeVarbinary\"] = 24] = \"sqlTypeVarbinary\";\n            SQLType[SQLType[\"sqlTypeVarchar\"] = 25] = \"sqlTypeVarchar\";\n        })(SQLType = FeatureCollectionPBuffer.SQLType || (FeatureCollectionPBuffer.SQLType = {}));\n        let QuantizeOriginPostion;\n        (function (QuantizeOriginPostion) {\n            QuantizeOriginPostion[QuantizeOriginPostion[\"upperLeft\"] = 0] = \"upperLeft\";\n            QuantizeOriginPostion[QuantizeOriginPostion[\"lowerLeft\"] = 1] = \"lowerLeft\";\n        })(QuantizeOriginPostion = FeatureCollectionPBuffer.QuantizeOriginPostion || (FeatureCollectionPBuffer.QuantizeOriginPostion = {}));\n        class SpatialReference extends pb_1.Message {\n            constructor(data) {\n                super();\n                _SpatialReference_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _SpatialReference_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"wkid\" in data && data.wkid != undefined) {\n                        this.wkid = data.wkid;\n                    }\n                    if (\"lastestWkid\" in data && data.lastestWkid != undefined) {\n                        this.lastestWkid = data.lastestWkid;\n                    }\n                    if (\"vcsWkid\" in data && data.vcsWkid != undefined) {\n                        this.vcsWkid = data.vcsWkid;\n                    }\n                    if (\"latestVcsWkid\" in data && data.latestVcsWkid != undefined) {\n                        this.latestVcsWkid = data.latestVcsWkid;\n                    }\n                    if (\"wkt\" in data && data.wkt != undefined) {\n                        this.wkt = data.wkt;\n                    }\n                }\n            }\n            get wkid() {\n                return pb_1.Message.getFieldWithDefault(this, 1, 0);\n            }\n            set wkid(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get lastestWkid() {\n                return pb_1.Message.getFieldWithDefault(this, 2, 0);\n            }\n            set lastestWkid(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get vcsWkid() {\n                return pb_1.Message.getFieldWithDefault(this, 3, 0);\n            }\n            set vcsWkid(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            get latestVcsWkid() {\n                return pb_1.Message.getFieldWithDefault(this, 4, 0);\n            }\n            set latestVcsWkid(value) {\n                pb_1.Message.setField(this, 4, value);\n            }\n            get wkt() {\n                return pb_1.Message.getFieldWithDefault(this, 5, \"\");\n            }\n            set wkt(value) {\n                pb_1.Message.setField(this, 5, value);\n            }\n            static fromObject(data) {\n                const message = new SpatialReference({});\n                if (data.wkid != null) {\n                    message.wkid = data.wkid;\n                }\n                if (data.lastestWkid != null) {\n                    message.lastestWkid = data.lastestWkid;\n                }\n                if (data.vcsWkid != null) {\n                    message.vcsWkid = data.vcsWkid;\n                }\n                if (data.latestVcsWkid != null) {\n                    message.latestVcsWkid = data.latestVcsWkid;\n                }\n                if (data.wkt != null) {\n                    message.wkt = data.wkt;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.wkid != null) {\n                    data.wkid = this.wkid;\n                }\n                if (this.lastestWkid != null) {\n                    data.lastestWkid = this.lastestWkid;\n                }\n                if (this.vcsWkid != null) {\n                    data.vcsWkid = this.vcsWkid;\n                }\n                if (this.latestVcsWkid != null) {\n                    data.latestVcsWkid = this.latestVcsWkid;\n                }\n                if (this.wkt != null) {\n                    data.wkt = this.wkt;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.wkid != 0)\n                    writer.writeUint32(1, this.wkid);\n                if (this.lastestWkid != 0)\n                    writer.writeUint32(2, this.lastestWkid);\n                if (this.vcsWkid != 0)\n                    writer.writeUint32(3, this.vcsWkid);\n                if (this.latestVcsWkid != 0)\n                    writer.writeUint32(4, this.latestVcsWkid);\n                if (this.wkt.length)\n                    writer.writeString(5, this.wkt);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SpatialReference();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.wkid = reader.readUint32();\n                            break;\n                        case 2:\n                            message.lastestWkid = reader.readUint32();\n                            break;\n                        case 3:\n                            message.vcsWkid = reader.readUint32();\n                            break;\n                        case 4:\n                            message.latestVcsWkid = reader.readUint32();\n                            break;\n                        case 5:\n                            message.wkt = reader.readString();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return SpatialReference.deserialize(bytes);\n            }\n        }\n        _SpatialReference_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.SpatialReference = SpatialReference;\n        class Field extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Field_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Field_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"name\" in data && data.name != undefined) {\n                        this.name = data.name;\n                    }\n                    if (\"fieldType\" in data && data.fieldType != undefined) {\n                        this.fieldType = data.fieldType;\n                    }\n                    if (\"alias\" in data && data.alias != undefined) {\n                        this.alias = data.alias;\n                    }\n                    if (\"sqlType\" in data && data.sqlType != undefined) {\n                        this.sqlType = data.sqlType;\n                    }\n                    if (\"domain\" in data && data.domain != undefined) {\n                        this.domain = data.domain;\n                    }\n                    if (\"defaultValue\" in data && data.defaultValue != undefined) {\n                        this.defaultValue = data.defaultValue;\n                    }\n                }\n            }\n            get name() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n            }\n            set name(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get fieldType() {\n                return pb_1.Message.getFieldWithDefault(this, 2, FeatureCollectionPBuffer.FieldType.esriFieldTypeSmallInteger);\n            }\n            set fieldType(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get alias() {\n                return pb_1.Message.getFieldWithDefault(this, 3, \"\");\n            }\n            set alias(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            get sqlType() {\n                return pb_1.Message.getFieldWithDefault(this, 4, FeatureCollectionPBuffer.SQLType.sqlTypeBigInt);\n            }\n            set sqlType(value) {\n                pb_1.Message.setField(this, 4, value);\n            }\n            get domain() {\n                return pb_1.Message.getFieldWithDefault(this, 5, \"\");\n            }\n            set domain(value) {\n                pb_1.Message.setField(this, 5, value);\n            }\n            get defaultValue() {\n                return pb_1.Message.getFieldWithDefault(this, 6, \"\");\n            }\n            set defaultValue(value) {\n                pb_1.Message.setField(this, 6, value);\n            }\n            static fromObject(data) {\n                const message = new Field({});\n                if (data.name != null) {\n                    message.name = data.name;\n                }\n                if (data.fieldType != null) {\n                    message.fieldType = data.fieldType;\n                }\n                if (data.alias != null) {\n                    message.alias = data.alias;\n                }\n                if (data.sqlType != null) {\n                    message.sqlType = data.sqlType;\n                }\n                if (data.domain != null) {\n                    message.domain = data.domain;\n                }\n                if (data.defaultValue != null) {\n                    message.defaultValue = data.defaultValue;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.name != null) {\n                    data.name = this.name;\n                }\n                if (this.fieldType != null) {\n                    data.fieldType = this.fieldType;\n                }\n                if (this.alias != null) {\n                    data.alias = this.alias;\n                }\n                if (this.sqlType != null) {\n                    data.sqlType = this.sqlType;\n                }\n                if (this.domain != null) {\n                    data.domain = this.domain;\n                }\n                if (this.defaultValue != null) {\n                    data.defaultValue = this.defaultValue;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.name.length)\n                    writer.writeString(1, this.name);\n                if (this.fieldType != FeatureCollectionPBuffer.FieldType.esriFieldTypeSmallInteger)\n                    writer.writeEnum(2, this.fieldType);\n                if (this.alias.length)\n                    writer.writeString(3, this.alias);\n                if (this.sqlType != FeatureCollectionPBuffer.SQLType.sqlTypeBigInt)\n                    writer.writeEnum(4, this.sqlType);\n                if (this.domain.length)\n                    writer.writeString(5, this.domain);\n                if (this.defaultValue.length)\n                    writer.writeString(6, this.defaultValue);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Field();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.name = reader.readString();\n                            break;\n                        case 2:\n                            message.fieldType = reader.readEnum();\n                            break;\n                        case 3:\n                            message.alias = reader.readString();\n                            break;\n                        case 4:\n                            message.sqlType = reader.readEnum();\n                            break;\n                        case 5:\n                            message.domain = reader.readString();\n                            break;\n                        case 6:\n                            message.defaultValue = reader.readString();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Field.deserialize(bytes);\n            }\n        }\n        _Field_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Field = Field;\n        class Value extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Value_one_of_decls.set(this, [[1, 2, 3, 4, 5, 6, 7, 8, 9]]);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Value_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"string_value\" in data && data.string_value != undefined) {\n                        this.string_value = data.string_value;\n                    }\n                    if (\"float_value\" in data && data.float_value != undefined) {\n                        this.float_value = data.float_value;\n                    }\n                    if (\"double_value\" in data && data.double_value != undefined) {\n                        this.double_value = data.double_value;\n                    }\n                    if (\"sint_value\" in data && data.sint_value != undefined) {\n                        this.sint_value = data.sint_value;\n                    }\n                    if (\"uint_value\" in data && data.uint_value != undefined) {\n                        this.uint_value = data.uint_value;\n                    }\n                    if (\"int64_value\" in data && data.int64_value != undefined) {\n                        this.int64_value = data.int64_value;\n                    }\n                    if (\"uint64_value\" in data && data.uint64_value != undefined) {\n                        this.uint64_value = data.uint64_value;\n                    }\n                    if (\"sint64_value\" in data && data.sint64_value != undefined) {\n                        this.sint64_value = data.sint64_value;\n                    }\n                    if (\"bool_value\" in data && data.bool_value != undefined) {\n                        this.bool_value = data.bool_value;\n                    }\n                }\n            }\n            get string_value() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n            }\n            set string_value(value) {\n                pb_1.Message.setOneofField(this, 1, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_string_value() {\n                return pb_1.Message.getField(this, 1) != null;\n            }\n            get float_value() {\n                return pb_1.Message.getFieldWithDefault(this, 2, 0);\n            }\n            set float_value(value) {\n                pb_1.Message.setOneofField(this, 2, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_float_value() {\n                return pb_1.Message.getField(this, 2) != null;\n            }\n            get double_value() {\n                return pb_1.Message.getFieldWithDefault(this, 3, 0);\n            }\n            set double_value(value) {\n                pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_double_value() {\n                return pb_1.Message.getField(this, 3) != null;\n            }\n            get sint_value() {\n                return pb_1.Message.getFieldWithDefault(this, 4, 0);\n            }\n            set sint_value(value) {\n                pb_1.Message.setOneofField(this, 4, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_sint_value() {\n                return pb_1.Message.getField(this, 4) != null;\n            }\n            get uint_value() {\n                return pb_1.Message.getFieldWithDefault(this, 5, 0);\n            }\n            set uint_value(value) {\n                pb_1.Message.setOneofField(this, 5, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_uint_value() {\n                return pb_1.Message.getField(this, 5) != null;\n            }\n            get int64_value() {\n                return pb_1.Message.getFieldWithDefault(this, 6, 0);\n            }\n            set int64_value(value) {\n                pb_1.Message.setOneofField(this, 6, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_int64_value() {\n                return pb_1.Message.getField(this, 6) != null;\n            }\n            get uint64_value() {\n                return pb_1.Message.getFieldWithDefault(this, 7, 0);\n            }\n            set uint64_value(value) {\n                pb_1.Message.setOneofField(this, 7, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_uint64_value() {\n                return pb_1.Message.getField(this, 7) != null;\n            }\n            get sint64_value() {\n                return pb_1.Message.getFieldWithDefault(this, 8, 0);\n            }\n            set sint64_value(value) {\n                pb_1.Message.setOneofField(this, 8, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_sint64_value() {\n                return pb_1.Message.getField(this, 8) != null;\n            }\n            get bool_value() {\n                return pb_1.Message.getFieldWithDefault(this, 9, false);\n            }\n            set bool_value(value) {\n                pb_1.Message.setOneofField(this, 9, __classPrivateFieldGet(this, _Value_one_of_decls, \"f\")[0], value);\n            }\n            get has_bool_value() {\n                return pb_1.Message.getField(this, 9) != null;\n            }\n            get value_type() {\n                const cases = {\n                    0: \"none\",\n                    1: \"string_value\",\n                    2: \"float_value\",\n                    3: \"double_value\",\n                    4: \"sint_value\",\n                    5: \"uint_value\",\n                    6: \"int64_value\",\n                    7: \"uint64_value\",\n                    8: \"sint64_value\",\n                    9: \"bool_value\",\n                };\n                return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3, 4, 5, 6, 7, 8, 9])];\n            }\n            static fromObject(data) {\n                const message = new Value({});\n                if (data.string_value != null) {\n                    message.string_value = data.string_value;\n                }\n                if (data.float_value != null) {\n                    message.float_value = data.float_value;\n                }\n                if (data.double_value != null) {\n                    message.double_value = data.double_value;\n                }\n                if (data.sint_value != null) {\n                    message.sint_value = data.sint_value;\n                }\n                if (data.uint_value != null) {\n                    message.uint_value = data.uint_value;\n                }\n                if (data.int64_value != null) {\n                    message.int64_value = data.int64_value;\n                }\n                if (data.uint64_value != null) {\n                    message.uint64_value = data.uint64_value;\n                }\n                if (data.sint64_value != null) {\n                    message.sint64_value = data.sint64_value;\n                }\n                if (data.bool_value != null) {\n                    message.bool_value = data.bool_value;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.string_value != null) {\n                    data.string_value = this.string_value;\n                }\n                if (this.float_value != null) {\n                    data.float_value = this.float_value;\n                }\n                if (this.double_value != null) {\n                    data.double_value = this.double_value;\n                }\n                if (this.sint_value != null) {\n                    data.sint_value = this.sint_value;\n                }\n                if (this.uint_value != null) {\n                    data.uint_value = this.uint_value;\n                }\n                if (this.int64_value != null) {\n                    data.int64_value = this.int64_value;\n                }\n                if (this.uint64_value != null) {\n                    data.uint64_value = this.uint64_value;\n                }\n                if (this.sint64_value != null) {\n                    data.sint64_value = this.sint64_value;\n                }\n                if (this.bool_value != null) {\n                    data.bool_value = this.bool_value;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.has_string_value)\n                    writer.writeString(1, this.string_value);\n                if (this.has_float_value)\n                    writer.writeFloat(2, this.float_value);\n                if (this.has_double_value)\n                    writer.writeDouble(3, this.double_value);\n                if (this.has_sint_value)\n                    writer.writeSint32(4, this.sint_value);\n                if (this.has_uint_value)\n                    writer.writeUint32(5, this.uint_value);\n                if (this.has_int64_value)\n                    writer.writeInt64(6, this.int64_value);\n                if (this.has_uint64_value)\n                    writer.writeUint64(7, this.uint64_value);\n                if (this.has_sint64_value)\n                    writer.writeSint64(8, this.sint64_value);\n                if (this.has_bool_value)\n                    writer.writeBool(9, this.bool_value);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Value();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.string_value = reader.readString();\n                            break;\n                        case 2:\n                            message.float_value = reader.readFloat();\n                            break;\n                        case 3:\n                            message.double_value = reader.readDouble();\n                            break;\n                        case 4:\n                            message.sint_value = reader.readSint32();\n                            break;\n                        case 5:\n                            message.uint_value = reader.readUint32();\n                            break;\n                        case 6:\n                            message.int64_value = reader.readInt64();\n                            break;\n                        case 7:\n                            message.uint64_value = reader.readUint64();\n                            break;\n                        case 8:\n                            message.sint64_value = reader.readSint64();\n                            break;\n                        case 9:\n                            message.bool_value = reader.readBool();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Value.deserialize(bytes);\n            }\n        }\n        _Value_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Value = Value;\n        class Geometry extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Geometry_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 3], __classPrivateFieldGet(this, _Geometry_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"lengths\" in data && data.lengths != undefined) {\n                        this.lengths = data.lengths;\n                    }\n                    if (\"coords\" in data && data.coords != undefined) {\n                        this.coords = data.coords;\n                    }\n                }\n            }\n            get lengths() {\n                return pb_1.Message.getFieldWithDefault(this, 2, []);\n            }\n            set lengths(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get coords() {\n                return pb_1.Message.getFieldWithDefault(this, 3, []);\n            }\n            set coords(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            static fromObject(data) {\n                const message = new Geometry({});\n                if (data.lengths != null) {\n                    message.lengths = data.lengths;\n                }\n                if (data.coords != null) {\n                    message.coords = data.coords;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.lengths != null) {\n                    data.lengths = this.lengths;\n                }\n                if (this.coords != null) {\n                    data.coords = this.coords;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.lengths.length)\n                    writer.writePackedUint32(2, this.lengths);\n                if (this.coords.length)\n                    writer.writePackedSint64(3, this.coords);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Geometry();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 2:\n                            message.lengths = reader.readPackedUint32();\n                            break;\n                        case 3:\n                            message.coords = reader.readPackedSint64();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Geometry.deserialize(bytes);\n            }\n        }\n        _Geometry_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Geometry = Geometry;\n        class esriShapeBuffer extends pb_1.Message {\n            constructor(data) {\n                super();\n                _esriShapeBuffer_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _esriShapeBuffer_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"bytes\" in data && data.bytes != undefined) {\n                        this.bytes = data.bytes;\n                    }\n                }\n            }\n            get bytes() {\n                return pb_1.Message.getFieldWithDefault(this, 1, new Uint8Array());\n            }\n            set bytes(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            static fromObject(data) {\n                const message = new esriShapeBuffer({});\n                if (data.bytes != null) {\n                    message.bytes = data.bytes;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.bytes != null) {\n                    data.bytes = this.bytes;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.bytes.length)\n                    writer.writeBytes(1, this.bytes);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new esriShapeBuffer();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.bytes = reader.readBytes();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return esriShapeBuffer.deserialize(bytes);\n            }\n        }\n        _esriShapeBuffer_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.esriShapeBuffer = esriShapeBuffer;\n        class Feature extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Feature_one_of_decls.set(this, [[2, 3]]);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], __classPrivateFieldGet(this, _Feature_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"attributes\" in data && data.attributes != undefined) {\n                        this.attributes = data.attributes;\n                    }\n                    if (\"geometry\" in data && data.geometry != undefined) {\n                        this.geometry = data.geometry;\n                    }\n                    if (\"shapeBuffer\" in data && data.shapeBuffer != undefined) {\n                        this.shapeBuffer = data.shapeBuffer;\n                    }\n                    if (\"centroid\" in data && data.centroid != undefined) {\n                        this.centroid = data.centroid;\n                    }\n                }\n            }\n            get attributes() {\n                return pb_1.Message.getRepeatedWrapperField(this, FeatureCollectionPBuffer.Value, 1);\n            }\n            set attributes(value) {\n                pb_1.Message.setRepeatedWrapperField(this, 1, value);\n            }\n            get geometry() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.Geometry, 2);\n            }\n            set geometry(value) {\n                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _Feature_one_of_decls, \"f\")[0], value);\n            }\n            get has_geometry() {\n                return pb_1.Message.getField(this, 2) != null;\n            }\n            get shapeBuffer() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.esriShapeBuffer, 3);\n            }\n            set shapeBuffer(value) {\n                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, _Feature_one_of_decls, \"f\")[0], value);\n            }\n            get has_shapeBuffer() {\n                return pb_1.Message.getField(this, 3) != null;\n            }\n            get centroid() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.Geometry, 4);\n            }\n            set centroid(value) {\n                pb_1.Message.setWrapperField(this, 4, value);\n            }\n            get has_centroid() {\n                return pb_1.Message.getField(this, 4) != null;\n            }\n            get compressed_geometry() {\n                const cases = {\n                    0: \"none\",\n                    2: \"geometry\",\n                    3: \"shapeBuffer\",\n                };\n                return cases[pb_1.Message.computeOneofCase(this, [2, 3])];\n            }\n            static fromObject(data) {\n                const message = new Feature({});\n                if (data.attributes != null) {\n                    message.attributes = data.attributes.map((item) => FeatureCollectionPBuffer.Value.fromObject(item));\n                }\n                if (data.geometry != null) {\n                    message.geometry = FeatureCollectionPBuffer.Geometry.fromObject(data.geometry);\n                }\n                if (data.shapeBuffer != null) {\n                    message.shapeBuffer = FeatureCollectionPBuffer.esriShapeBuffer.fromObject(data.shapeBuffer);\n                }\n                if (data.centroid != null) {\n                    message.centroid = FeatureCollectionPBuffer.Geometry.fromObject(data.centroid);\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.attributes != null) {\n                    data.attributes = this.attributes.map((item) => item.toObject());\n                }\n                if (this.geometry != null) {\n                    data.geometry = this.geometry.toObject();\n                }\n                if (this.shapeBuffer != null) {\n                    data.shapeBuffer = this.shapeBuffer.toObject();\n                }\n                if (this.centroid != null) {\n                    data.centroid = this.centroid.toObject();\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.attributes.length)\n                    writer.writeRepeatedMessage(1, this.attributes, (item) => item.serialize(writer));\n                if (this.has_geometry)\n                    writer.writeMessage(2, this.geometry, () => this.geometry.serialize(writer));\n                if (this.has_shapeBuffer)\n                    writer.writeMessage(3, this.shapeBuffer, () => this.shapeBuffer.serialize(writer));\n                if (this.has_centroid)\n                    writer.writeMessage(4, this.centroid, () => this.centroid.serialize(writer));\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Feature();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            reader.readMessage(message.attributes, () => pb_1.Message.addToRepeatedWrapperField(message, 1, FeatureCollectionPBuffer.Value.deserialize(reader), FeatureCollectionPBuffer.Value));\n                            break;\n                        case 2:\n                            reader.readMessage(message.geometry, () => message.geometry = FeatureCollectionPBuffer.Geometry.deserialize(reader));\n                            break;\n                        case 3:\n                            reader.readMessage(message.shapeBuffer, () => message.shapeBuffer = FeatureCollectionPBuffer.esriShapeBuffer.deserialize(reader));\n                            break;\n                        case 4:\n                            reader.readMessage(message.centroid, () => message.centroid = FeatureCollectionPBuffer.Geometry.deserialize(reader));\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Feature.deserialize(bytes);\n            }\n        }\n        _Feature_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Feature = Feature;\n        class UniqueIdField extends pb_1.Message {\n            constructor(data) {\n                super();\n                _UniqueIdField_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _UniqueIdField_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"name\" in data && data.name != undefined) {\n                        this.name = data.name;\n                    }\n                    if (\"isSystemMaintained\" in data && data.isSystemMaintained != undefined) {\n                        this.isSystemMaintained = data.isSystemMaintained;\n                    }\n                }\n            }\n            get name() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n            }\n            set name(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get isSystemMaintained() {\n                return pb_1.Message.getFieldWithDefault(this, 2, false);\n            }\n            set isSystemMaintained(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            static fromObject(data) {\n                const message = new UniqueIdField({});\n                if (data.name != null) {\n                    message.name = data.name;\n                }\n                if (data.isSystemMaintained != null) {\n                    message.isSystemMaintained = data.isSystemMaintained;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.name != null) {\n                    data.name = this.name;\n                }\n                if (this.isSystemMaintained != null) {\n                    data.isSystemMaintained = this.isSystemMaintained;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.name.length)\n                    writer.writeString(1, this.name);\n                if (this.isSystemMaintained != false)\n                    writer.writeBool(2, this.isSystemMaintained);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UniqueIdField();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.name = reader.readString();\n                            break;\n                        case 2:\n                            message.isSystemMaintained = reader.readBool();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return UniqueIdField.deserialize(bytes);\n            }\n        }\n        _UniqueIdField_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.UniqueIdField = UniqueIdField;\n        class GeometryProperties extends pb_1.Message {\n            constructor(data) {\n                super();\n                _GeometryProperties_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _GeometryProperties_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"shapeAreaFieldName\" in data && data.shapeAreaFieldName != undefined) {\n                        this.shapeAreaFieldName = data.shapeAreaFieldName;\n                    }\n                    if (\"shapeLengthFieldName\" in data && data.shapeLengthFieldName != undefined) {\n                        this.shapeLengthFieldName = data.shapeLengthFieldName;\n                    }\n                    if (\"units\" in data && data.units != undefined) {\n                        this.units = data.units;\n                    }\n                }\n            }\n            get shapeAreaFieldName() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n            }\n            set shapeAreaFieldName(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get shapeLengthFieldName() {\n                return pb_1.Message.getFieldWithDefault(this, 2, \"\");\n            }\n            set shapeLengthFieldName(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get units() {\n                return pb_1.Message.getFieldWithDefault(this, 3, \"\");\n            }\n            set units(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            static fromObject(data) {\n                const message = new GeometryProperties({});\n                if (data.shapeAreaFieldName != null) {\n                    message.shapeAreaFieldName = data.shapeAreaFieldName;\n                }\n                if (data.shapeLengthFieldName != null) {\n                    message.shapeLengthFieldName = data.shapeLengthFieldName;\n                }\n                if (data.units != null) {\n                    message.units = data.units;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.shapeAreaFieldName != null) {\n                    data.shapeAreaFieldName = this.shapeAreaFieldName;\n                }\n                if (this.shapeLengthFieldName != null) {\n                    data.shapeLengthFieldName = this.shapeLengthFieldName;\n                }\n                if (this.units != null) {\n                    data.units = this.units;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.shapeAreaFieldName.length)\n                    writer.writeString(1, this.shapeAreaFieldName);\n                if (this.shapeLengthFieldName.length)\n                    writer.writeString(2, this.shapeLengthFieldName);\n                if (this.units.length)\n                    writer.writeString(3, this.units);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GeometryProperties();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.shapeAreaFieldName = reader.readString();\n                            break;\n                        case 2:\n                            message.shapeLengthFieldName = reader.readString();\n                            break;\n                        case 3:\n                            message.units = reader.readString();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return GeometryProperties.deserialize(bytes);\n            }\n        }\n        _GeometryProperties_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.GeometryProperties = GeometryProperties;\n        class ServerGens extends pb_1.Message {\n            constructor(data) {\n                super();\n                _ServerGens_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ServerGens_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"minServerGen\" in data && data.minServerGen != undefined) {\n                        this.minServerGen = data.minServerGen;\n                    }\n                    if (\"serverGen\" in data && data.serverGen != undefined) {\n                        this.serverGen = data.serverGen;\n                    }\n                }\n            }\n            get minServerGen() {\n                return pb_1.Message.getFieldWithDefault(this, 1, 0);\n            }\n            set minServerGen(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get serverGen() {\n                return pb_1.Message.getFieldWithDefault(this, 2, 0);\n            }\n            set serverGen(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            static fromObject(data) {\n                const message = new ServerGens({});\n                if (data.minServerGen != null) {\n                    message.minServerGen = data.minServerGen;\n                }\n                if (data.serverGen != null) {\n                    message.serverGen = data.serverGen;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.minServerGen != null) {\n                    data.minServerGen = this.minServerGen;\n                }\n                if (this.serverGen != null) {\n                    data.serverGen = this.serverGen;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.minServerGen != 0)\n                    writer.writeUint64(1, this.minServerGen);\n                if (this.serverGen != 0)\n                    writer.writeUint64(2, this.serverGen);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServerGens();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.minServerGen = reader.readUint64();\n                            break;\n                        case 2:\n                            message.serverGen = reader.readUint64();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return ServerGens.deserialize(bytes);\n            }\n        }\n        _ServerGens_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.ServerGens = ServerGens;\n        class Scale extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Scale_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Scale_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"xScale\" in data && data.xScale != undefined) {\n                        this.xScale = data.xScale;\n                    }\n                    if (\"yScale\" in data && data.yScale != undefined) {\n                        this.yScale = data.yScale;\n                    }\n                    if (\"mScale\" in data && data.mScale != undefined) {\n                        this.mScale = data.mScale;\n                    }\n                    if (\"zScale\" in data && data.zScale != undefined) {\n                        this.zScale = data.zScale;\n                    }\n                }\n            }\n            get xScale() {\n                return pb_1.Message.getFieldWithDefault(this, 1, 0);\n            }\n            set xScale(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get yScale() {\n                return pb_1.Message.getFieldWithDefault(this, 2, 0);\n            }\n            set yScale(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get mScale() {\n                return pb_1.Message.getFieldWithDefault(this, 3, 0);\n            }\n            set mScale(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            get zScale() {\n                return pb_1.Message.getFieldWithDefault(this, 4, 0);\n            }\n            set zScale(value) {\n                pb_1.Message.setField(this, 4, value);\n            }\n            static fromObject(data) {\n                const message = new Scale({});\n                if (data.xScale != null) {\n                    message.xScale = data.xScale;\n                }\n                if (data.yScale != null) {\n                    message.yScale = data.yScale;\n                }\n                if (data.mScale != null) {\n                    message.mScale = data.mScale;\n                }\n                if (data.zScale != null) {\n                    message.zScale = data.zScale;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.xScale != null) {\n                    data.xScale = this.xScale;\n                }\n                if (this.yScale != null) {\n                    data.yScale = this.yScale;\n                }\n                if (this.mScale != null) {\n                    data.mScale = this.mScale;\n                }\n                if (this.zScale != null) {\n                    data.zScale = this.zScale;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.xScale != 0)\n                    writer.writeDouble(1, this.xScale);\n                if (this.yScale != 0)\n                    writer.writeDouble(2, this.yScale);\n                if (this.mScale != 0)\n                    writer.writeDouble(3, this.mScale);\n                if (this.zScale != 0)\n                    writer.writeDouble(4, this.zScale);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Scale();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.xScale = reader.readDouble();\n                            break;\n                        case 2:\n                            message.yScale = reader.readDouble();\n                            break;\n                        case 3:\n                            message.mScale = reader.readDouble();\n                            break;\n                        case 4:\n                            message.zScale = reader.readDouble();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Scale.deserialize(bytes);\n            }\n        }\n        _Scale_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Scale = Scale;\n        class Translate extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Translate_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Translate_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"xTranslate\" in data && data.xTranslate != undefined) {\n                        this.xTranslate = data.xTranslate;\n                    }\n                    if (\"yTranslate\" in data && data.yTranslate != undefined) {\n                        this.yTranslate = data.yTranslate;\n                    }\n                    if (\"mTranslate\" in data && data.mTranslate != undefined) {\n                        this.mTranslate = data.mTranslate;\n                    }\n                    if (\"zTranslate\" in data && data.zTranslate != undefined) {\n                        this.zTranslate = data.zTranslate;\n                    }\n                }\n            }\n            get xTranslate() {\n                return pb_1.Message.getFieldWithDefault(this, 1, 0);\n            }\n            set xTranslate(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get yTranslate() {\n                return pb_1.Message.getFieldWithDefault(this, 2, 0);\n            }\n            set yTranslate(value) {\n                pb_1.Message.setField(this, 2, value);\n            }\n            get mTranslate() {\n                return pb_1.Message.getFieldWithDefault(this, 3, 0);\n            }\n            set mTranslate(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            get zTranslate() {\n                return pb_1.Message.getFieldWithDefault(this, 4, 0);\n            }\n            set zTranslate(value) {\n                pb_1.Message.setField(this, 4, value);\n            }\n            static fromObject(data) {\n                const message = new Translate({});\n                if (data.xTranslate != null) {\n                    message.xTranslate = data.xTranslate;\n                }\n                if (data.yTranslate != null) {\n                    message.yTranslate = data.yTranslate;\n                }\n                if (data.mTranslate != null) {\n                    message.mTranslate = data.mTranslate;\n                }\n                if (data.zTranslate != null) {\n                    message.zTranslate = data.zTranslate;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.xTranslate != null) {\n                    data.xTranslate = this.xTranslate;\n                }\n                if (this.yTranslate != null) {\n                    data.yTranslate = this.yTranslate;\n                }\n                if (this.mTranslate != null) {\n                    data.mTranslate = this.mTranslate;\n                }\n                if (this.zTranslate != null) {\n                    data.zTranslate = this.zTranslate;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.xTranslate != 0)\n                    writer.writeDouble(1, this.xTranslate);\n                if (this.yTranslate != 0)\n                    writer.writeDouble(2, this.yTranslate);\n                if (this.mTranslate != 0)\n                    writer.writeDouble(3, this.mTranslate);\n                if (this.zTranslate != 0)\n                    writer.writeDouble(4, this.zTranslate);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Translate();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.xTranslate = reader.readDouble();\n                            break;\n                        case 2:\n                            message.yTranslate = reader.readDouble();\n                            break;\n                        case 3:\n                            message.mTranslate = reader.readDouble();\n                            break;\n                        case 4:\n                            message.zTranslate = reader.readDouble();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Translate.deserialize(bytes);\n            }\n        }\n        _Translate_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Translate = Translate;\n        class Transform extends pb_1.Message {\n            constructor(data) {\n                super();\n                _Transform_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _Transform_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"quantizeOriginPostion\" in data && data.quantizeOriginPostion != undefined) {\n                        this.quantizeOriginPostion = data.quantizeOriginPostion;\n                    }\n                    if (\"scale\" in data && data.scale != undefined) {\n                        this.scale = data.scale;\n                    }\n                    if (\"translate\" in data && data.translate != undefined) {\n                        this.translate = data.translate;\n                    }\n                }\n            }\n            get quantizeOriginPostion() {\n                return pb_1.Message.getFieldWithDefault(this, 1, FeatureCollectionPBuffer.QuantizeOriginPostion.upperLeft);\n            }\n            set quantizeOriginPostion(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get scale() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.Scale, 2);\n            }\n            set scale(value) {\n                pb_1.Message.setWrapperField(this, 2, value);\n            }\n            get has_scale() {\n                return pb_1.Message.getField(this, 2) != null;\n            }\n            get translate() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.Translate, 3);\n            }\n            set translate(value) {\n                pb_1.Message.setWrapperField(this, 3, value);\n            }\n            get has_translate() {\n                return pb_1.Message.getField(this, 3) != null;\n            }\n            static fromObject(data) {\n                const message = new Transform({});\n                if (data.quantizeOriginPostion != null) {\n                    message.quantizeOriginPostion = data.quantizeOriginPostion;\n                }\n                if (data.scale != null) {\n                    message.scale = FeatureCollectionPBuffer.Scale.fromObject(data.scale);\n                }\n                if (data.translate != null) {\n                    message.translate = FeatureCollectionPBuffer.Translate.fromObject(data.translate);\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.quantizeOriginPostion != null) {\n                    data.quantizeOriginPostion = this.quantizeOriginPostion;\n                }\n                if (this.scale != null) {\n                    data.scale = this.scale.toObject();\n                }\n                if (this.translate != null) {\n                    data.translate = this.translate.toObject();\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.quantizeOriginPostion != FeatureCollectionPBuffer.QuantizeOriginPostion.upperLeft)\n                    writer.writeEnum(1, this.quantizeOriginPostion);\n                if (this.has_scale)\n                    writer.writeMessage(2, this.scale, () => this.scale.serialize(writer));\n                if (this.has_translate)\n                    writer.writeMessage(3, this.translate, () => this.translate.serialize(writer));\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Transform();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.quantizeOriginPostion = reader.readEnum();\n                            break;\n                        case 2:\n                            reader.readMessage(message.scale, () => message.scale = FeatureCollectionPBuffer.Scale.deserialize(reader));\n                            break;\n                        case 3:\n                            reader.readMessage(message.translate, () => message.translate = FeatureCollectionPBuffer.Translate.deserialize(reader));\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return Transform.deserialize(bytes);\n            }\n        }\n        _Transform_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.Transform = Transform;\n        class FeatureResult extends pb_1.Message {\n            constructor(data) {\n                super();\n                _FeatureResult_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [13, 14, 15], __classPrivateFieldGet(this, _FeatureResult_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"objectIdFieldName\" in data && data.objectIdFieldName != undefined) {\n                        this.objectIdFieldName = data.objectIdFieldName;\n                    }\n                    if (\"uniqueIdField\" in data && data.uniqueIdField != undefined) {\n                        this.uniqueIdField = data.uniqueIdField;\n                    }\n                    if (\"globalIdFieldName\" in data && data.globalIdFieldName != undefined) {\n                        this.globalIdFieldName = data.globalIdFieldName;\n                    }\n                    if (\"geohashFieldName\" in data && data.geohashFieldName != undefined) {\n                        this.geohashFieldName = data.geohashFieldName;\n                    }\n                    if (\"geometryProperties\" in data && data.geometryProperties != undefined) {\n                        this.geometryProperties = data.geometryProperties;\n                    }\n                    if (\"serverGens\" in data && data.serverGens != undefined) {\n                        this.serverGens = data.serverGens;\n                    }\n                    if (\"geometryType\" in data && data.geometryType != undefined) {\n                        this.geometryType = data.geometryType;\n                    }\n                    if (\"spatialReference\" in data && data.spatialReference != undefined) {\n                        this.spatialReference = data.spatialReference;\n                    }\n                    if (\"exceededTransferLimit\" in data && data.exceededTransferLimit != undefined) {\n                        this.exceededTransferLimit = data.exceededTransferLimit;\n                    }\n                    if (\"hasZ\" in data && data.hasZ != undefined) {\n                        this.hasZ = data.hasZ;\n                    }\n                    if (\"hasM\" in data && data.hasM != undefined) {\n                        this.hasM = data.hasM;\n                    }\n                    if (\"transform\" in data && data.transform != undefined) {\n                        this.transform = data.transform;\n                    }\n                    if (\"fields\" in data && data.fields != undefined) {\n                        this.fields = data.fields;\n                    }\n                    if (\"values\" in data && data.values != undefined) {\n                        this.values = data.values;\n                    }\n                    if (\"features\" in data && data.features != undefined) {\n                        this.features = data.features;\n                    }\n                }\n            }\n            get objectIdFieldName() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n            }\n            set objectIdFieldName(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get uniqueIdField() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.UniqueIdField, 2);\n            }\n            set uniqueIdField(value) {\n                pb_1.Message.setWrapperField(this, 2, value);\n            }\n            get has_uniqueIdField() {\n                return pb_1.Message.getField(this, 2) != null;\n            }\n            get globalIdFieldName() {\n                return pb_1.Message.getFieldWithDefault(this, 3, \"\");\n            }\n            set globalIdFieldName(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            get geohashFieldName() {\n                return pb_1.Message.getFieldWithDefault(this, 4, \"\");\n            }\n            set geohashFieldName(value) {\n                pb_1.Message.setField(this, 4, value);\n            }\n            get geometryProperties() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.GeometryProperties, 5);\n            }\n            set geometryProperties(value) {\n                pb_1.Message.setWrapperField(this, 5, value);\n            }\n            get has_geometryProperties() {\n                return pb_1.Message.getField(this, 5) != null;\n            }\n            get serverGens() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.ServerGens, 6);\n            }\n            set serverGens(value) {\n                pb_1.Message.setWrapperField(this, 6, value);\n            }\n            get has_serverGens() {\n                return pb_1.Message.getField(this, 6) != null;\n            }\n            get geometryType() {\n                return pb_1.Message.getFieldWithDefault(this, 7, FeatureCollectionPBuffer.GeometryType.esriGeometryTypePoint);\n            }\n            set geometryType(value) {\n                pb_1.Message.setField(this, 7, value);\n            }\n            get spatialReference() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.SpatialReference, 8);\n            }\n            set spatialReference(value) {\n                pb_1.Message.setWrapperField(this, 8, value);\n            }\n            get has_spatialReference() {\n                return pb_1.Message.getField(this, 8) != null;\n            }\n            get exceededTransferLimit() {\n                return pb_1.Message.getFieldWithDefault(this, 9, false);\n            }\n            set exceededTransferLimit(value) {\n                pb_1.Message.setField(this, 9, value);\n            }\n            get hasZ() {\n                return pb_1.Message.getFieldWithDefault(this, 10, false);\n            }\n            set hasZ(value) {\n                pb_1.Message.setField(this, 10, value);\n            }\n            get hasM() {\n                return pb_1.Message.getFieldWithDefault(this, 11, false);\n            }\n            set hasM(value) {\n                pb_1.Message.setField(this, 11, value);\n            }\n            get transform() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.Transform, 12);\n            }\n            set transform(value) {\n                pb_1.Message.setWrapperField(this, 12, value);\n            }\n            get has_transform() {\n                return pb_1.Message.getField(this, 12) != null;\n            }\n            get fields() {\n                return pb_1.Message.getRepeatedWrapperField(this, FeatureCollectionPBuffer.Field, 13);\n            }\n            set fields(value) {\n                pb_1.Message.setRepeatedWrapperField(this, 13, value);\n            }\n            get values() {\n                return pb_1.Message.getRepeatedWrapperField(this, FeatureCollectionPBuffer.Value, 14);\n            }\n            set values(value) {\n                pb_1.Message.setRepeatedWrapperField(this, 14, value);\n            }\n            get features() {\n                return pb_1.Message.getRepeatedWrapperField(this, FeatureCollectionPBuffer.Feature, 15);\n            }\n            set features(value) {\n                pb_1.Message.setRepeatedWrapperField(this, 15, value);\n            }\n            static fromObject(data) {\n                const message = new FeatureResult({});\n                if (data.objectIdFieldName != null) {\n                    message.objectIdFieldName = data.objectIdFieldName;\n                }\n                if (data.uniqueIdField != null) {\n                    message.uniqueIdField = FeatureCollectionPBuffer.UniqueIdField.fromObject(data.uniqueIdField);\n                }\n                if (data.globalIdFieldName != null) {\n                    message.globalIdFieldName = data.globalIdFieldName;\n                }\n                if (data.geohashFieldName != null) {\n                    message.geohashFieldName = data.geohashFieldName;\n                }\n                if (data.geometryProperties != null) {\n                    message.geometryProperties = FeatureCollectionPBuffer.GeometryProperties.fromObject(data.geometryProperties);\n                }\n                if (data.serverGens != null) {\n                    message.serverGens = FeatureCollectionPBuffer.ServerGens.fromObject(data.serverGens);\n                }\n                if (data.geometryType != null) {\n                    message.geometryType = data.geometryType;\n                }\n                if (data.spatialReference != null) {\n                    message.spatialReference = FeatureCollectionPBuffer.SpatialReference.fromObject(data.spatialReference);\n                }\n                if (data.exceededTransferLimit != null) {\n                    message.exceededTransferLimit = data.exceededTransferLimit;\n                }\n                if (data.hasZ != null) {\n                    message.hasZ = data.hasZ;\n                }\n                if (data.hasM != null) {\n                    message.hasM = data.hasM;\n                }\n                if (data.transform != null) {\n                    message.transform = FeatureCollectionPBuffer.Transform.fromObject(data.transform);\n                }\n                if (data.fields != null) {\n                    message.fields = data.fields.map((item) => FeatureCollectionPBuffer.Field.fromObject(item));\n                }\n                if (data.values != null) {\n                    message.values = data.values.map((item) => FeatureCollectionPBuffer.Value.fromObject(item));\n                }\n                if (data.features != null) {\n                    message.features = data.features.map((item) => FeatureCollectionPBuffer.Feature.fromObject(item));\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.objectIdFieldName != null) {\n                    data.objectIdFieldName = this.objectIdFieldName;\n                }\n                if (this.uniqueIdField != null) {\n                    data.uniqueIdField = this.uniqueIdField.toObject();\n                }\n                if (this.globalIdFieldName != null) {\n                    data.globalIdFieldName = this.globalIdFieldName;\n                }\n                if (this.geohashFieldName != null) {\n                    data.geohashFieldName = this.geohashFieldName;\n                }\n                if (this.geometryProperties != null) {\n                    data.geometryProperties = this.geometryProperties.toObject();\n                }\n                if (this.serverGens != null) {\n                    data.serverGens = this.serverGens.toObject();\n                }\n                if (this.geometryType != null) {\n                    data.geometryType = this.geometryType;\n                }\n                if (this.spatialReference != null) {\n                    data.spatialReference = this.spatialReference.toObject();\n                }\n                if (this.exceededTransferLimit != null) {\n                    data.exceededTransferLimit = this.exceededTransferLimit;\n                }\n                if (this.hasZ != null) {\n                    data.hasZ = this.hasZ;\n                }\n                if (this.hasM != null) {\n                    data.hasM = this.hasM;\n                }\n                if (this.transform != null) {\n                    data.transform = this.transform.toObject();\n                }\n                if (this.fields != null) {\n                    data.fields = this.fields.map((item) => item.toObject());\n                }\n                if (this.values != null) {\n                    data.values = this.values.map((item) => item.toObject());\n                }\n                if (this.features != null) {\n                    data.features = this.features.map((item) => item.toObject());\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.objectIdFieldName.length)\n                    writer.writeString(1, this.objectIdFieldName);\n                if (this.has_uniqueIdField)\n                    writer.writeMessage(2, this.uniqueIdField, () => this.uniqueIdField.serialize(writer));\n                if (this.globalIdFieldName.length)\n                    writer.writeString(3, this.globalIdFieldName);\n                if (this.geohashFieldName.length)\n                    writer.writeString(4, this.geohashFieldName);\n                if (this.has_geometryProperties)\n                    writer.writeMessage(5, this.geometryProperties, () => this.geometryProperties.serialize(writer));\n                if (this.has_serverGens)\n                    writer.writeMessage(6, this.serverGens, () => this.serverGens.serialize(writer));\n                if (this.geometryType != FeatureCollectionPBuffer.GeometryType.esriGeometryTypePoint)\n                    writer.writeEnum(7, this.geometryType);\n                if (this.has_spatialReference)\n                    writer.writeMessage(8, this.spatialReference, () => this.spatialReference.serialize(writer));\n                if (this.exceededTransferLimit != false)\n                    writer.writeBool(9, this.exceededTransferLimit);\n                if (this.hasZ != false)\n                    writer.writeBool(10, this.hasZ);\n                if (this.hasM != false)\n                    writer.writeBool(11, this.hasM);\n                if (this.has_transform)\n                    writer.writeMessage(12, this.transform, () => this.transform.serialize(writer));\n                if (this.fields.length)\n                    writer.writeRepeatedMessage(13, this.fields, (item) => item.serialize(writer));\n                if (this.values.length)\n                    writer.writeRepeatedMessage(14, this.values, (item) => item.serialize(writer));\n                if (this.features.length)\n                    writer.writeRepeatedMessage(15, this.features, (item) => item.serialize(writer));\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FeatureResult();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.objectIdFieldName = reader.readString();\n                            break;\n                        case 2:\n                            reader.readMessage(message.uniqueIdField, () => message.uniqueIdField = FeatureCollectionPBuffer.UniqueIdField.deserialize(reader));\n                            break;\n                        case 3:\n                            message.globalIdFieldName = reader.readString();\n                            break;\n                        case 4:\n                            message.geohashFieldName = reader.readString();\n                            break;\n                        case 5:\n                            reader.readMessage(message.geometryProperties, () => message.geometryProperties = FeatureCollectionPBuffer.GeometryProperties.deserialize(reader));\n                            break;\n                        case 6:\n                            reader.readMessage(message.serverGens, () => message.serverGens = FeatureCollectionPBuffer.ServerGens.deserialize(reader));\n                            break;\n                        case 7:\n                            message.geometryType = reader.readEnum();\n                            break;\n                        case 8:\n                            reader.readMessage(message.spatialReference, () => message.spatialReference = FeatureCollectionPBuffer.SpatialReference.deserialize(reader));\n                            break;\n                        case 9:\n                            message.exceededTransferLimit = reader.readBool();\n                            break;\n                        case 10:\n                            message.hasZ = reader.readBool();\n                            break;\n                        case 11:\n                            message.hasM = reader.readBool();\n                            break;\n                        case 12:\n                            reader.readMessage(message.transform, () => message.transform = FeatureCollectionPBuffer.Transform.deserialize(reader));\n                            break;\n                        case 13:\n                            reader.readMessage(message.fields, () => pb_1.Message.addToRepeatedWrapperField(message, 13, FeatureCollectionPBuffer.Field.deserialize(reader), FeatureCollectionPBuffer.Field));\n                            break;\n                        case 14:\n                            reader.readMessage(message.values, () => pb_1.Message.addToRepeatedWrapperField(message, 14, FeatureCollectionPBuffer.Value.deserialize(reader), FeatureCollectionPBuffer.Value));\n                            break;\n                        case 15:\n                            reader.readMessage(message.features, () => pb_1.Message.addToRepeatedWrapperField(message, 15, FeatureCollectionPBuffer.Feature.deserialize(reader), FeatureCollectionPBuffer.Feature));\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return FeatureResult.deserialize(bytes);\n            }\n        }\n        _FeatureResult_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.FeatureResult = FeatureResult;\n        class CountResult extends pb_1.Message {\n            constructor(data) {\n                super();\n                _CountResult_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _CountResult_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"count\" in data && data.count != undefined) {\n                        this.count = data.count;\n                    }\n                }\n            }\n            get count() {\n                return pb_1.Message.getFieldWithDefault(this, 1, 0);\n            }\n            set count(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            static fromObject(data) {\n                const message = new CountResult({});\n                if (data.count != null) {\n                    message.count = data.count;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.count != null) {\n                    data.count = this.count;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.count != 0)\n                    writer.writeUint64(1, this.count);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CountResult();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.count = reader.readUint64();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return CountResult.deserialize(bytes);\n            }\n        }\n        _CountResult_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.CountResult = CountResult;\n        class ObjectIdsResult extends pb_1.Message {\n            constructor(data) {\n                super();\n                _ObjectIdsResult_one_of_decls.set(this, []);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], __classPrivateFieldGet(this, _ObjectIdsResult_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"objectIdFieldName\" in data && data.objectIdFieldName != undefined) {\n                        this.objectIdFieldName = data.objectIdFieldName;\n                    }\n                    if (\"serverGens\" in data && data.serverGens != undefined) {\n                        this.serverGens = data.serverGens;\n                    }\n                    if (\"objectIds\" in data && data.objectIds != undefined) {\n                        this.objectIds = data.objectIds;\n                    }\n                }\n            }\n            get objectIdFieldName() {\n                return pb_1.Message.getFieldWithDefault(this, 1, \"\");\n            }\n            set objectIdFieldName(value) {\n                pb_1.Message.setField(this, 1, value);\n            }\n            get serverGens() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.ServerGens, 2);\n            }\n            set serverGens(value) {\n                pb_1.Message.setWrapperField(this, 2, value);\n            }\n            get has_serverGens() {\n                return pb_1.Message.getField(this, 2) != null;\n            }\n            get objectIds() {\n                return pb_1.Message.getFieldWithDefault(this, 3, []);\n            }\n            set objectIds(value) {\n                pb_1.Message.setField(this, 3, value);\n            }\n            static fromObject(data) {\n                const message = new ObjectIdsResult({});\n                if (data.objectIdFieldName != null) {\n                    message.objectIdFieldName = data.objectIdFieldName;\n                }\n                if (data.serverGens != null) {\n                    message.serverGens = FeatureCollectionPBuffer.ServerGens.fromObject(data.serverGens);\n                }\n                if (data.objectIds != null) {\n                    message.objectIds = data.objectIds;\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.objectIdFieldName != null) {\n                    data.objectIdFieldName = this.objectIdFieldName;\n                }\n                if (this.serverGens != null) {\n                    data.serverGens = this.serverGens.toObject();\n                }\n                if (this.objectIds != null) {\n                    data.objectIds = this.objectIds;\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.objectIdFieldName.length)\n                    writer.writeString(1, this.objectIdFieldName);\n                if (this.has_serverGens)\n                    writer.writeMessage(2, this.serverGens, () => this.serverGens.serialize(writer));\n                if (this.objectIds.length)\n                    writer.writePackedUint64(3, this.objectIds);\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ObjectIdsResult();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            message.objectIdFieldName = reader.readString();\n                            break;\n                        case 2:\n                            reader.readMessage(message.serverGens, () => message.serverGens = FeatureCollectionPBuffer.ServerGens.deserialize(reader));\n                            break;\n                        case 3:\n                            message.objectIds = reader.readPackedUint64();\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return ObjectIdsResult.deserialize(bytes);\n            }\n        }\n        _ObjectIdsResult_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.ObjectIdsResult = ObjectIdsResult;\n        class QueryResult extends pb_1.Message {\n            constructor(data) {\n                super();\n                _QueryResult_one_of_decls.set(this, [[1, 2, 3]]);\n                pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _QueryResult_one_of_decls, \"f\"));\n                if (!Array.isArray(data) && typeof data == \"object\") {\n                    if (\"featureResult\" in data && data.featureResult != undefined) {\n                        this.featureResult = data.featureResult;\n                    }\n                    if (\"countResult\" in data && data.countResult != undefined) {\n                        this.countResult = data.countResult;\n                    }\n                    if (\"idsResult\" in data && data.idsResult != undefined) {\n                        this.idsResult = data.idsResult;\n                    }\n                }\n            }\n            get featureResult() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.FeatureResult, 1);\n            }\n            set featureResult(value) {\n                pb_1.Message.setOneofWrapperField(this, 1, __classPrivateFieldGet(this, _QueryResult_one_of_decls, \"f\")[0], value);\n            }\n            get has_featureResult() {\n                return pb_1.Message.getField(this, 1) != null;\n            }\n            get countResult() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.CountResult, 2);\n            }\n            set countResult(value) {\n                pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _QueryResult_one_of_decls, \"f\")[0], value);\n            }\n            get has_countResult() {\n                return pb_1.Message.getField(this, 2) != null;\n            }\n            get idsResult() {\n                return pb_1.Message.getWrapperField(this, FeatureCollectionPBuffer.ObjectIdsResult, 3);\n            }\n            set idsResult(value) {\n                pb_1.Message.setOneofWrapperField(this, 3, __classPrivateFieldGet(this, _QueryResult_one_of_decls, \"f\")[0], value);\n            }\n            get has_idsResult() {\n                return pb_1.Message.getField(this, 3) != null;\n            }\n            get Results() {\n                const cases = {\n                    0: \"none\",\n                    1: \"featureResult\",\n                    2: \"countResult\",\n                    3: \"idsResult\",\n                };\n                return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3])];\n            }\n            static fromObject(data) {\n                const message = new QueryResult({});\n                if (data.featureResult != null) {\n                    message.featureResult = FeatureCollectionPBuffer.FeatureResult.fromObject(data.featureResult);\n                }\n                if (data.countResult != null) {\n                    message.countResult = FeatureCollectionPBuffer.CountResult.fromObject(data.countResult);\n                }\n                if (data.idsResult != null) {\n                    message.idsResult = FeatureCollectionPBuffer.ObjectIdsResult.fromObject(data.idsResult);\n                }\n                return message;\n            }\n            toObject() {\n                const data = {};\n                if (this.featureResult != null) {\n                    data.featureResult = this.featureResult.toObject();\n                }\n                if (this.countResult != null) {\n                    data.countResult = this.countResult.toObject();\n                }\n                if (this.idsResult != null) {\n                    data.idsResult = this.idsResult.toObject();\n                }\n                return data;\n            }\n            serialize(w) {\n                const writer = w || new pb_1.BinaryWriter();\n                if (this.has_featureResult)\n                    writer.writeMessage(1, this.featureResult, () => this.featureResult.serialize(writer));\n                if (this.has_countResult)\n                    writer.writeMessage(2, this.countResult, () => this.countResult.serialize(writer));\n                if (this.has_idsResult)\n                    writer.writeMessage(3, this.idsResult, () => this.idsResult.serialize(writer));\n                if (!w)\n                    return writer.getResultBuffer();\n            }\n            static deserialize(bytes) {\n                const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryResult();\n                while (reader.nextField()) {\n                    if (reader.isEndGroup())\n                        break;\n                    switch (reader.getFieldNumber()) {\n                        case 1:\n                            reader.readMessage(message.featureResult, () => message.featureResult = FeatureCollectionPBuffer.FeatureResult.deserialize(reader));\n                            break;\n                        case 2:\n                            reader.readMessage(message.countResult, () => message.countResult = FeatureCollectionPBuffer.CountResult.deserialize(reader));\n                            break;\n                        case 3:\n                            reader.readMessage(message.idsResult, () => message.idsResult = FeatureCollectionPBuffer.ObjectIdsResult.deserialize(reader));\n                            break;\n                        default: reader.skipField();\n                    }\n                }\n                return message;\n            }\n            serializeBinary() {\n                return this.serialize();\n            }\n            static deserializeBinary(bytes) {\n                return QueryResult.deserialize(bytes);\n            }\n        }\n        _QueryResult_one_of_decls = new WeakMap();\n        FeatureCollectionPBuffer.QueryResult = QueryResult;\n    })(FeatureCollectionPBuffer = esriPBuffer.FeatureCollectionPBuffer || (esriPBuffer.FeatureCollectionPBuffer = {}));\n})(esriPBuffer || (esriPBuffer = {}));\n//# sourceMappingURL=esriPBuffer.gen.js.map",
      "start": 1693508126271,
      "end": 1693508126364,
      "sourcemaps": null
    }
  ]
}
