{
  "resolvedId": "D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/@itwin+imodels-client-management@3.1.0/node_modules/@itwin/imodels-client-management/lib/esm/operations/briefcase/BriefcaseOperations.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n * Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n * See LICENSE.md in the project root for license terms and full copyright notice.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EntityListIteratorImpl, OperationsBase } from \"../../base/internal\";\r\nimport { PreferReturn } from \"../../base/types\";\r\nimport { getUser } from \"../SharedFunctions\";\r\nexport class BriefcaseOperations extends OperationsBase {\r\n    constructor(options, _iModelsClient) {\r\n        super(options);\r\n        this._iModelsClient = _iModelsClient;\r\n    }\r\n    /**\r\n     * Gets Briefcases of a specific iModel. This method returns Briefcases in their minimal representation. The returned iterator\r\n     * internally queries entities in pages. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-briefcases/ Get iModel Briefcases}\r\n     * operation from iModels API.\r\n     * @param {GetBriefcaseListParams} params parameters for this operation. See {@link GetBriefcaseListParams}.\r\n     * @returns {EntityListIterator<MinimalBriefcase>} iterator for Briefcase list. See {@link EntityListIterator},\r\n     * {@link MinimalBriefcase}.\r\n     */\r\n    getMinimalList(params) {\r\n        return new EntityListIteratorImpl(async () => this.getEntityCollectionPage({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getBriefcaseListUrl({ iModelId: params.iModelId, urlParams: params.urlParams }),\r\n            preferReturn: PreferReturn.Minimal,\r\n            entityCollectionAccessor: (response) => response.briefcases\r\n        }));\r\n    }\r\n    /**\r\n     * Gets Briefcases of a specific iModel. This method returns Briefcases in their full representation. The returned iterator\r\n     * internally queries entities in pages. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-briefcases/ Get iModel Briefcases}\r\n     * operation from iModels API.\r\n     * @param {GetBriefcaseListParams} params parameters for this operation. See {@link GetBriefcaseListParams}.\r\n     * @returns {EntityListIterator<Briefcase>} iterator for Briefcase list. See {@link EntityListIterator}, {@link Briefcase}.\r\n     */\r\n    getRepresentationList(params) {\r\n        const entityCollectionAccessor = (response) => {\r\n            const briefcases = response.briefcases;\r\n            const mappedBriefcases = briefcases.map((briefcase) => this.appendRelatedEntityCallbacks(params.authorization, briefcase));\r\n            return mappedBriefcases;\r\n        };\r\n        return new EntityListIteratorImpl(async () => this.getEntityCollectionPage({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getBriefcaseListUrl({ iModelId: params.iModelId, urlParams: params.urlParams }),\r\n            preferReturn: PreferReturn.Representation,\r\n            entityCollectionAccessor\r\n        }));\r\n    }\r\n    /**\r\n     * Gets a single Briefcase by its id. This method returns a Briefcase in its full representation. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-briefcase-details/ Get iModel Briefcase}\r\n     * operation from iModels API.\r\n     * @param {GetSingleBriefcaseParams} params parameters for this operation. See {@link GetSingleBriefcaseParams}.\r\n     * @returns {Promise<Briefcase>} an Briefcase with specified id. See {@link iModel}.\r\n     */\r\n    async getSingle(params) {\r\n        const response = await this.sendGetRequest({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getSingleBriefcaseUrl({ iModelId: params.iModelId, briefcaseId: params.briefcaseId })\r\n        });\r\n        const result = this.appendRelatedEntityCallbacks(params.authorization, response.briefcase);\r\n        return result;\r\n    }\r\n    appendRelatedEntityCallbacks(authorization, briefcase) {\r\n        const getOwner = async () => {\r\n            var _a;\r\n            return getUser(authorization, this._iModelsClient.users, this._options.urlFormatter, (_a = briefcase._links.owner) === null || _a === void 0 ? void 0 : _a.href);\r\n        };\r\n        const result = {\r\n            ...briefcase,\r\n            getOwner\r\n        };\r\n        return result;\r\n    }\r\n}\r\n//# sourceMappingURL=BriefcaseOperations.js.map",
      "start": 1693508126642,
      "end": 1693508126699,
      "sourcemaps": null
    }
  ]
}
