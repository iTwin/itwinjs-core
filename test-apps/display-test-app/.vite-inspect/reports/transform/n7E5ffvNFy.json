{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcProtocol.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module RpcInterface\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElectronRpcProtocol = void 0;\nconst core_bentley_1 = require(\"@itwin/core-bentley\");\nconst core_common_1 = require(\"@itwin/core-common\");\nconst ElectronIpcTransport_1 = require(\"./ElectronIpcTransport\");\nconst ElectronRpcRequest_1 = require(\"./ElectronRpcRequest\");\n/* eslint-disable deprecation/deprecation */\n/** RPC interface protocol for an Electron-based application.\n * @internal\n */\nclass ElectronRpcProtocol extends core_common_1.RpcProtocol {\n    /** Constructs an Electron protocol. */\n    constructor(configuration, ipcSocket) {\n        super(configuration);\n        /** The RPC request class for this protocol. */\n        this.requestType = ElectronRpcRequest_1.ElectronRpcRequest;\n        /** Specifies where to break large binary request payloads. */\n        this.transferChunkThreshold = 48 * 1024 * 1024;\n        /** @internal */\n        this.requests = new Map();\n        this.ipcSocket = ipcSocket;\n        this.transport = (0, ElectronIpcTransport_1.initializeIpc)(this);\n    }\n    /** @internal */\n    onRpcClientInitialized(definition, _client) {\n        this.registerInterface(definition);\n    }\n    /** @internal */\n    onRpcImplInitialized(definition, _impl) {\n        this.registerInterface(definition);\n    }\n    /** @internal */\n    onRpcClientTerminated(definition, _client) {\n        this.purgeInterface(definition);\n    }\n    /** @internal */\n    onRpcImplTerminated(definition, _impl) {\n        this.purgeInterface(definition);\n    }\n    registerInterface(definition) {\n        if (ElectronRpcProtocol.instances.has(definition.interfaceName))\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, `RPC interface \"${definition.interfaceName}\"\" is already associated with a protocol.`);\n        ElectronRpcProtocol.instances.set(definition.interfaceName, this);\n    }\n    purgeInterface(definition) {\n        ElectronRpcProtocol.instances.delete(definition.interfaceName);\n    }\n}\nElectronRpcProtocol.instances = new Map();\nexports.ElectronRpcProtocol = ElectronRpcProtocol;\n//# sourceMappingURL=ElectronRpcProtocol.js.map",
      "start": 1693508126221,
      "end": 1693508126299,
      "sourcemaps": null
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as ElectronRpcProtocol_1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcProtocol.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/hub2023A/itwinjs-core/core/bentley/lib/esm/core-bentley.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/hub2023A/itwinjs-core/core/common/lib/esm/core-common.js?commonjs-proxy\";\nimport { __require as require$$2 } from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronIpcTransport.js?commonjs-wrapped\";\nimport require$$3 from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcRequest.js?commonjs-proxy\";\n\nvar hasRequiredElectronRpcProtocol;\n\nfunction requireElectronRpcProtocol () {\n\tif (hasRequiredElectronRpcProtocol) return ElectronRpcProtocol_1;\n\thasRequiredElectronRpcProtocol = 1;\n\t\"use strict\";\n\t/*---------------------------------------------------------------------------------------------\n\t* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n\t* See LICENSE.md in the project root for license terms and full copyright notice.\n\t*--------------------------------------------------------------------------------------------*/\n\t/** @packageDocumentation\n\t * @module RpcInterface\n\t */\n\tObject.defineProperty(ElectronRpcProtocol_1, \"__esModule\", { value: true });\n\tElectronRpcProtocol_1.ElectronRpcProtocol = void 0;\n\tconst core_bentley_1 = require$$0;\n\tconst core_common_1 = require$$1;\n\tconst ElectronIpcTransport_1 = require$$2();\n\tconst ElectronRpcRequest_1 = require$$3;\n\t/* eslint-disable deprecation/deprecation */\n\t/** RPC interface protocol for an Electron-based application.\n\t * @internal\n\t */\n\tclass ElectronRpcProtocol extends core_common_1.RpcProtocol {\n\t    /** Constructs an Electron protocol. */\n\t    constructor(configuration, ipcSocket) {\n\t        super(configuration);\n\t        /** The RPC request class for this protocol. */\n\t        this.requestType = ElectronRpcRequest_1.ElectronRpcRequest;\n\t        /** Specifies where to break large binary request payloads. */\n\t        this.transferChunkThreshold = 48 * 1024 * 1024;\n\t        /** @internal */\n\t        this.requests = new Map();\n\t        this.ipcSocket = ipcSocket;\n\t        this.transport = (0, ElectronIpcTransport_1.initializeIpc)(this);\n\t    }\n\t    /** @internal */\n\t    onRpcClientInitialized(definition, _client) {\n\t        this.registerInterface(definition);\n\t    }\n\t    /** @internal */\n\t    onRpcImplInitialized(definition, _impl) {\n\t        this.registerInterface(definition);\n\t    }\n\t    /** @internal */\n\t    onRpcClientTerminated(definition, _client) {\n\t        this.purgeInterface(definition);\n\t    }\n\t    /** @internal */\n\t    onRpcImplTerminated(definition, _impl) {\n\t        this.purgeInterface(definition);\n\t    }\n\t    registerInterface(definition) {\n\t        if (ElectronRpcProtocol.instances.has(definition.interfaceName))\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, `RPC interface \"${definition.interfaceName}\"\" is already associated with a protocol.`);\n\t        ElectronRpcProtocol.instances.set(definition.interfaceName, this);\n\t    }\n\t    purgeInterface(definition) {\n\t        ElectronRpcProtocol.instances.delete(definition.interfaceName);\n\t    }\n\t}\n\tElectronRpcProtocol.instances = new Map();\n\tElectronRpcProtocol_1.ElectronRpcProtocol = ElectronRpcProtocol;\n\t//# sourceMappingURL=ElectronRpcProtocol.js.map\n\treturn ElectronRpcProtocol_1;\n}\n\nexport { requireElectronRpcProtocol as __require };",
      "start": 1693508126300,
      "end": 1693508127302,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;;;CAAA,YAAY,CAAC;CACb;CACA;CACA;CACA;CACA;CACA;CACA;CACA,MAAM,CAAC,cAAc,CAAC,qBAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,0CAA2B,GAAG,KAAK,CAAC,CAAC;CACrC,MAAM,cAAc,GAAG,UAA8B,CAAC;CACtD,MAAM,aAAa,GAAG,UAA6B,CAAC;CACpD,MAAM,sBAAsB,GAAG,YAAiC,CAAC;CACjE,MAAM,oBAAoB,GAAG,UAA+B,CAAC;CAC7D;CACA;CACA;CACA;CACA,MAAM,mBAAmB,SAAS,aAAa,CAAC,WAAW,CAAC;CAC5D;CACA,IAAI,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE;CAC1C,QAAQ,KAAK,CAAC,aAAa,CAAC,CAAC;CAC7B;CACA,QAAQ,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC,kBAAkB,CAAC;CACnE;CACA,QAAQ,IAAI,CAAC,sBAAsB,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;CACvD;CACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;CAClC,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;CACnC,QAAQ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,sBAAsB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;CACzE,KAAK;CACL;CACA,IAAI,sBAAsB,CAAC,UAAU,EAAE,OAAO,EAAE;CAChD,QAAQ,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;CAC3C,KAAK;CACL;CACA,IAAI,oBAAoB,CAAC,UAAU,EAAE,KAAK,EAAE;CAC5C,QAAQ,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;CAC3C,KAAK;CACL;CACA,IAAI,qBAAqB,CAAC,UAAU,EAAE,OAAO,EAAE;CAC/C,QAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;CACxC,KAAK;CACL;CACA,IAAI,mBAAmB,CAAC,UAAU,EAAE,KAAK,EAAE;CAC3C,QAAQ,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;CACxC,KAAK;CACL,IAAI,iBAAiB,CAAC,UAAU,EAAE;CAClC,QAAQ,IAAI,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC;CACvE,YAAY,MAAM,IAAI,aAAa,CAAC,WAAW,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,eAAe,EAAE,UAAU,CAAC,aAAa,CAAC,yCAAyC,CAAC,CAAC,CAAC;CAC3K,QAAQ,mBAAmB,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;CAC1E,KAAK;CACL,IAAI,cAAc,CAAC,UAAU,EAAE;CAC/B,QAAQ,mBAAmB,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;CACvE,KAAK;CACL,CAAC;CACD,mBAAmB,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1C,0CAA2B,GAAG,mBAAmB,CAAC;CAClD"
      }
    }
  ]
}
