{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/ElementProps.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Entities\n */\nimport { Id64 } from \"@itwin/core-bentley\";\nimport { IModelError, IModelStatus } from \"./IModelError\";\n/** The Id and relationship class of an Element that is somehow related to another Element\n * @public\n */\nclass RelatedElement {\n    constructor(props) {\n        this.id = Id64.fromJSON(props.id);\n        this.relClassName = props.relClassName;\n    }\n    static fromJSON(json) {\n        return json ? new RelatedElement(json) : undefined;\n    }\n    /** Accept the value of a navigation property that might be in the shortened format of just an id or might be in the full RelatedElement format. */\n    static idFromJson(json) {\n        if ((typeof json === \"object\") && (\"id\" in json)) {\n            const r = RelatedElement.fromJSON(json);\n            if (r === undefined)\n                throw new IModelError(IModelStatus.BadArg, \"Problem parsing Id64 from json\");\n            return r.id;\n        }\n        return Id64.fromJSON(json);\n    }\n    toJSON() {\n        return {\n            id: this.id,\n            relClassName: this.relClassName,\n        };\n    }\n}\n/** Used to *null out* an existing navigation relationship. */\nRelatedElement.none = new RelatedElement({ id: Id64.invalid });\nexport { RelatedElement };\n/** A [RelatedElement]($common) relationship that describes the [TypeDefinitionElement]($backend) of an element.\n * @public\n */\nexport class TypeDefinition extends RelatedElement {\n}\n/** determine if this is Placement2dProps\n * @public\n */\nexport function isPlacement2dProps(props) {\n    return props.angle !== undefined;\n}\n/** determine if this is Placement3dProps\n * @public\n */\nexport function isPlacement3dProps(props) {\n    return !isPlacement2dProps(props);\n}\n/** An enumeration of the different types of [SectionDrawing]($backend)s.\n * @public\n * @extensions\n */\nexport var SectionType;\n(function (SectionType) {\n    SectionType[SectionType[\"Section\"] = 3] = \"Section\";\n    SectionType[SectionType[\"Detail\"] = 4] = \"Detail\";\n    SectionType[SectionType[\"Elevation\"] = 5] = \"Elevation\";\n    SectionType[SectionType[\"Plan\"] = 6] = \"Plan\";\n})(SectionType || (SectionType = {}));\n/** The role that an attached [ExternalSource]($backend) plays.\n * @beta\n */\nexport var ExternalSourceAttachmentRole;\n(function (ExternalSourceAttachmentRole) {\n    /** The attached [ExternalSource]($backend) provides context. */\n    ExternalSourceAttachmentRole[ExternalSourceAttachmentRole[\"SpecifyContext\"] = 0] = \"SpecifyContext\";\n    /** The attached [ExternalSource]($backend) models a part of the whole. */\n    ExternalSourceAttachmentRole[ExternalSourceAttachmentRole[\"SpecifyPart\"] = 1] = \"SpecifyPart\";\n})(ExternalSourceAttachmentRole || (ExternalSourceAttachmentRole = {}));\n/** The *rank* for a Category\n * @public\n * @extensions\n */\nexport var Rank;\n(function (Rank) {\n    /** This category is predefined by the system */\n    Rank[Rank[\"System\"] = 0] = \"System\";\n    /** This category is defined by a schema. Elements in this category are not recognized by system classes. */\n    Rank[Rank[\"Domain\"] = 1] = \"Domain\";\n    /** This category is defined by an application. Elements in this category are not recognized by system and schema classes. */\n    Rank[Rank[\"Application\"] = 2] = \"Application\";\n    /** This category is defined by a user. Elements in this category are not recognized by system, schema, and application classes. */\n    Rank[Rank[\"User\"] = 3] = \"User\";\n})(Rank || (Rank = {}));\n//# sourceMappingURL=ElementProps.js.map",
      "start": 1693508120715,
      "end": 1693508120776,
      "sourcemaps": null
    }
  ]
}
