{
  "resolvedId": "D:/hub2023A/itwinjs-core/ui/appui-abstract/lib/esm/appui-abstract/statusbar/StatusBarItem.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module StatusBar\n */\n/** Status bar Groups/Sections from Left to Right\n * @deprecated in 3.6. Use [StatusBarSection]($appui-react) instead.\n * @public\n */\nexport var StatusBarSection;\n(function (StatusBarSection) {\n    /** area for tool assistance and messages */\n    StatusBarSection[StatusBarSection[\"Message\"] = 0] = \"Message\";\n    /** area for tool assistance and messages */\n    StatusBarSection[StatusBarSection[\"Left\"] = 0] = \"Left\";\n    /** items specific to stage/task */\n    StatusBarSection[StatusBarSection[\"Stage\"] = 1] = \"Stage\";\n    /** items specific to stage/task */\n    StatusBarSection[StatusBarSection[\"Center\"] = 1] = \"Center\";\n    /** Select scope and selection info */\n    StatusBarSection[StatusBarSection[\"Selection\"] = 2] = \"Selection\";\n    /** Select scope and selection info */\n    StatusBarSection[StatusBarSection[\"Right\"] = 2] = \"Right\";\n    /** items that only show based on context */\n    StatusBarSection[StatusBarSection[\"Context\"] = 3] = \"Context\";\n})(StatusBarSection || (StatusBarSection = {}));\n/** Defines which side of Icon where label is placed\n * @deprecated in 3.6. Use [StatusBarLabelSide]($appui-react) instead.\n * @public\n */\nexport var StatusBarLabelSide;\n(function (StatusBarLabelSide) {\n    /** Label is placed left side of icon. This is the default if not specified */\n    StatusBarLabelSide[StatusBarLabelSide[\"Left\"] = 0] = \"Left\";\n    /** Label is placed on right side of icon. */\n    StatusBarLabelSide[StatusBarLabelSide[\"Right\"] = 1] = \"Right\";\n})(StatusBarLabelSide || (StatusBarLabelSide = {}));\n/** AbstractStatusBarActionItem type guard.\n * @deprecated in 3.6. Use [isStatusBarActionItem]($appui-react) instead.\n * @public\n */\nexport const isAbstractStatusBarActionItem = (item) => {\n    return item.execute !== undefined; // eslint-disable-line deprecation/deprecation\n};\n/** AbstractStatusBarLabelItem type guard.\n * @deprecated in 3.6. Use [isStatusBarLabelItem]($appui-react) instead.\n * @public\n */\nexport const isAbstractStatusBarLabelItem = (item) => {\n    return item.label !== undefined && item.execute === undefined; // eslint-disable-line deprecation/deprecation\n};\n/** AbstractStatusBarCustomItem type guard.\n * @deprecated in 3.6. Use [isStatusBarCustomItem]($appui-react) instead.\n * @public\n */\nexport const isAbstractStatusBarCustomItem = (item) => {\n    return !!item.isCustom; // eslint-disable-line deprecation/deprecation\n};\n/** Helper class to create Abstract StatusBar Item definitions.\n * @deprecated in 3.6. Use [StatusBarItemUtilities]($appui-react) instead.\n * @public\n */\nclass AbstractStatusBarItemUtilities {\n}\n/** Creates a StatusBar item to perform an action */\nAbstractStatusBarItemUtilities.createActionItem = (id, section, itemPriority, icon, tooltip, execute, overrides) => ({\n    id, section, itemPriority,\n    icon, tooltip,\n    execute,\n    ...overrides,\n});\n/** Creates a StatusBar item to display a label */\nAbstractStatusBarItemUtilities.createLabelItem = (id, section, itemPriority, icon, label, labelSide = StatusBarLabelSide.Right, overrides) => ({\n    id, section, itemPriority,\n    icon, label,\n    labelSide,\n    ...overrides,\n});\nexport { AbstractStatusBarItemUtilities };\n//# sourceMappingURL=StatusBarItem.js.map",
      "start": 1693508124479,
      "end": 1693508124514,
      "sourcemaps": null
    }
  ]
}
