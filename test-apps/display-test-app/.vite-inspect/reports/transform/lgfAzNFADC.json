{
  "resolvedId": "D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/@itwin+imodels-client-management@3.1.0/node_modules/@itwin/imodels-client-management/lib/esm/operations/user/UserOperations.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n * Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n * See LICENSE.md in the project root for license terms and full copyright notice.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EntityListIteratorImpl, OperationsBase } from \"../../base/internal\";\r\nimport { PreferReturn } from \"../../base/types\";\r\nexport class UserOperations extends OperationsBase {\r\n    /** Gets Users who have ever been connected to the iModel specified by the iModel id. This method returns Users in\r\n     * their minimal representation. The returned iterator internally queries entities in pages. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-users/ Get iModel Users}\r\n     * operation from iModels API.\r\n     * @param {GetUserListParams} params parameters for this operation. See {@link GetUserListParams}.\r\n     * @returns {EntityListIterator<MinimalUser>} iterator for User list. See {@link EntityListIterator}, {@link MinimalUser}.\r\n     */\r\n    getMinimalList(params) {\r\n        return new EntityListIteratorImpl(async () => this.getEntityCollectionPage({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getUserListUrl({ iModelId: params.iModelId, urlParams: params.urlParams }),\r\n            preferReturn: PreferReturn.Minimal,\r\n            entityCollectionAccessor: (response) => response.users\r\n        }));\r\n    }\r\n    /**\r\n     * Gets Users who have ever been connected to the iModel specified by the iModel id. This method returns Users in their\r\n     * full representation. The returned iterator internally queries entities in pages. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-users/ Get iModel Users}\r\n     * operation from iModels API.\r\n     * @param {GetUserListParams} params parameters for this operation. See {@link GetUserListParams}.\r\n     * @returns {EntityListIterator<User>} iterator for User list. See {@link EntityListIterator}, {@link User}.\r\n     */\r\n    getRepresentationList(params) {\r\n        return new EntityListIteratorImpl(async () => this.getEntityCollectionPage({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getUserListUrl({ iModelId: params.iModelId, urlParams: params.urlParams }),\r\n            preferReturn: PreferReturn.Representation,\r\n            entityCollectionAccessor: (response) => response.users\r\n        }));\r\n    }\r\n    /**\r\n     * Gets a single User by its id. This method returns a User in its full representation. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-user-details/ Get iModel User}\r\n     * operation from iModels API.\r\n     * @param {GetSingleUserParams} params parameters for this operation. See {@link GetSingleUserParams}.\r\n     * @returns {Promise<User>} a User with specified id. See {@link User}.\r\n     */\r\n    async getSingle(params) {\r\n        const response = await this.sendGetRequest({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getSingleUserUrl({ iModelId: params.iModelId, userId: params.userId })\r\n        });\r\n        return response.user;\r\n    }\r\n}\r\n//# sourceMappingURL=UserOperations.js.map",
      "start": 1693508126652,
      "end": 1693508126715,
      "sourcemaps": null
    }
  ]
}
