{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/frontend/lib/esm/render/Decorations.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Rendering\n */\nimport { dispose, disposeArray } from \"@itwin/core-bentley\";\n/** A set of [[RenderGraphic]]s and [[CanvasDecoration]]s produced by [[Tool]]s and [[Decorator]]s, used to decorate the contents of a [[Viewport]].\n * @public\n * @extensions\n */\nexport class Decorations {\n    /** A view decoration created from a [[SkyBox]] rendered behind all other geometry to provide environmental context. */\n    get skyBox() { return this._skyBox; }\n    set skyBox(skyBox) {\n        dispose(this._skyBox);\n        this._skyBox = skyBox;\n    }\n    /** A view decoration drawn as the background of the view. @see [[GraphicType.ViewBackground]]. */\n    get viewBackground() { return this._viewBackground; }\n    set viewBackground(viewBackground) {\n        dispose(this._viewBackground);\n        this._viewBackground = viewBackground;\n    }\n    /** Decorations drawn as if they were part of the scene. @see [[GraphicType.Scene]]. */\n    get normal() { return this._normal; }\n    set normal(normal) {\n        disposeArray(this._normal);\n        this._normal = normal;\n    }\n    /** Decorations drawn as if they were part of the world, but ignoring the view's [[ViewFlags]]. @see [[GraphicType.WorldDecoration]]. */\n    get world() { return this._world; }\n    set world(world) {\n        disposeArray(this._world);\n        this._world = world;\n    }\n    /** Overlay decorations drawn in world coordinates. @see [[GraphicType.WorldOverlay]]. */\n    get worldOverlay() { return this._worldOverlay; }\n    set worldOverlay(worldOverlay) {\n        disposeArray(this._worldOverlay);\n        this._worldOverlay = worldOverlay;\n    }\n    /** Overlay decorations drawn in view coordinates. @see [[GraphicType.ViewOverlay]]. */\n    get viewOverlay() { return this._viewOverlay; }\n    set viewOverlay(viewOverlay) {\n        disposeArray(this._viewOverlay);\n        this._viewOverlay = viewOverlay;\n    }\n    dispose() {\n        this.skyBox = undefined;\n        this.viewBackground = undefined;\n        this.world = undefined;\n        this.worldOverlay = undefined;\n        this.viewOverlay = undefined;\n        this.normal = undefined;\n    }\n}\n//# sourceMappingURL=Decorations.js.map",
      "start": 1693508119715,
      "end": 1693508119901,
      "sourcemaps": null
    }
  ]
}
