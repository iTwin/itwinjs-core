{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/common/lib/esm/rpc/SnapshotIModelRpcInterface.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module RpcInterface\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { RpcInterface } from \"../RpcInterface\";\nimport { RpcManager } from \"../RpcManager\";\nimport { RpcOperation } from \"./core/RpcOperation\";\nconst unknownIModelId = (req) => ({ iModelId: \"undefined\", key: req.parameters[0] });\n/** The RPC interface for working with *snapshot* iModels.\n * This interface is intended for desktop and mobile products. Web products are discouraged from registering this interface.\n * @internal\n */\nclass SnapshotIModelRpcInterface extends RpcInterface {\n    /** Returns the SnapshotIModelRpcInterface client instance for the frontend. */\n    static getClient() { return RpcManager.getClientForInterface(SnapshotIModelRpcInterface); }\n    /** Returns the SnapshotIModelRpcInterface client instance for a custom RPC routing configuration. */\n    static getClientForRouting(token) { return RpcManager.getClientForInterface(SnapshotIModelRpcInterface, token); }\n    /*===========================================================================================\n      NOTE: Any add/remove/change to the methods below requires an update of the interface version.\n      NOTE: Please consult the README in this folder for the semantic versioning rules.\n    ===========================================================================================*/\n    async openFile(_filePath, _opts) { return this.forward(arguments); }\n    async openRemote(_key, _opts) { return this.forward(arguments); }\n    async close(_iModelRpcProps) { return this.forward(arguments); }\n}\n/** The immutable name of the interface. */\nSnapshotIModelRpcInterface.interfaceName = \"SnapshotIModelRpcInterface\";\n/** The version of the interface. */\nSnapshotIModelRpcInterface.interfaceVersion = \"2.0.0\";\n__decorate([\n    RpcOperation.setRoutingProps(unknownIModelId)\n], SnapshotIModelRpcInterface.prototype, \"openFile\", null);\n__decorate([\n    RpcOperation.setRoutingProps(unknownIModelId)\n], SnapshotIModelRpcInterface.prototype, \"openRemote\", null);\nexport { SnapshotIModelRpcInterface };\n//# sourceMappingURL=SnapshotIModelRpcInterface.js.map",
      "start": 1693508121046,
      "end": 1693508121114,
      "sourcemaps": null
    }
  ]
}
