{
  "resolvedId": "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/MarkupSelectTestTool.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport { EventHandled, IModelApp } from \"@itwin/core-frontend\";\r\nimport { SelectTool } from \"@itwin/core-markup\";\r\n\r\nasync function getSvgFile(uri: string): Promise<string> {\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.open(\"GET\", uri);\r\n  const loaded = new Promise((resolve) => xhr.addEventListener(\"load\", resolve));\r\n  xhr.send();\r\n  await loaded;\r\n  return xhr.responseText;\r\n}\r\n\r\nexport class MarkupSelectTestTool extends SelectTool {\r\n  public static override toolId = \"Markup.TestSelect\";\r\n  public override async onKeyTransition(wentDown: boolean, key: KeyboardEvent): Promise<EventHandled> {\r\n    if (EventHandled.Yes === await super.onKeyTransition(wentDown, key))\r\n      return EventHandled.Yes;\r\n    if (!wentDown)\r\n      return EventHandled.No;\r\n    const tools = IModelApp.tools;\r\n    switch (key.key.toLowerCase()) {\r\n      case \"a\":\r\n        await tools.run(\"Markup.Arrow\");\r\n        return EventHandled.Yes;\r\n      case \"c\":\r\n        await tools.run(\"Markup.Circle\");\r\n        return EventHandled.Yes;\r\n      case \"d\":\r\n        await tools.run(\"Markup.Distance\");\r\n        return EventHandled.Yes;\r\n      case \"e\":\r\n        await tools.run(\"Markup.Ellipse\");\r\n        return EventHandled.Yes;\r\n      case \"l\":\r\n        await tools.run(\"Markup.Line\");\r\n        return EventHandled.Yes;\r\n      case \"o\":\r\n        await tools.run(\"Markup.Cloud\");\r\n        return EventHandled.Yes;\r\n      case \"p\":\r\n        await tools.run(\"Markup.Polygon\");\r\n        return EventHandled.Yes;\r\n      case \"r\":\r\n        await tools.run(\"Markup.Rectangle\");\r\n        return EventHandled.Yes;\r\n      case \"s\":\r\n        await tools.run(\"Markup.Sketch\");\r\n        return EventHandled.Yes;\r\n      case \"t\":\r\n        await tools.run(\"Markup.Text.Place\");\r\n        return EventHandled.Yes;\r\n      case \"1\":\r\n        const symbol1 = await getSvgFile(\"Warning_sign.svg\");\r\n        if (undefined === symbol1)\r\n          return EventHandled.No;\r\n        await tools.run(\"Markup.Symbol\", symbol1);\r\n        return EventHandled.Yes;\r\n      case \"2\":\r\n        const symbol2 = await getSvgFile(\"window-area.svg\");\r\n        if (undefined === symbol2)\r\n          return EventHandled.No;\r\n        await tools.run(\"Markup.Symbol\", symbol2, true);\r\n        return EventHandled.Yes;\r\n    }\r\n    return EventHandled.No;\r\n  }\r\n}\r\n",
      "start": 1693508121207,
      "end": 1693508121256,
      "sourcemaps": null
    },
    {
      "name": "vite:esbuild",
      "result": "\"use strict\";\nimport { EventHandled, IModelApp } from \"@itwin/core-frontend\";\nimport { SelectTool } from \"@itwin/core-markup\";\nasync function getSvgFile(uri) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"GET\", uri);\n  const loaded = new Promise((resolve) => xhr.addEventListener(\"load\", resolve));\n  xhr.send();\n  await loaded;\n  return xhr.responseText;\n}\nexport class MarkupSelectTestTool extends SelectTool {\n  async onKeyTransition(wentDown, key) {\n    if (EventHandled.Yes === await super.onKeyTransition(wentDown, key))\n      return EventHandled.Yes;\n    if (!wentDown)\n      return EventHandled.No;\n    const tools = IModelApp.tools;\n    switch (key.key.toLowerCase()) {\n      case \"a\":\n        await tools.run(\"Markup.Arrow\");\n        return EventHandled.Yes;\n      case \"c\":\n        await tools.run(\"Markup.Circle\");\n        return EventHandled.Yes;\n      case \"d\":\n        await tools.run(\"Markup.Distance\");\n        return EventHandled.Yes;\n      case \"e\":\n        await tools.run(\"Markup.Ellipse\");\n        return EventHandled.Yes;\n      case \"l\":\n        await tools.run(\"Markup.Line\");\n        return EventHandled.Yes;\n      case \"o\":\n        await tools.run(\"Markup.Cloud\");\n        return EventHandled.Yes;\n      case \"p\":\n        await tools.run(\"Markup.Polygon\");\n        return EventHandled.Yes;\n      case \"r\":\n        await tools.run(\"Markup.Rectangle\");\n        return EventHandled.Yes;\n      case \"s\":\n        await tools.run(\"Markup.Sketch\");\n        return EventHandled.Yes;\n      case \"t\":\n        await tools.run(\"Markup.Text.Place\");\n        return EventHandled.Yes;\n      case \"1\":\n        const symbol1 = await getSvgFile(\"Warning_sign.svg\");\n        if (void 0 === symbol1)\n          return EventHandled.No;\n        await tools.run(\"Markup.Symbol\", symbol1);\n        return EventHandled.Yes;\n      case \"2\":\n        const symbol2 = await getSvgFile(\"window-area.svg\");\n        if (void 0 === symbol2)\n          return EventHandled.No;\n        await tools.run(\"Markup.Symbol\", symbol2, true);\n        return EventHandled.Yes;\n    }\n    return EventHandled.No;\n  }\n}\nMarkupSelectTestTool.toolId = \"Markup.TestSelect\";\n",
      "start": 1693508121256,
      "end": 1693508121398,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/MarkupSelectTestTool.ts"
        ],
        "sourcesContent": [
          "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport { EventHandled, IModelApp } from \"@itwin/core-frontend\";\r\nimport { SelectTool } from \"@itwin/core-markup\";\r\n\r\nasync function getSvgFile(uri: string): Promise<string> {\r\n  const xhr = new XMLHttpRequest();\r\n  xhr.open(\"GET\", uri);\r\n  const loaded = new Promise((resolve) => xhr.addEventListener(\"load\", resolve));\r\n  xhr.send();\r\n  await loaded;\r\n  return xhr.responseText;\r\n}\r\n\r\nexport class MarkupSelectTestTool extends SelectTool {\r\n  public static override toolId = \"Markup.TestSelect\";\r\n  public override async onKeyTransition(wentDown: boolean, key: KeyboardEvent): Promise<EventHandled> {\r\n    if (EventHandled.Yes === await super.onKeyTransition(wentDown, key))\r\n      return EventHandled.Yes;\r\n    if (!wentDown)\r\n      return EventHandled.No;\r\n    const tools = IModelApp.tools;\r\n    switch (key.key.toLowerCase()) {\r\n      case \"a\":\r\n        await tools.run(\"Markup.Arrow\");\r\n        return EventHandled.Yes;\r\n      case \"c\":\r\n        await tools.run(\"Markup.Circle\");\r\n        return EventHandled.Yes;\r\n      case \"d\":\r\n        await tools.run(\"Markup.Distance\");\r\n        return EventHandled.Yes;\r\n      case \"e\":\r\n        await tools.run(\"Markup.Ellipse\");\r\n        return EventHandled.Yes;\r\n      case \"l\":\r\n        await tools.run(\"Markup.Line\");\r\n        return EventHandled.Yes;\r\n      case \"o\":\r\n        await tools.run(\"Markup.Cloud\");\r\n        return EventHandled.Yes;\r\n      case \"p\":\r\n        await tools.run(\"Markup.Polygon\");\r\n        return EventHandled.Yes;\r\n      case \"r\":\r\n        await tools.run(\"Markup.Rectangle\");\r\n        return EventHandled.Yes;\r\n      case \"s\":\r\n        await tools.run(\"Markup.Sketch\");\r\n        return EventHandled.Yes;\r\n      case \"t\":\r\n        await tools.run(\"Markup.Text.Place\");\r\n        return EventHandled.Yes;\r\n      case \"1\":\r\n        const symbol1 = await getSvgFile(\"Warning_sign.svg\");\r\n        if (undefined === symbol1)\r\n          return EventHandled.No;\r\n        await tools.run(\"Markup.Symbol\", symbol1);\r\n        return EventHandled.Yes;\r\n      case \"2\":\r\n        const symbol2 = await getSvgFile(\"window-area.svg\");\r\n        if (undefined === symbol2)\r\n          return EventHandled.No;\r\n        await tools.run(\"Markup.Symbol\", symbol2, true);\r\n        return EventHandled.Yes;\r\n    }\r\n    return EventHandled.No;\r\n  }\r\n}\r\n"
        ],
        "mappings": ";AAKA,SAAS,cAAc,iBAAiB;AACxC,SAAS,kBAAkB;AAE3B,eAAe,WAAW,KAA8B;AACtD,QAAM,MAAM,IAAI,eAAe;AAC/B,MAAI,KAAK,OAAO,GAAG;AACnB,QAAM,SAAS,IAAI,QAAQ,CAAC,YAAY,IAAI,iBAAiB,QAAQ,OAAO,CAAC;AAC7E,MAAI,KAAK;AACT,QAAM;AACN,SAAO,IAAI;AACb;AAEO,aAAM,6BAA6B,WAAW;AAAA,EAEnD,MAAsB,gBAAgB,UAAmB,KAA2C;AAClG,QAAI,aAAa,QAAQ,MAAM,MAAM,gBAAgB,UAAU,GAAG;AAChE,aAAO,aAAa;AACtB,QAAI,CAAC;AACH,aAAO,aAAa;AACtB,UAAM,QAAQ,UAAU;AACxB,YAAQ,IAAI,IAAI,YAAY,GAAG;AAAA,MAC7B,KAAK;AACH,cAAM,MAAM,IAAI,cAAc;AAC9B,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,eAAe;AAC/B,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,iBAAiB;AACjC,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,gBAAgB;AAChC,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,aAAa;AAC7B,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,cAAc;AAC9B,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,gBAAgB;AAChC,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,kBAAkB;AAClC,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,eAAe;AAC/B,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,MAAM,IAAI,mBAAmB;AACnC,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,UAAU,MAAM,WAAW,kBAAkB;AACnD,YAAI,WAAc;AAChB,iBAAO,aAAa;AACtB,cAAM,MAAM,IAAI,iBAAiB,OAAO;AACxC,eAAO,aAAa;AAAA,MACtB,KAAK;AACH,cAAM,UAAU,MAAM,WAAW,iBAAiB;AAClD,YAAI,WAAc;AAChB,iBAAO,aAAa;AACtB,cAAM,MAAM,IAAI,iBAAiB,SAAS,IAAI;AAC9C,eAAO,aAAa;AAAA,IACxB;AACA,WAAO,aAAa;AAAA,EACtB;AACF;AAtDa,qBACY,SAAS;",
        "names": []
      }
    }
  ]
}
