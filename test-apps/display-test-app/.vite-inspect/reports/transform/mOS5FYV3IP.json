{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/frontend-devtools/lib/esm/tools/ToolTipProvider.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Tools\n */\nimport { IModelApp, Tool } from \"@itwin/core-frontend\";\nimport { parseToggle } from \"./parseToggle\";\n/** Augments tooltips with detailed information useful for debugging.\n * @internal\n */\nclass DebugToolTipProvider {\n    async augmentToolTip(hit, tooltipPromise) {\n        // discard and overwrite\n        await tooltipPromise;\n        const keys = [\"sourceId\", \"modelId\", \"subCategoryId\", \"tileId\", \"geometryClass\"];\n        let html = \"\";\n        for (const key of keys) {\n            const value = hit[key];\n            if (undefined === value)\n                continue;\n            html = `${html + key}: ${value.toString()}<br>`;\n        }\n        const div = document.createElement(\"div\");\n        div.innerHTML = html;\n        return div;\n    }\n    static setEnabled(enabled) {\n        if (undefined === enabled)\n            enabled = undefined === this._instance;\n        if (enabled) {\n            if (undefined === this._instance) {\n                this._instance = new DebugToolTipProvider();\n                IModelApp.viewManager.addToolTipProvider(this._instance);\n            }\n        }\n        else if (undefined !== this._instance) {\n            IModelApp.viewManager.dropToolTipProvider(this._instance);\n            this._instance = undefined;\n        }\n    }\n}\n/** Replaces the default tooltips displayed when mousing over elements to instead display information useful for debugging, including\n * element, model, subcategory, and tile Ids as well as geometry class.\n * @beta\n */\nclass ToggleToolTipsTool extends Tool {\n    static get minArgs() { return 0; }\n    static get maxArgs() { return 1; }\n    async run(enable) {\n        DebugToolTipProvider.setEnabled(enable);\n        return true;\n    }\n    async parseAndRun(...args) {\n        const enable = parseToggle(args[0]);\n        if (typeof enable !== \"string\")\n            await this.run(enable);\n        return true;\n    }\n}\nToggleToolTipsTool.toolId = \"ToggleToolTips\";\nexport { ToggleToolTipsTool };\n//# sourceMappingURL=ToolTipProvider.js.map",
      "start": 1693508122762,
      "end": 1693508122855,
      "sourcemaps": null
    }
  ]
}
