{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcProtocol.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module RpcInterface\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MobileRpcProtocol = void 0;\nconst core_bentley_1 = require(\"@itwin/core-bentley\");\nconst core_common_1 = require(\"@itwin/core-common\");\nconst MobileEventLoop_1 = require(\"./MobileEventLoop\");\nconst MobileIpc_1 = require(\"./MobileIpc\");\nconst MobilePush_1 = require(\"./MobilePush\");\nconst MobileRpcManager_1 = require(\"./MobileRpcManager\");\nconst MobileRpcRequest_1 = require(\"./MobileRpcRequest\");\n/** RPC interface protocol for an Mobile-based application.\n * @internal\n */\nclass MobileRpcProtocol extends core_common_1.RpcProtocol {\n    static obtainInterop() { throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Not implemented.\"); }\n    static async encodeRequest(request) {\n        const serialized = await request.protocol.serialize(request);\n        const data = serialized.parameters.data;\n        serialized.parameters.data = data.map((v) => v.byteLength);\n        return [JSON.stringify(serialized), ...data];\n    }\n    static encodeResponse(fulfillment) {\n        const data = fulfillment.result.data;\n        fulfillment.result.data = data.map((v) => v.byteLength);\n        const raw = fulfillment.rawResult;\n        fulfillment.rawResult = undefined;\n        const encoded = [JSON.stringify(fulfillment), ...data];\n        fulfillment.rawResult = raw;\n        return encoded;\n    }\n    constructor(configuration, endPoint) {\n        super(configuration);\n        this.socket = undefined;\n        this.requests = new Map();\n        this._pending = [];\n        this._capacity = Number.MAX_SAFE_INTEGER;\n        this._sendInterval = undefined;\n        this._sendIntervalHandler = () => this.trySend();\n        this.requestType = MobileRpcRequest_1.MobileRpcRequest;\n        this._partialRequest = undefined;\n        this._partialFulfillment = undefined;\n        this._partialData = [];\n        this._port = 0;\n        if (endPoint === core_common_1.RpcEndpoint.Frontend) {\n            this.initializeFrontend();\n        }\n        else if (endPoint === core_common_1.RpcEndpoint.Backend) {\n            this.initializeBackend();\n        }\n        this._ipc = new MobileIpc_1.MobileIpcTransport(this);\n        core_common_1.IpcWebSocket.transport = this._ipc;\n    }\n    initializeFrontend() {\n        if (typeof (WebSocket) === \"undefined\") {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"MobileRpcProtocol on frontend require websocket to work\");\n        }\n        if (!MobileRpcManager_1.MobileRpcConfiguration.args.port) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"MobileRpcProtocol require 'port' parameter\");\n        }\n        this._port = MobileRpcManager_1.MobileRpcConfiguration.args.port;\n        this.connect(this._port, false);\n        window._imodeljs_rpc_reconnect = (port) => {\n            this.socket.close();\n            window.location.hash = window.location.hash.replace(`port=${this._port}`, `port=${port}`);\n            this._port = port;\n            this.connect(port, true);\n        };\n        const transport = new MobilePush_1.MobilePushTransport(this);\n        this._transport = transport;\n        core_common_1.RpcPushChannel.setup(transport);\n    }\n    connect(port, reset) {\n        const socket = new WebSocket(`ws://localhost:${port}`);\n        socket.binaryType = \"arraybuffer\";\n        this.connectMessageHandler(socket);\n        this.connectOpenHandler(socket, reset);\n        this.connectErrorHandler(socket);\n        this.socket = socket;\n    }\n    connectMessageHandler(socket) {\n        socket.addEventListener(\"message\", async (event) => {\n            if (this.socket !== socket) {\n                return;\n            }\n            this.handleMessageFromBackend(event.data);\n        });\n    }\n    connectOpenHandler(socket, reset) {\n        socket.addEventListener(\"open\", (_event) => {\n            if (this.socket !== socket) {\n                return;\n            }\n            if (reset) {\n                this.reset();\n                const requests = new Map(core_common_1.RpcRequest.activeRequests);\n                requests.forEach((req) => {\n                    req.cancel();\n                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                    req.submit();\n                });\n            }\n            this.scheduleSend();\n        });\n    }\n    connectErrorHandler(socket) {\n        socket.addEventListener(\"error\", (_event) => {\n            if (this.socket !== socket) {\n                return;\n            }\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Socket error.\");\n        });\n    }\n    reset() {\n        this.requests.clear();\n        this._capacity = Number.MAX_SAFE_INTEGER;\n        if (typeof (this._sendInterval) !== \"undefined\") {\n            window.clearInterval(this._sendInterval);\n            this._sendInterval = undefined;\n        }\n        this._partialRequest = undefined;\n        this._partialFulfillment = undefined;\n        this._partialData.length = 0;\n    }\n    scheduleSend() {\n        if (!this._pending.length) {\n            return;\n        }\n        this.trySend();\n        if (this._pending.length && typeof (this._sendInterval) === \"undefined\") {\n            this._sendInterval = window.setInterval(this._sendIntervalHandler, 0);\n        }\n    }\n    trySend() {\n        if (this.socket.readyState !== WebSocket.OPEN) {\n            return;\n        }\n        while (this._capacity !== 0 && this._pending.length) {\n            --this._capacity;\n            const next = this._pending.shift();\n            for (const chunk of next) {\n                this.socket.send(chunk);\n            }\n        }\n        if (!this._pending.length && typeof (this._sendInterval) !== \"undefined\") {\n            window.clearInterval(this._sendInterval);\n            this._sendInterval = undefined;\n        }\n    }\n    handleMessageFromBackend(data) {\n        if (typeof (data) === \"string\") {\n            this.handleStringFromBackend(data);\n        }\n        else {\n            this.handleBinaryFromBackend(data);\n        }\n    }\n    handleStringFromBackend(data) {\n        if (this._partialFulfillment) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (already receiving response).\");\n        }\n        const response = JSON.parse(data);\n        this._partialFulfillment = response;\n        if (!response.result.data.length) {\n            this.notifyResponse();\n        }\n    }\n    handleBinaryFromBackend(data) {\n        const fulfillment = this._partialFulfillment;\n        if (!fulfillment) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no response received).\");\n        }\n        this._partialData.push(new Uint8Array(data));\n        if (this._partialData.length === fulfillment.result.data.length) {\n            this.notifyResponse();\n        }\n    }\n    notifyResponse() {\n        const response = this._partialFulfillment;\n        if (!response) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no response exists).\");\n        }\n        ++this._capacity;\n        this.consumePartialData(response.result);\n        this._partialFulfillment = undefined;\n        if (this._transport && this._transport.consume(response)) {\n            return;\n        }\n        if (this._ipc.consumeResponse(response)) {\n            return;\n        }\n        const request = this.requests.get(response.id);\n        this.requests.delete(response.id);\n        request.notifyResponse(response);\n    }\n    consumePartialData(value) {\n        for (let i = 0, l = value.data.length; i !== l; ++i) {\n            value.data[i] = this._partialData[i];\n        }\n        this._partialData.length = 0;\n    }\n    initializeBackend() {\n        const mobilegateway = MobileRpcProtocol.obtainInterop();\n        if (mobilegateway === undefined || mobilegateway == null) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"MobileRpcProtocol on backend require native bridge to be setup\");\n        }\n        mobilegateway.handler = (payload, connectionId) => this.handleMessageFromFrontend(payload, connectionId);\n        core_common_1.RpcPushConnection.for = (channel, client) => new MobilePush_1.MobilePushConnection(channel, client, this);\n        core_common_1.RpcPushChannel.enabled = true;\n    }\n    handleMessageFromFrontend(data, connectionId) {\n        if (typeof (data) === \"string\") {\n            this.handleStringFromFrontend(data, connectionId);\n        }\n        else {\n            this.handleBinaryFromFrontend(data, connectionId);\n        }\n    }\n    handleStringFromFrontend(data, connection) {\n        if (this._partialRequest) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (already receiving request).\");\n        }\n        const request = JSON.parse(data);\n        this._partialRequest = request;\n        if (!request.parameters.data.length) {\n            this.notifyRequest(connection); // eslint-disable-line @typescript-eslint/no-floating-promises\n        }\n    }\n    handleBinaryFromFrontend(data, connection) {\n        const request = this._partialRequest;\n        if (!request) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no request received).\");\n        }\n        this._partialData.push(new Uint8Array(data));\n        if (this._partialData.length === request.parameters.data.length) {\n            this.notifyRequest(connection); // eslint-disable-line @typescript-eslint/no-floating-promises\n        }\n    }\n    async notifyRequest(connection) {\n        const request = this._partialRequest;\n        if (!request) {\n            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no request exists).\");\n        }\n        this.consumePartialData(request.parameters);\n        this._partialRequest = undefined;\n        if (this._ipc.consumeRequest(request)) {\n            return;\n        }\n        MobileEventLoop_1.MobileEventLoop.addTask();\n        const fulfillment = await this.fulfill(request);\n        MobileEventLoop_1.MobileEventLoop.removeTask();\n        const response = MobileRpcProtocol.encodeResponse(fulfillment);\n        this.sendToFrontend(response, connection);\n    }\n    sendToBackend(message) {\n        this._pending.push(message);\n        this.scheduleSend();\n    }\n    sendToFrontend(message, connection) {\n        const mobilegateway = MobileRpcProtocol.obtainInterop();\n        for (const chunk of message) {\n            if (typeof (chunk) === \"string\") {\n                mobilegateway.sendString(chunk, connection || mobilegateway.connectionId);\n            }\n            else {\n                mobilegateway.sendBinary(chunk, connection || mobilegateway.connectionId);\n            }\n        }\n    }\n}\nexports.MobileRpcProtocol = MobileRpcProtocol;\n//# sourceMappingURL=MobileRpcProtocol.js.map",
      "start": 1693508122527,
      "end": 1693508122643,
      "sourcemaps": null
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as MobileRpcProtocol_1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcProtocol.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/hub2023A/itwinjs-core/core/bentley/lib/esm/core-bentley.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/hub2023A/itwinjs-core/core/common/lib/esm/core-common.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileEventLoop.js?commonjs-proxy\";\nimport { __require as require$$3 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileIpc.js?commonjs-wrapped\";\nimport { __require as require$$4 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobilePush.js?commonjs-wrapped\";\nimport { __require as require$$5 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcManager.js?commonjs-wrapped\";\nimport { __require as require$$6 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcRequest.js?commonjs-wrapped\";\n\nvar hasRequiredMobileRpcProtocol;\n\nfunction requireMobileRpcProtocol () {\n\tif (hasRequiredMobileRpcProtocol) return MobileRpcProtocol_1;\n\thasRequiredMobileRpcProtocol = 1;\n\t\"use strict\";\n\t/*---------------------------------------------------------------------------------------------\n\t* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n\t* See LICENSE.md in the project root for license terms and full copyright notice.\n\t*--------------------------------------------------------------------------------------------*/\n\t/** @packageDocumentation\n\t * @module RpcInterface\n\t */\n\tObject.defineProperty(MobileRpcProtocol_1, \"__esModule\", { value: true });\n\tMobileRpcProtocol_1.MobileRpcProtocol = void 0;\n\tconst core_bentley_1 = require$$0;\n\tconst core_common_1 = require$$1;\n\tconst MobileEventLoop_1 = require$$2;\n\tconst MobileIpc_1 = require$$3();\n\tconst MobilePush_1 = require$$4();\n\tconst MobileRpcManager_1 = require$$5();\n\tconst MobileRpcRequest_1 = require$$6();\n\t/** RPC interface protocol for an Mobile-based application.\n\t * @internal\n\t */\n\tclass MobileRpcProtocol extends core_common_1.RpcProtocol {\n\t    static obtainInterop() { throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Not implemented.\"); }\n\t    static async encodeRequest(request) {\n\t        const serialized = await request.protocol.serialize(request);\n\t        const data = serialized.parameters.data;\n\t        serialized.parameters.data = data.map((v) => v.byteLength);\n\t        return [JSON.stringify(serialized), ...data];\n\t    }\n\t    static encodeResponse(fulfillment) {\n\t        const data = fulfillment.result.data;\n\t        fulfillment.result.data = data.map((v) => v.byteLength);\n\t        const raw = fulfillment.rawResult;\n\t        fulfillment.rawResult = undefined;\n\t        const encoded = [JSON.stringify(fulfillment), ...data];\n\t        fulfillment.rawResult = raw;\n\t        return encoded;\n\t    }\n\t    constructor(configuration, endPoint) {\n\t        super(configuration);\n\t        this.socket = undefined;\n\t        this.requests = new Map();\n\t        this._pending = [];\n\t        this._capacity = Number.MAX_SAFE_INTEGER;\n\t        this._sendInterval = undefined;\n\t        this._sendIntervalHandler = () => this.trySend();\n\t        this.requestType = MobileRpcRequest_1.MobileRpcRequest;\n\t        this._partialRequest = undefined;\n\t        this._partialFulfillment = undefined;\n\t        this._partialData = [];\n\t        this._port = 0;\n\t        if (endPoint === core_common_1.RpcEndpoint.Frontend) {\n\t            this.initializeFrontend();\n\t        }\n\t        else if (endPoint === core_common_1.RpcEndpoint.Backend) {\n\t            this.initializeBackend();\n\t        }\n\t        this._ipc = new MobileIpc_1.MobileIpcTransport(this);\n\t        core_common_1.IpcWebSocket.transport = this._ipc;\n\t    }\n\t    initializeFrontend() {\n\t        if (typeof (WebSocket) === \"undefined\") {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"MobileRpcProtocol on frontend require websocket to work\");\n\t        }\n\t        if (!MobileRpcManager_1.MobileRpcConfiguration.args.port) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"MobileRpcProtocol require 'port' parameter\");\n\t        }\n\t        this._port = MobileRpcManager_1.MobileRpcConfiguration.args.port;\n\t        this.connect(this._port, false);\n\t        window._imodeljs_rpc_reconnect = (port) => {\n\t            this.socket.close();\n\t            window.location.hash = window.location.hash.replace(`port=${this._port}`, `port=${port}`);\n\t            this._port = port;\n\t            this.connect(port, true);\n\t        };\n\t        const transport = new MobilePush_1.MobilePushTransport(this);\n\t        this._transport = transport;\n\t        core_common_1.RpcPushChannel.setup(transport);\n\t    }\n\t    connect(port, reset) {\n\t        const socket = new WebSocket(`ws://localhost:${port}`);\n\t        socket.binaryType = \"arraybuffer\";\n\t        this.connectMessageHandler(socket);\n\t        this.connectOpenHandler(socket, reset);\n\t        this.connectErrorHandler(socket);\n\t        this.socket = socket;\n\t    }\n\t    connectMessageHandler(socket) {\n\t        socket.addEventListener(\"message\", async (event) => {\n\t            if (this.socket !== socket) {\n\t                return;\n\t            }\n\t            this.handleMessageFromBackend(event.data);\n\t        });\n\t    }\n\t    connectOpenHandler(socket, reset) {\n\t        socket.addEventListener(\"open\", (_event) => {\n\t            if (this.socket !== socket) {\n\t                return;\n\t            }\n\t            if (reset) {\n\t                this.reset();\n\t                const requests = new Map(core_common_1.RpcRequest.activeRequests);\n\t                requests.forEach((req) => {\n\t                    req.cancel();\n\t                    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\t                    req.submit();\n\t                });\n\t            }\n\t            this.scheduleSend();\n\t        });\n\t    }\n\t    connectErrorHandler(socket) {\n\t        socket.addEventListener(\"error\", (_event) => {\n\t            if (this.socket !== socket) {\n\t                return;\n\t            }\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Socket error.\");\n\t        });\n\t    }\n\t    reset() {\n\t        this.requests.clear();\n\t        this._capacity = Number.MAX_SAFE_INTEGER;\n\t        if (typeof (this._sendInterval) !== \"undefined\") {\n\t            window.clearInterval(this._sendInterval);\n\t            this._sendInterval = undefined;\n\t        }\n\t        this._partialRequest = undefined;\n\t        this._partialFulfillment = undefined;\n\t        this._partialData.length = 0;\n\t    }\n\t    scheduleSend() {\n\t        if (!this._pending.length) {\n\t            return;\n\t        }\n\t        this.trySend();\n\t        if (this._pending.length && typeof (this._sendInterval) === \"undefined\") {\n\t            this._sendInterval = window.setInterval(this._sendIntervalHandler, 0);\n\t        }\n\t    }\n\t    trySend() {\n\t        if (this.socket.readyState !== WebSocket.OPEN) {\n\t            return;\n\t        }\n\t        while (this._capacity !== 0 && this._pending.length) {\n\t            --this._capacity;\n\t            const next = this._pending.shift();\n\t            for (const chunk of next) {\n\t                this.socket.send(chunk);\n\t            }\n\t        }\n\t        if (!this._pending.length && typeof (this._sendInterval) !== \"undefined\") {\n\t            window.clearInterval(this._sendInterval);\n\t            this._sendInterval = undefined;\n\t        }\n\t    }\n\t    handleMessageFromBackend(data) {\n\t        if (typeof (data) === \"string\") {\n\t            this.handleStringFromBackend(data);\n\t        }\n\t        else {\n\t            this.handleBinaryFromBackend(data);\n\t        }\n\t    }\n\t    handleStringFromBackend(data) {\n\t        if (this._partialFulfillment) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (already receiving response).\");\n\t        }\n\t        const response = JSON.parse(data);\n\t        this._partialFulfillment = response;\n\t        if (!response.result.data.length) {\n\t            this.notifyResponse();\n\t        }\n\t    }\n\t    handleBinaryFromBackend(data) {\n\t        const fulfillment = this._partialFulfillment;\n\t        if (!fulfillment) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no response received).\");\n\t        }\n\t        this._partialData.push(new Uint8Array(data));\n\t        if (this._partialData.length === fulfillment.result.data.length) {\n\t            this.notifyResponse();\n\t        }\n\t    }\n\t    notifyResponse() {\n\t        const response = this._partialFulfillment;\n\t        if (!response) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no response exists).\");\n\t        }\n\t        ++this._capacity;\n\t        this.consumePartialData(response.result);\n\t        this._partialFulfillment = undefined;\n\t        if (this._transport && this._transport.consume(response)) {\n\t            return;\n\t        }\n\t        if (this._ipc.consumeResponse(response)) {\n\t            return;\n\t        }\n\t        const request = this.requests.get(response.id);\n\t        this.requests.delete(response.id);\n\t        request.notifyResponse(response);\n\t    }\n\t    consumePartialData(value) {\n\t        for (let i = 0, l = value.data.length; i !== l; ++i) {\n\t            value.data[i] = this._partialData[i];\n\t        }\n\t        this._partialData.length = 0;\n\t    }\n\t    initializeBackend() {\n\t        const mobilegateway = MobileRpcProtocol.obtainInterop();\n\t        if (mobilegateway === undefined || mobilegateway == null) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"MobileRpcProtocol on backend require native bridge to be setup\");\n\t        }\n\t        mobilegateway.handler = (payload, connectionId) => this.handleMessageFromFrontend(payload, connectionId);\n\t        core_common_1.RpcPushConnection.for = (channel, client) => new MobilePush_1.MobilePushConnection(channel, client, this);\n\t        core_common_1.RpcPushChannel.enabled = true;\n\t    }\n\t    handleMessageFromFrontend(data, connectionId) {\n\t        if (typeof (data) === \"string\") {\n\t            this.handleStringFromFrontend(data, connectionId);\n\t        }\n\t        else {\n\t            this.handleBinaryFromFrontend(data, connectionId);\n\t        }\n\t    }\n\t    handleStringFromFrontend(data, connection) {\n\t        if (this._partialRequest) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (already receiving request).\");\n\t        }\n\t        const request = JSON.parse(data);\n\t        this._partialRequest = request;\n\t        if (!request.parameters.data.length) {\n\t            this.notifyRequest(connection); // eslint-disable-line @typescript-eslint/no-floating-promises\n\t        }\n\t    }\n\t    handleBinaryFromFrontend(data, connection) {\n\t        const request = this._partialRequest;\n\t        if (!request) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no request received).\");\n\t        }\n\t        this._partialData.push(new Uint8Array(data));\n\t        if (this._partialData.length === request.parameters.data.length) {\n\t            this.notifyRequest(connection); // eslint-disable-line @typescript-eslint/no-floating-promises\n\t        }\n\t    }\n\t    async notifyRequest(connection) {\n\t        const request = this._partialRequest;\n\t        if (!request) {\n\t            throw new core_common_1.IModelError(core_bentley_1.BentleyStatus.ERROR, \"Invalid state (no request exists).\");\n\t        }\n\t        this.consumePartialData(request.parameters);\n\t        this._partialRequest = undefined;\n\t        if (this._ipc.consumeRequest(request)) {\n\t            return;\n\t        }\n\t        MobileEventLoop_1.MobileEventLoop.addTask();\n\t        const fulfillment = await this.fulfill(request);\n\t        MobileEventLoop_1.MobileEventLoop.removeTask();\n\t        const response = MobileRpcProtocol.encodeResponse(fulfillment);\n\t        this.sendToFrontend(response, connection);\n\t    }\n\t    sendToBackend(message) {\n\t        this._pending.push(message);\n\t        this.scheduleSend();\n\t    }\n\t    sendToFrontend(message, connection) {\n\t        const mobilegateway = MobileRpcProtocol.obtainInterop();\n\t        for (const chunk of message) {\n\t            if (typeof (chunk) === \"string\") {\n\t                mobilegateway.sendString(chunk, connection || mobilegateway.connectionId);\n\t            }\n\t            else {\n\t                mobilegateway.sendBinary(chunk, connection || mobilegateway.connectionId);\n\t            }\n\t        }\n\t    }\n\t}\n\tMobileRpcProtocol_1.MobileRpcProtocol = MobileRpcProtocol;\n\t//# sourceMappingURL=MobileRpcProtocol.js.map\n\treturn MobileRpcProtocol_1;\n}\n\nexport { requireMobileRpcProtocol as __require };",
      "start": 1693508122643,
      "end": 1693508125148,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    }
  ]
}
