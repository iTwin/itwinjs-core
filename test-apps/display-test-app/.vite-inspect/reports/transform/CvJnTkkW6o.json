{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/frontend/lib/esm/tile/map/MapLayerTileTreeReference.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Tiles\n */\nimport { assert } from \"@itwin/core-bentley\";\nimport { ImageMapLayerSettings, ModelMapLayerSettings } from \"@itwin/core-common\";\nimport { IModelApp } from \"../../IModelApp\";\nimport { createModelMapLayerTileTreeReference, TileTreeReference } from \"../internal\";\n/** @internal  */\nexport class MapLayerTileTreeReference extends TileTreeReference {\n    constructor(_layerSettings, _layerIndex, iModel) {\n        super();\n        this._layerSettings = _layerSettings;\n        this._layerIndex = _layerIndex;\n        this.iModel = iModel;\n    }\n    get _transparency() { return this._layerSettings.transparency ? this._layerSettings.transparency : undefined; }\n    get isOpaque() {\n        return this._layerSettings.visible && (!this._layerSettings.allSubLayersInvisible) && !this._layerSettings.transparentBackground && 0 === this._layerSettings.transparency;\n    }\n    get layerName() { return this._layerSettings.name; }\n    get imageryProvider() { return undefined; }\n    set layerSettings(layerSettings) { this._layerSettings = layerSettings; }\n    get layerSettings() { return this._layerSettings; }\n    get layerIndex() { return this._layerIndex; }\n    get transparency() { return this._transparency; }\n    async getToolTip(hit) {\n        const tree = this.treeOwner.tileTree;\n        if (undefined === tree || hit.iModel !== tree.iModel || tree.modelId !== hit.sourceId)\n            return undefined;\n        const strings = [];\n        strings.push(`Map Layer: ${this._layerSettings.name}`);\n        const div = document.createElement(\"div\");\n        div.innerHTML = strings.join(\"<br>\");\n        return div;\n    }\n}\n/** @internal  */\nexport function createMapLayerTreeReference(layerSettings, layerIndex, iModel) {\n    if (layerSettings instanceof ModelMapLayerSettings) {\n        return createModelMapLayerTileTreeReference(layerSettings, layerIndex, iModel);\n    }\n    else if (layerSettings instanceof ImageMapLayerSettings)\n        return IModelApp.mapLayerFormatRegistry.createImageryMapLayerTree(layerSettings, layerIndex, iModel);\n    else {\n        assert(false);\n        return undefined;\n    }\n}\n//# sourceMappingURL=MapLayerTileTreeReference.js.map",
      "start": 1693508121977,
      "end": 1693508122075,
      "sourcemaps": null
    }
  ]
}
