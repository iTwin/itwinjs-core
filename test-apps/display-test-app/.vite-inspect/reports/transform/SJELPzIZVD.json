{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/bentley/lib/esm/partitionArray.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\n/** @packageDocumentation\n * @module Collections\n */\n/** Partitions an array in-place according to some criterion, such that elements that fulfill the criterion are grouped in the lower\n * portion of the array, and those that fail to fulfill the criterion are grouped in the upper portion of the array.\n * @param array The array to be partitioned.\n * @param criterion A function invoked for each element of the array, returning whether the element fulfills the criterion.\n * @returns The index of the upper partition, i.e., of the first element that fails the criterion. If all elements fulfill the criterion, this is the length of the array.\n * @note The relative ordering of elements within each partition is unspecified.\n * Example:\n * ```ts\n * function isEven(n: number) { return 0 === n % 2; }\n * const list = [ 1, 2, 3, 4, 5 ];\n * const firstOddIndex = partitionArray(list, isEven); // firstOddIndex = 2\n * // 2 and 4 now appear before 1, 3, and 5 in the list; their ordering is otherwise unspecified.\n * for (let i = 0; i < list.length; i++)\n *   assert(isEven(list[i]) === i < firstOddIndex);\n * ```\n * @public\n */\nexport function partitionArray(array, criterion) {\n    let index = 0;\n    let partition = array.length;\n    while (index < partition) {\n        const elem = array[index];\n        if (criterion(elem)) {\n            ++index;\n        }\n        else {\n            array[index] = array[--partition];\n            array[partition] = elem;\n        }\n    }\n    return partition;\n}\n//# sourceMappingURL=partitionArray.js.map",
      "start": 1693508120605,
      "end": 1693508120675,
      "sourcemaps": null
    }
  ]
}
