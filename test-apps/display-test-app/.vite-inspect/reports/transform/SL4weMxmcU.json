{
  "resolvedId": "D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/@itwin+imodels-client-management@3.1.0/node_modules/@itwin/imodels-client-management/lib/esm/operations/named-version/NamedVersionOperations.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n * Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n * See LICENSE.md in the project root for license terms and full copyright notice.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { EntityListIteratorImpl, OperationsBase } from \"../../base/internal\";\r\nimport { PreferReturn } from \"../../base/types\";\r\nimport { getUser } from \"../SharedFunctions\";\r\nexport class NamedVersionOperations extends OperationsBase {\r\n    constructor(options, _iModelsClient) {\r\n        super(options);\r\n        this._iModelsClient = _iModelsClient;\r\n    }\r\n    /**\r\n     * Gets Named Versions of a specific iModel. This method returns Named Versions in their minimal representation. The\r\n     * returned iterator internally queries entities in pages. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-named-versions/ Get iModel Named Versions}\r\n     * operation from iModels API.\r\n     * @param {GetNamedVersionListParams} params parameters for this operation. See {@link GetNamedVersionListParams}.\r\n     * @returns {EntityListIterator<MinimalNamedVersion>} iterator for Named Version list. See {@link EntityListIterator},\r\n     * {@link MinimalNamedVersion}.\r\n     */\r\n    getMinimalList(params) {\r\n        return new EntityListIteratorImpl(async () => this.getEntityCollectionPage({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getNamedVersionListUrl({ iModelId: params.iModelId, urlParams: params.urlParams }),\r\n            preferReturn: PreferReturn.Minimal,\r\n            entityCollectionAccessor: (response) => response.namedVersions\r\n        }));\r\n    }\r\n    /**\r\n     * Gets Named Versions of a specific iModel. This method returns Named Versions in their full representation. The\r\n     * returned iterator internally queries entities in pages. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-named-versions/\r\n     * Get iModel Named Versions} operation from iModels API.\r\n     * @param {GetNamedVersionListParams} params parameters for this operation. See {@link GetNamedVersionListParams}.\r\n     * @returns {EntityListIterator<NamedVersion>} iterator for Named Version list. See {@link EntityListIterator},\r\n     * {@link NamedVersion}.\r\n     */\r\n    getRepresentationList(params) {\r\n        const entityCollectionAccessor = (response) => {\r\n            const namedVersions = response.namedVersions;\r\n            const mappedNamedVersions = namedVersions.map((namedVersion) => this.appendRelatedEntityCallbacks(params.authorization, namedVersion));\r\n            return mappedNamedVersions;\r\n        };\r\n        return new EntityListIteratorImpl(async () => this.getEntityCollectionPage({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getNamedVersionListUrl({ iModelId: params.iModelId, urlParams: params.urlParams }),\r\n            preferReturn: PreferReturn.Representation,\r\n            entityCollectionAccessor\r\n        }));\r\n    }\r\n    /**\r\n     * Gets a single Named Version by its id. This method returns a Named Version in its full representation. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/get-imodel-named-version-details/\r\n     * Get iModel Named Version} operation from iModels API.\r\n     * @param {GetSingleNamedVersionParams} params parameters for this operation. See {@link GetSingleNamedVersionParams}.\r\n     * @returns {Promise<NamedVersion>} a Named Version with specified id. See {@link NamedVersion}.\r\n     */\r\n    async getSingle(params) {\r\n        const response = await this.sendGetRequest({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getSingleNamedVersionUrl({ iModelId: params.iModelId, namedVersionId: params.namedVersionId })\r\n        });\r\n        const result = this.appendRelatedEntityCallbacks(params.authorization, response.namedVersion);\r\n        return result;\r\n    }\r\n    /**\r\n     * Creates a Named Version with specified properties. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/create-imodel-named-version/\r\n     * Create iModel Named Version} operation from iModels API.\r\n     * @param {CreateNamedVersionParams} params parameters for this operation. See {@link CreateNamedVersionParams}.\r\n     * @returns {Promise<NamedVersion>} newly created Named Version. See {@link NamedVersion}.\r\n     */\r\n    async create(params) {\r\n        const createNamedVersionBody = this.getCreateNamedVersionRequestBody(params.namedVersionProperties);\r\n        const createNamedVersionResponse = await this.sendPostRequest({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getNamedVersionListUrl({ iModelId: params.iModelId }),\r\n            body: createNamedVersionBody\r\n        });\r\n        const result = this.appendRelatedEntityCallbacks(params.authorization, createNamedVersionResponse.namedVersion);\r\n        return result;\r\n    }\r\n    /**\r\n     * Updates Named Version with specified properties. Wraps the\r\n     * {@link https://developer.bentley.com/apis/imodels-v2/operations/update-imodel-named-version/\r\n     * Update iModel Named Version} operation from iModels API.\r\n     * @param {UpdateNamedVersionParams} params parameters for this operation. See {@link UpdateNamedVersionParams}.\r\n     * @returns {Promise<NamedVersion>} updated Named Version. See {@link NamedVersion}.\r\n     */\r\n    async update(params) {\r\n        const updateNamedVersionBody = this.getUpdateNamedVersionRequestBody(params.namedVersionProperties);\r\n        const updateNamedVersionResponse = await this.sendPatchRequest({\r\n            authorization: params.authorization,\r\n            url: this._options.urlFormatter.getSingleNamedVersionUrl({ iModelId: params.iModelId, namedVersionId: params.namedVersionId }),\r\n            body: updateNamedVersionBody\r\n        });\r\n        const result = this.appendRelatedEntityCallbacks(params.authorization, updateNamedVersionResponse.namedVersion);\r\n        return result;\r\n    }\r\n    getCreateNamedVersionRequestBody(namedVersionProperties) {\r\n        return {\r\n            name: namedVersionProperties.name,\r\n            description: namedVersionProperties.description,\r\n            changesetId: namedVersionProperties.changesetId\r\n        };\r\n    }\r\n    getUpdateNamedVersionRequestBody(namedVersionProperties) {\r\n        return {\r\n            name: namedVersionProperties.name,\r\n            description: namedVersionProperties.description,\r\n            state: namedVersionProperties.state\r\n        };\r\n    }\r\n    appendRelatedEntityCallbacks(authorization, namedVersion) {\r\n        const getCreator = async () => {\r\n            var _a;\r\n            return getUser(authorization, this._iModelsClient.users, this._options.urlFormatter, (_a = namedVersion._links.creator) === null || _a === void 0 ? void 0 : _a.href);\r\n        };\r\n        const getChangeset = async () => { var _a; return this.getChangeset(authorization, (_a = namedVersion._links.changeset) === null || _a === void 0 ? void 0 : _a.href); };\r\n        const result = {\r\n            ...namedVersion,\r\n            getCreator,\r\n            getChangeset\r\n        };\r\n        return result;\r\n    }\r\n    async getChangeset(authorization, changesetLink) {\r\n        if (!changesetLink)\r\n            return undefined;\r\n        const entityIds = this._options.urlFormatter.parseChangesetUrl(changesetLink);\r\n        return this._iModelsClient.changesets.getSingle({\r\n            authorization,\r\n            ...entityIds\r\n        });\r\n    }\r\n}\r\n//# sourceMappingURL=NamedVersionOperations.js.map",
      "start": 1693508126648,
      "end": 1693508126709,
      "sourcemaps": null
    }
  ]
}
