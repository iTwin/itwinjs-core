{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcManager.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MobileRpcManager = exports.MobileRpcConfiguration = exports.RpcMobilePlatform = void 0;\nconst core_common_1 = require(\"@itwin/core-common\");\nconst MobileRpcProtocol_1 = require(\"./MobileRpcProtocol\");\n/* eslint-disable deprecation/deprecation */\n/** RPC supported mobile platforms.\n * @internal\n */\nvar RpcMobilePlatform;\n(function (RpcMobilePlatform) {\n    RpcMobilePlatform[RpcMobilePlatform[\"Unknown\"] = 0] = \"Unknown\";\n    RpcMobilePlatform[RpcMobilePlatform[\"Android\"] = 1] = \"Android\";\n    RpcMobilePlatform[RpcMobilePlatform[\"iOS\"] = 2] = \"iOS\";\n})(RpcMobilePlatform = exports.RpcMobilePlatform || (exports.RpcMobilePlatform = {}));\n/** Holds configuration for the RpcInterfaces used by the application.\n * @internal\n */\nclass MobileRpcConfiguration extends core_common_1.RpcConfiguration {\n    static getArgs() {\n        if (typeof window !== \"object\" || typeof window.location !== \"object\" || typeof window.location.hash !== \"string\") {\n            return Object.freeze({});\n        }\n        const queryArgs = {};\n        try {\n            const matches = window.location.hash.match(/([^#=&]+)(=([^&]*))?/g);\n            if (matches) {\n                for (const comp of matches) {\n                    const array = comp.split(\"=\");\n                    if (array.length === 2) {\n                        const key = decodeURIComponent(array[0]);\n                        const val = decodeURIComponent(array[1]);\n                        queryArgs[key] = val;\n                    }\n                }\n            }\n        }\n        catch { }\n        return Object.freeze(queryArgs);\n    }\n    static getMobilePlatform() {\n        if (!MobileRpcConfiguration.args.platform)\n            return RpcMobilePlatform.Unknown;\n        const win = window;\n        if (/android/i.test(MobileRpcConfiguration.args.platform)) {\n            return RpcMobilePlatform.Android;\n        }\n        if (/iOS|iPadOS/i.test(MobileRpcConfiguration.args.platform) && !win.MSStream) {\n            return RpcMobilePlatform.iOS;\n        }\n        return RpcMobilePlatform.Unknown;\n    }\n    /** Read the mobile rpc args */\n    static get args() {\n        if (!this._args) {\n            this._args = MobileRpcConfiguration.getArgs();\n        }\n        return this._args;\n    }\n    /** Return type of mobile platform using browser userAgent */\n    static get platform() { return MobileRpcConfiguration.getMobilePlatform(); }\n}\n/** @internal */\nMobileRpcConfiguration.setup = {\n    obtainPort: () => 0,\n    checkPlatform: () => typeof (process) !== \"undefined\" && process.platform === \"ios\",\n};\nexports.MobileRpcConfiguration = MobileRpcConfiguration;\n/** Coordinates usage of RPC interfaces for an Mobile-based application.\n * @internal\n */\nclass MobileRpcManager {\n    /** @internal */\n    static async ready() {\n        return new Promise(async (resolve) => {\n            while (!global.__iTwinJsRpcReady) {\n                await new Promise((r) => setTimeout(r));\n            }\n            resolve();\n        });\n    }\n    static performInitialization(interfaces, endPoint) {\n        const config = class extends MobileRpcConfiguration {\n            constructor() {\n                super(...arguments);\n                this.interfaces = () => interfaces;\n                this.protocol = new MobileRpcProtocol_1.MobileRpcProtocol(this, endPoint);\n            }\n        };\n        for (const def of interfaces) {\n            core_common_1.RpcConfiguration.assign(def, () => config);\n        }\n        const instance = core_common_1.RpcConfiguration.obtain(config);\n        core_common_1.RpcConfiguration.initializeInterfaces(instance);\n        return instance;\n    }\n    /** Initializes MobileRpcManager for the frontend of an application. */\n    static initializeClient(interfaces) {\n        return MobileRpcManager.performInitialization(interfaces, core_common_1.RpcEndpoint.Frontend);\n    }\n    /** Initializes MobileRpcManager for the backend of an application. */\n    static initializeImpl(interfaces) {\n        return MobileRpcManager.performInitialization(interfaces, core_common_1.RpcEndpoint.Backend);\n    }\n}\nexports.MobileRpcManager = MobileRpcManager;\n//# sourceMappingURL=MobileRpcManager.js.map",
      "start": 1693508122517,
      "end": 1693508122639,
      "sourcemaps": null
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as MobileRpcManager_1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcManager.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/hub2023A/itwinjs-core/core/common/lib/esm/core-common.js?commonjs-proxy\";\nimport { __require as require$$1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/mobile/lib/cjs/common/MobileRpcProtocol.js?commonjs-wrapped\";\n\nvar hasRequiredMobileRpcManager;\n\nfunction requireMobileRpcManager () {\n\tif (hasRequiredMobileRpcManager) return MobileRpcManager_1;\n\thasRequiredMobileRpcManager = 1;\n\t(function (exports) {\n\t\t\"use strict\";\n\t\t/*---------------------------------------------------------------------------------------------\n\t\t* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n\t\t* See LICENSE.md in the project root for license terms and full copyright notice.\n\t\t*--------------------------------------------------------------------------------------------*/\n\t\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\t\texports.MobileRpcManager = exports.MobileRpcConfiguration = exports.RpcMobilePlatform = void 0;\n\t\tconst core_common_1 = require$$0;\n\t\tconst MobileRpcProtocol_1 = require$$1();\n\t\t/* eslint-disable deprecation/deprecation */\n\t\t/** RPC supported mobile platforms.\n\t\t * @internal\n\t\t */\n\t\tvar RpcMobilePlatform;\n\t\t(function (RpcMobilePlatform) {\n\t\t    RpcMobilePlatform[RpcMobilePlatform[\"Unknown\"] = 0] = \"Unknown\";\n\t\t    RpcMobilePlatform[RpcMobilePlatform[\"Android\"] = 1] = \"Android\";\n\t\t    RpcMobilePlatform[RpcMobilePlatform[\"iOS\"] = 2] = \"iOS\";\n\t\t})(RpcMobilePlatform = exports.RpcMobilePlatform || (exports.RpcMobilePlatform = {}));\n\t\t/** Holds configuration for the RpcInterfaces used by the application.\n\t\t * @internal\n\t\t */\n\t\tclass MobileRpcConfiguration extends core_common_1.RpcConfiguration {\n\t\t    static getArgs() {\n\t\t        if (typeof window !== \"object\" || typeof window.location !== \"object\" || typeof window.location.hash !== \"string\") {\n\t\t            return Object.freeze({});\n\t\t        }\n\t\t        const queryArgs = {};\n\t\t        try {\n\t\t            const matches = window.location.hash.match(/([^#=&]+)(=([^&]*))?/g);\n\t\t            if (matches) {\n\t\t                for (const comp of matches) {\n\t\t                    const array = comp.split(\"=\");\n\t\t                    if (array.length === 2) {\n\t\t                        const key = decodeURIComponent(array[0]);\n\t\t                        const val = decodeURIComponent(array[1]);\n\t\t                        queryArgs[key] = val;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        catch { }\n\t\t        return Object.freeze(queryArgs);\n\t\t    }\n\t\t    static getMobilePlatform() {\n\t\t        if (!MobileRpcConfiguration.args.platform)\n\t\t            return RpcMobilePlatform.Unknown;\n\t\t        const win = window;\n\t\t        if (/android/i.test(MobileRpcConfiguration.args.platform)) {\n\t\t            return RpcMobilePlatform.Android;\n\t\t        }\n\t\t        if (/iOS|iPadOS/i.test(MobileRpcConfiguration.args.platform) && !win.MSStream) {\n\t\t            return RpcMobilePlatform.iOS;\n\t\t        }\n\t\t        return RpcMobilePlatform.Unknown;\n\t\t    }\n\t\t    /** Read the mobile rpc args */\n\t\t    static get args() {\n\t\t        if (!this._args) {\n\t\t            this._args = MobileRpcConfiguration.getArgs();\n\t\t        }\n\t\t        return this._args;\n\t\t    }\n\t\t    /** Return type of mobile platform using browser userAgent */\n\t\t    static get platform() { return MobileRpcConfiguration.getMobilePlatform(); }\n\t\t}\n\t\t/** @internal */\n\t\tMobileRpcConfiguration.setup = {\n\t\t    obtainPort: () => 0,\n\t\t    checkPlatform: () => typeof (process) !== \"undefined\" && process.platform === \"ios\",\n\t\t};\n\t\texports.MobileRpcConfiguration = MobileRpcConfiguration;\n\t\t/** Coordinates usage of RPC interfaces for an Mobile-based application.\n\t\t * @internal\n\t\t */\n\t\tclass MobileRpcManager {\n\t\t    /** @internal */\n\t\t    static async ready() {\n\t\t        return new Promise(async (resolve) => {\n\t\t            while (!commonjsHelpers.commonjsGlobal.__iTwinJsRpcReady) {\n\t\t                await new Promise((r) => setTimeout(r));\n\t\t            }\n\t\t            resolve();\n\t\t        });\n\t\t    }\n\t\t    static performInitialization(interfaces, endPoint) {\n\t\t        const config = class extends MobileRpcConfiguration {\n\t\t            constructor() {\n\t\t                super(...arguments);\n\t\t                this.interfaces = () => interfaces;\n\t\t                this.protocol = new MobileRpcProtocol_1.MobileRpcProtocol(this, endPoint);\n\t\t            }\n\t\t        };\n\t\t        for (const def of interfaces) {\n\t\t            core_common_1.RpcConfiguration.assign(def, () => config);\n\t\t        }\n\t\t        const instance = core_common_1.RpcConfiguration.obtain(config);\n\t\t        core_common_1.RpcConfiguration.initializeInterfaces(instance);\n\t\t        return instance;\n\t\t    }\n\t\t    /** Initializes MobileRpcManager for the frontend of an application. */\n\t\t    static initializeClient(interfaces) {\n\t\t        return MobileRpcManager.performInitialization(interfaces, core_common_1.RpcEndpoint.Frontend);\n\t\t    }\n\t\t    /** Initializes MobileRpcManager for the backend of an application. */\n\t\t    static initializeImpl(interfaces) {\n\t\t        return MobileRpcManager.performInitialization(interfaces, core_common_1.RpcEndpoint.Backend);\n\t\t    }\n\t\t}\n\t\texports.MobileRpcManager = MobileRpcManager;\n\t\t//# sourceMappingURL=MobileRpcManager.js.map \n\t} (MobileRpcManager_1));\n\treturn MobileRpcManager_1;\n}\n\nexport { requireMobileRpcManager as __require };",
      "start": 1693508122639,
      "end": 1693508125155,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [
          "global"
        ],
        "mappings": "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"
      }
    }
  ]
}
