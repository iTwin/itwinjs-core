{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcManager.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElectronRpcManager = exports.ElectronRpcConfiguration = void 0;\nconst core_common_1 = require(\"@itwin/core-common\");\nconst ElectronRpcProtocol_1 = require(\"./ElectronRpcProtocol\");\n/* eslint-disable deprecation/deprecation */\n/** RPC interface configuration for an Electron-based application.\n * @internal\n */\nclass ElectronRpcConfiguration extends core_common_1.RpcConfiguration {\n}\nexports.ElectronRpcConfiguration = ElectronRpcConfiguration;\n/** Coordinates usage of RPC interfaces for an Electron-based application.\n * @internal\n */\nclass ElectronRpcManager extends core_common_1.RpcManager {\n    /** Initializes ElectronRpcManager for the frontend of an application. */\n    static initializeFrontend(ipcFrontend, interfaces) {\n        return ElectronRpcManager.performInitialization(ipcFrontend, interfaces);\n    }\n    /** Initializes ElectronRpcManager for the backend of an application. */\n    static initializeBackend(ipcBackend, interfaces) {\n        return ElectronRpcManager.performInitialization(ipcBackend, interfaces);\n    }\n    static performInitialization(ipcSocket, rpcs) {\n        const interfaces = rpcs ?? [];\n        const config = class extends ElectronRpcConfiguration {\n            constructor() {\n                super(...arguments);\n                this.interfaces = () => interfaces;\n                this.protocol = new ElectronRpcProtocol_1.ElectronRpcProtocol(this, ipcSocket);\n            }\n        };\n        for (const def of interfaces) {\n            core_common_1.RpcConfiguration.assign(def, () => config);\n        }\n        const instance = core_common_1.RpcConfiguration.obtain(config);\n        core_common_1.RpcConfiguration.initializeInterfaces(instance);\n        return instance;\n    }\n    /** Terminates ElectronRpcManager for the frontend of an application. */\n    static terminateFrontend() {\n        return ElectronRpcManager.performTermination();\n    }\n    static performTermination() {\n        const definitions = core_common_1.RpcRegistry.instance.definitionClasses;\n        for (const [, interfaceDef] of definitions) {\n            core_common_1.RpcManager.terminateInterface(interfaceDef);\n        }\n    }\n}\nexports.ElectronRpcManager = ElectronRpcManager;\n//# sourceMappingURL=ElectronRpcManager.js.map",
      "start": 1693508124954,
      "end": 1693508125095,
      "sourcemaps": null
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as ElectronRpcManager_1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcManager.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/hub2023A/itwinjs-core/core/common/lib/esm/core-common.js?commonjs-proxy\";\nimport { __require as require$$1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcProtocol.js?commonjs-wrapped\";\n\nvar hasRequiredElectronRpcManager;\n\nfunction requireElectronRpcManager () {\n\tif (hasRequiredElectronRpcManager) return ElectronRpcManager_1;\n\thasRequiredElectronRpcManager = 1;\n\t\"use strict\";\n\t/*---------------------------------------------------------------------------------------------\n\t* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n\t* See LICENSE.md in the project root for license terms and full copyright notice.\n\t*--------------------------------------------------------------------------------------------*/\n\tObject.defineProperty(ElectronRpcManager_1, \"__esModule\", { value: true });\n\tElectronRpcManager_1.ElectronRpcManager = ElectronRpcManager_1.ElectronRpcConfiguration = void 0;\n\tconst core_common_1 = require$$0;\n\tconst ElectronRpcProtocol_1 = require$$1();\n\t/* eslint-disable deprecation/deprecation */\n\t/** RPC interface configuration for an Electron-based application.\n\t * @internal\n\t */\n\tclass ElectronRpcConfiguration extends core_common_1.RpcConfiguration {\n\t}\n\tElectronRpcManager_1.ElectronRpcConfiguration = ElectronRpcConfiguration;\n\t/** Coordinates usage of RPC interfaces for an Electron-based application.\n\t * @internal\n\t */\n\tclass ElectronRpcManager extends core_common_1.RpcManager {\n\t    /** Initializes ElectronRpcManager for the frontend of an application. */\n\t    static initializeFrontend(ipcFrontend, interfaces) {\n\t        return ElectronRpcManager.performInitialization(ipcFrontend, interfaces);\n\t    }\n\t    /** Initializes ElectronRpcManager for the backend of an application. */\n\t    static initializeBackend(ipcBackend, interfaces) {\n\t        return ElectronRpcManager.performInitialization(ipcBackend, interfaces);\n\t    }\n\t    static performInitialization(ipcSocket, rpcs) {\n\t        const interfaces = rpcs ?? [];\n\t        const config = class extends ElectronRpcConfiguration {\n\t            constructor() {\n\t                super(...arguments);\n\t                this.interfaces = () => interfaces;\n\t                this.protocol = new ElectronRpcProtocol_1.ElectronRpcProtocol(this, ipcSocket);\n\t            }\n\t        };\n\t        for (const def of interfaces) {\n\t            core_common_1.RpcConfiguration.assign(def, () => config);\n\t        }\n\t        const instance = core_common_1.RpcConfiguration.obtain(config);\n\t        core_common_1.RpcConfiguration.initializeInterfaces(instance);\n\t        return instance;\n\t    }\n\t    /** Terminates ElectronRpcManager for the frontend of an application. */\n\t    static terminateFrontend() {\n\t        return ElectronRpcManager.performTermination();\n\t    }\n\t    static performTermination() {\n\t        const definitions = core_common_1.RpcRegistry.instance.definitionClasses;\n\t        for (const [, interfaceDef] of definitions) {\n\t            core_common_1.RpcManager.terminateInterface(interfaceDef);\n\t        }\n\t    }\n\t}\n\tElectronRpcManager_1.ElectronRpcManager = ElectronRpcManager;\n\t//# sourceMappingURL=ElectronRpcManager.js.map\n\treturn ElectronRpcManager_1;\n}\n\nexport { requireElectronRpcManager as __require };",
      "start": 1693508125096,
      "end": 1693508127304,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": ";;;;;;;;;;CAAA,YAAY,CAAC;CACb;CACA;CACA;CACA;CACA,MAAM,CAAC,cAAc,CAAC,oBAAO,EAAE,YAAY,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;AAC9D,wCAA0B,GAAG,6CAAgC,GAAG,KAAK,CAAC,CAAC;CACvE,MAAM,aAAa,GAAG,UAA6B,CAAC;CACpD,MAAM,qBAAqB,GAAG,YAAgC,CAAC;CAC/D;CACA;CACA;CACA;CACA,MAAM,wBAAwB,SAAS,aAAa,CAAC,gBAAgB,CAAC;CACtE,CAAC;AACD,8CAAgC,GAAG,wBAAwB,CAAC;CAC5D;CACA;CACA;CACA,MAAM,kBAAkB,SAAS,aAAa,CAAC,UAAU,CAAC;CAC1D;CACA,IAAI,OAAO,kBAAkB,CAAC,WAAW,EAAE,UAAU,EAAE;CACvD,QAAQ,OAAO,kBAAkB,CAAC,qBAAqB,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;CACjF,KAAK;CACL;CACA,IAAI,OAAO,iBAAiB,CAAC,UAAU,EAAE,UAAU,EAAE;CACrD,QAAQ,OAAO,kBAAkB,CAAC,qBAAqB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;CAChF,KAAK;CACL,IAAI,OAAO,qBAAqB,CAAC,SAAS,EAAE,IAAI,EAAE;CAClD,QAAQ,MAAM,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC;CACtC,QAAQ,MAAM,MAAM,GAAG,cAAc,wBAAwB,CAAC;CAC9D,YAAY,WAAW,GAAG;CAC1B,gBAAgB,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC;CACpC,gBAAgB,IAAI,CAAC,UAAU,GAAG,MAAM,UAAU,CAAC;CACnD,gBAAgB,IAAI,CAAC,QAAQ,GAAG,IAAI,qBAAqB,CAAC,mBAAmB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;CAC/F,aAAa;CACb,SAAS,CAAC;CACV,QAAQ,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;CACtC,YAAY,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,MAAM,CAAC,CAAC;CACrE,SAAS;CACT,QAAQ,MAAM,QAAQ,GAAG,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;CACvE,QAAQ,aAAa,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;CACtE,QAAQ,OAAO,QAAQ,CAAC;CACxB,KAAK;CACL;CACA,IAAI,OAAO,iBAAiB,GAAG;CAC/B,QAAQ,OAAO,kBAAkB,CAAC,kBAAkB,EAAE,CAAC;CACvD,KAAK;CACL,IAAI,OAAO,kBAAkB,GAAG;CAChC,QAAQ,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC;CACjF,QAAQ,KAAK,MAAM,GAAG,YAAY,CAAC,IAAI,WAAW,EAAE;CACpD,YAAY,aAAa,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;CACtE,SAAS;CACT,KAAK;CACL,CAAC;AACD,wCAA0B,GAAG,kBAAkB,CAAC;CAChD"
      }
    }
  ]
}
