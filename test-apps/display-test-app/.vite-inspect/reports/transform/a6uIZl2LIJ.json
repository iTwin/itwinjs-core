{
  "resolvedId": "D:/hub2023A/itwinjs-core/core/electron/lib/cjs/frontend/ElectronApp.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "\"use strict\";\n/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ElectronApp = void 0;\n/** @packageDocumentation\n * @module Renderer\n */\nconst core_bentley_1 = require(\"@itwin/core-bentley\");\nconst core_frontend_1 = require(\"@itwin/core-frontend\");\nconst ElectronIpcInterface_1 = require(\"../common/ElectronIpcInterface\");\nconst ElectronRpcManager_1 = require(\"../common/ElectronRpcManager\");\n/**\n * Frontend Ipc support for Electron apps.\n */\nclass ElectronIpc {\n    addListener(channelName, listener) {\n        this._api.addListener(channelName, listener);\n        return () => this._api.removeListener(channelName, listener);\n    }\n    removeListener(channelName, listener) {\n        this._api.removeListener(channelName, listener);\n    }\n    send(channel, ...data) {\n        this._api.send(channel, ...data);\n    }\n    async invoke(channel, ...args) {\n        return this._api.invoke(channel, ...args);\n    }\n    constructor() {\n        // use the methods on window.itwinjs exposed by ElectronPreload.ts, or ipcRenderer directly if running with nodeIntegration=true (**only** for tests).\n        // Note that `require(\"electron\")` doesn't work with nodeIntegration=false - that's what it stops\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        this._api = window.itwinjs ?? require(\"electron\").ipcRenderer;\n    }\n}\n/**\n * Frontend of an Electron App.\n * @beta\n */\nclass ElectronApp {\n    static get isValid() { return undefined !== this._ipc; }\n    /**\n     * Start the frontend of an Electron application.\n     * @param opts Options for your ElectronApp\n     * @note This method must only be called from the frontend of an Electron app (i.e. when [ProcessDetector.isElectronAppFrontend]($bentley) is `true`).\n     */\n    static async startup(opts) {\n        if (!core_bentley_1.ProcessDetector.isElectronAppFrontend)\n            throw new Error(\"Not running under Electron\");\n        if (!this.isValid) {\n            this._ipc = new ElectronIpc();\n            ElectronRpcManager_1.ElectronRpcManager.initializeFrontend(this._ipc, opts?.iModelApp?.rpcInterfaces); // eslint-disable-line deprecation/deprecation\n        }\n        await core_frontend_1.NativeApp.startup(this._ipc, opts);\n    }\n    static async shutdown() {\n        this._ipc = undefined;\n        await core_frontend_1.NativeApp.shutdown();\n        ElectronRpcManager_1.ElectronRpcManager.terminateFrontend();\n    }\n    /**\n     * Call an asynchronous method in the [Electron.Dialog](https://www.electronjs.org/docs/api/dialog) interface from a previously initialized ElectronFrontend.\n     * @param methodName the name of the method to call\n     * @param args arguments to method\n     * @deprecated in 3.x. use [[dialogIpc]]\n     */\n    static async callDialog(methodName, ...args) {\n        return core_frontend_1.IpcApp.callIpcChannel(ElectronIpcInterface_1.electronIpcStrings.dialogChannel, \"callDialog\", methodName, ...args);\n    }\n}\n/** Proxy object for calling methods of `Electron.Dialog` */\nElectronApp.dialogIpc = core_frontend_1.IpcApp.makeIpcFunctionProxy(ElectronIpcInterface_1.electronIpcStrings.dialogChannel, \"callDialog\");\nexports.ElectronApp = ElectronApp;\n//# sourceMappingURL=ElectronApp.js.map",
      "start": 1693508122439,
      "end": 1693508122609,
      "sourcemaps": null
    },
    {
      "name": "commonjs",
      "result": "import * as commonjsHelpers from \"\u0000commonjsHelpers.js\";\nimport { __exports as ElectronApp_1 } from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/frontend/ElectronApp.js?commonjs-exports\";\nimport require$$0 from \"\\u0000D:/hub2023A/itwinjs-core/core/bentley/lib/esm/core-bentley.js?commonjs-proxy\";\nimport require$$1 from \"\\u0000D:/hub2023A/itwinjs-core/core/frontend/lib/esm/core-frontend.js?commonjs-proxy\";\nimport require$$2 from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronIpcInterface.js?commonjs-proxy\";\nimport { __require as require$$3 } from \"\\u0000D:/hub2023A/itwinjs-core/core/electron/lib/cjs/common/ElectronRpcManager.js?commonjs-wrapped\";\nimport { __require as require$$4 } from \"\\u0000D:/hub2023A/itwinjs-core/common/temp/node_modules/.pnpm/electron@25.3.1/node_modules/electron/index.js?commonjs-wrapped\";\n\n\"use strict\";\n/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nObject.defineProperty(ElectronApp_1, \"__esModule\", { value: true });\nvar ElectronApp_2 = ElectronApp_1.ElectronApp = void 0;\n/** @packageDocumentation\n * @module Renderer\n */\nconst core_bentley_1 = require$$0;\nconst core_frontend_1 = require$$1;\nconst ElectronIpcInterface_1 = require$$2;\nconst ElectronRpcManager_1 = require$$3();\n/**\n * Frontend Ipc support for Electron apps.\n */\nclass ElectronIpc {\n    addListener(channelName, listener) {\n        this._api.addListener(channelName, listener);\n        return () => this._api.removeListener(channelName, listener);\n    }\n    removeListener(channelName, listener) {\n        this._api.removeListener(channelName, listener);\n    }\n    send(channel, ...data) {\n        this._api.send(channel, ...data);\n    }\n    async invoke(channel, ...args) {\n        return this._api.invoke(channel, ...args);\n    }\n    constructor() {\n        // use the methods on window.itwinjs exposed by ElectronPreload.ts, or ipcRenderer directly if running with nodeIntegration=true (**only** for tests).\n        // Note that `require(\"electron\")` doesn't work with nodeIntegration=false - that's what it stops\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        this._api = window.itwinjs ?? require$$4().ipcRenderer;\n    }\n}\n/**\n * Frontend of an Electron App.\n * @beta\n */\nclass ElectronApp {\n    static get isValid() { return undefined !== this._ipc; }\n    /**\n     * Start the frontend of an Electron application.\n     * @param opts Options for your ElectronApp\n     * @note This method must only be called from the frontend of an Electron app (i.e. when [ProcessDetector.isElectronAppFrontend]($bentley) is `true`).\n     */\n    static async startup(opts) {\n        if (!core_bentley_1.ProcessDetector.isElectronAppFrontend)\n            throw new Error(\"Not running under Electron\");\n        if (!this.isValid) {\n            this._ipc = new ElectronIpc();\n            ElectronRpcManager_1.ElectronRpcManager.initializeFrontend(this._ipc, opts?.iModelApp?.rpcInterfaces); // eslint-disable-line deprecation/deprecation\n        }\n        await core_frontend_1.NativeApp.startup(this._ipc, opts);\n    }\n    static async shutdown() {\n        this._ipc = undefined;\n        await core_frontend_1.NativeApp.shutdown();\n        ElectronRpcManager_1.ElectronRpcManager.terminateFrontend();\n    }\n    /**\n     * Call an asynchronous method in the [Electron.Dialog](https://www.electronjs.org/docs/api/dialog) interface from a previously initialized ElectronFrontend.\n     * @param methodName the name of the method to call\n     * @param args arguments to method\n     * @deprecated in 3.x. use [[dialogIpc]]\n     */\n    static async callDialog(methodName, ...args) {\n        return core_frontend_1.IpcApp.callIpcChannel(ElectronIpcInterface_1.electronIpcStrings.dialogChannel, \"callDialog\", methodName, ...args);\n    }\n}\n/** Proxy object for calling methods of `Electron.Dialog` */\nElectronApp.dialogIpc = core_frontend_1.IpcApp.makeIpcFunctionProxy(ElectronIpcInterface_1.electronIpcStrings.dialogChannel, \"callDialog\");\nElectronApp_2 = ElectronApp_1.ElectronApp = ElectronApp;\n//# sourceMappingURL=ElectronApp.js.map\n\nexport { ElectronApp_1 as __moduleExports, ElectronApp_2 as ElectronApp, ElectronApp_1 as default };",
      "start": 1693508122609,
      "end": 1693508127305,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "file": null,
        "sources": [
          null
        ],
        "sourcesContent": [
          null
        ],
        "names": [],
        "mappings": "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"
      }
    }
  ]
}
