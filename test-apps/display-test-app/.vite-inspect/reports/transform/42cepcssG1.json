{
  "resolvedId": "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/AmbientOcclusion.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport { createButton, createCheckBox, createSlider, Slider } from \"@itwin/frontend-devtools\";\r\nimport { AmbientOcclusion, RenderMode, ViewFlags } from \"@itwin/core-common\";\r\nimport { Viewport, ViewState, ViewState3d } from \"@itwin/core-frontend\";\r\n\r\nexport class AmbientOcclusionEditor {\r\n  private readonly _vp: Viewport;\r\n  private readonly _scratchViewFlags = new ViewFlags();\r\n  private readonly _update: (view: ViewState) => void;\r\n  private readonly _aoBias: Slider;\r\n  private readonly _aoZLengthCap: Slider;\r\n  private readonly _aoMaxDistance: Slider;\r\n  private readonly _aoIntensity: Slider;\r\n  private readonly _aoTexelStepSize: Slider;\r\n  private readonly _aoBlurDelta: Slider;\r\n  private readonly _aoBlurSigma: Slider;\r\n  private readonly _aoBlurTexelStepSize: Slider;\r\n\r\n  public constructor(vp: Viewport, parent: HTMLElement) {\r\n    this._vp = vp;\r\n\r\n    const isAOSupported = (view: ViewState) => view.is3d() && RenderMode.SmoothShade === view.viewFlags.renderMode;\r\n    const isAOEnabled = (view: ViewState) => view.viewFlags.ambientOcclusion;\r\n\r\n    const div = document.createElement(\"div\");\r\n\r\n    const slidersDiv = document.createElement(\"div\")!;\r\n\r\n    const showHideDropDowns = (show: boolean) => {\r\n      const display = show ? \"block\" : \"none\";\r\n      slidersDiv.style.display = display;\r\n    };\r\n\r\n    const enableAO = (enabled: boolean) => {\r\n      this._vp.viewFlags = this._vp.viewFlags.with(\"ambientOcclusion\", enabled);\r\n      showHideDropDowns(enabled);\r\n      this.sync();\r\n    };\r\n\r\n    const checkboxInterface = createCheckBox({\r\n      parent: div,\r\n      handler: (cb) => enableAO(cb.checked),\r\n      name: \"Ambient Occlusion\",\r\n      id: \"cbx_AO\",\r\n    });\r\n    const checkbox = checkboxInterface.checkbox;\r\n    const checkboxLabel = checkboxInterface.label;\r\n\r\n    this._aoBias = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Bias: \",\r\n      id: \"viewAttr_AOBias\",\r\n      min: \"0.0\",\r\n      step: \"0.025\",\r\n      max: \"1.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.bias = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoZLengthCap = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Length Cap: \",\r\n      id: \"viewAttr_AOZLengthCap\",\r\n      min: \"0.0\",\r\n      step: \"0.000025\",\r\n      max: \"0.25\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.zLengthCap = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoMaxDistance = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Max Distance: \",\r\n      id: \"viewAttr_AOMaxDistance\",\r\n      min: \"1.0\",\r\n      step: \"10.0\",\r\n      max: \"50000.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.maxDistance = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoIntensity = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Intensity: \",\r\n      id: \"viewAttr_AOIntensity\",\r\n      min: \"0.1\",\r\n      step: \"0.1\",\r\n      max: \"16.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.intensity = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoTexelStepSize = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Step: \",\r\n      id: \"viewAttr_AOTexelStepSize\",\r\n      min: \"1.0\",\r\n      step: \"0.005\",\r\n      max: \"50.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.texelStepSize = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoBlurDelta = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Blur Delta: \",\r\n      id: \"viewAttr_AOBlurDelta\",\r\n      min: \"0.5\",\r\n      step: \"0.0001\",\r\n      max: \"1.5\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.blurDelta = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoBlurSigma = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Blur Sigma: \",\r\n      id: \"viewAttr_AOBlurSigma\",\r\n      min: \"0.5\",\r\n      step: \"0.0001\",\r\n      max: \"5.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.blurSigma = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoBlurTexelStepSize = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Blur Step: \",\r\n      id: \"viewAttr_AOBlurTexelStepSize\",\r\n      min: \"1.0\",\r\n      step: \"0.005\",\r\n      max: \"5.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.blurTexelStepSize = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    const resetButton = createButton({\r\n      parent: slidersDiv,\r\n      id: \"viewAttr_AOReset\",\r\n      value: \"Reset\",\r\n      handler: () => this.resetAmbientOcclusion(),\r\n    });\r\n    resetButton.div.style.textAlign = \"center\";\r\n\r\n    this._update = (view) => {\r\n      const visible = isAOSupported(view);\r\n      div.style.display = visible ? \"block\" : \"none\";\r\n      if (!visible)\r\n        return;\r\n\r\n      checkbox.checked = isAOEnabled(view);\r\n      checkboxLabel.style.fontWeight = checkbox.checked ? \"bold\" : \"500\";\r\n      showHideDropDowns(checkbox.checked);\r\n\r\n      this.updateAmbientOcclusionUI(view);\r\n    };\r\n\r\n    div.appendChild(slidersDiv);\r\n\r\n    const hr = document.createElement(\"hr\");\r\n    hr.style.borderColor = \"grey\";\r\n    div.appendChild(hr);\r\n\r\n    parent.appendChild(div);\r\n  }\r\n\r\n  public update(view: ViewState): void {\r\n    this._update(view);\r\n  }\r\n\r\n  private updateAmbientOcclusionUI(view: ViewState) {\r\n    const getAOSettings = (v: ViewState) => (v as ViewState3d).getDisplayStyle3d().settings.ambientOcclusionSettings;\r\n\r\n    const aoSettings = getAOSettings(view);\r\n\r\n    this._aoBias.slider.value = this._aoBias.readout.innerText = aoSettings.bias.toString();\r\n    this._aoZLengthCap.slider.value = this._aoZLengthCap.readout.innerText = aoSettings.zLengthCap.toString();\r\n    this._aoMaxDistance.slider.value = this._aoMaxDistance.readout.innerText = aoSettings.maxDistance.toString();\r\n    this._aoIntensity.slider.value = this._aoIntensity.readout.innerText = aoSettings.intensity.toString();\r\n    this._aoTexelStepSize.slider.value = this._aoTexelStepSize.readout.innerText = aoSettings.texelStepSize.toString();\r\n    this._aoBlurDelta.slider.value = this._aoBlurDelta.readout.innerText = aoSettings.blurDelta.toString();\r\n    this._aoBlurSigma.slider.value = this._aoBlurSigma.readout.innerText = aoSettings.blurSigma.toString();\r\n    this._aoBlurTexelStepSize.slider.value = this._aoBlurTexelStepSize.readout.innerText = aoSettings.blurTexelStepSize.toString();\r\n  }\r\n\r\n  private updateAmbientOcclusion(updateFunction: (aoProps: any) => void) {\r\n    const displayStyleSettings = (this._vp.view as ViewState3d).getDisplayStyle3d().settings;\r\n    const aoProps = displayStyleSettings.ambientOcclusionSettings.toJSON();\r\n    updateFunction(aoProps);\r\n    displayStyleSettings.ambientOcclusionSettings = AmbientOcclusion.Settings.fromJSON(aoProps);\r\n    this.sync();\r\n  }\r\n\r\n  private resetAmbientOcclusion(): void {\r\n    const newAOSettings = AmbientOcclusion.Settings.defaults;\r\n    (this._vp.view as ViewState3d).getDisplayStyle3d().settings.ambientOcclusionSettings = newAOSettings;\r\n    this.sync();\r\n    this.updateAmbientOcclusionUI(this._vp.view);\r\n  }\r\n\r\n  private sync(): void {\r\n    this._vp.synchWithView();\r\n  }\r\n}\r\n",
      "start": 1693508126104,
      "end": 1693508126250,
      "sourcemaps": null
    },
    {
      "name": "vite:esbuild",
      "result": "\"use strict\";\nimport { createButton, createCheckBox, createSlider } from \"@itwin/frontend-devtools\";\nimport { AmbientOcclusion, RenderMode, ViewFlags } from \"@itwin/core-common\";\nexport class AmbientOcclusionEditor {\n  constructor(vp, parent) {\n    this._scratchViewFlags = new ViewFlags();\n    this._vp = vp;\n    const isAOSupported = (view) => view.is3d() && RenderMode.SmoothShade === view.viewFlags.renderMode;\n    const isAOEnabled = (view) => view.viewFlags.ambientOcclusion;\n    const div = document.createElement(\"div\");\n    const slidersDiv = document.createElement(\"div\");\n    const showHideDropDowns = (show) => {\n      const display = show ? \"block\" : \"none\";\n      slidersDiv.style.display = display;\n    };\n    const enableAO = (enabled) => {\n      this._vp.viewFlags = this._vp.viewFlags.with(\"ambientOcclusion\", enabled);\n      showHideDropDowns(enabled);\n      this.sync();\n    };\n    const checkboxInterface = createCheckBox({\n      parent: div,\n      handler: (cb) => enableAO(cb.checked),\n      name: \"Ambient Occlusion\",\n      id: \"cbx_AO\"\n    });\n    const checkbox = checkboxInterface.checkbox;\n    const checkboxLabel = checkboxInterface.label;\n    this._aoBias = createSlider({\n      parent: slidersDiv,\n      name: \"Bias: \",\n      id: \"viewAttr_AOBias\",\n      min: \"0.0\",\n      step: \"0.025\",\n      max: \"1.0\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.bias = parseFloat(slider.value);\n      })\n    });\n    this._aoZLengthCap = createSlider({\n      parent: slidersDiv,\n      name: \"Length Cap: \",\n      id: \"viewAttr_AOZLengthCap\",\n      min: \"0.0\",\n      step: \"0.000025\",\n      max: \"0.25\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.zLengthCap = parseFloat(slider.value);\n      })\n    });\n    this._aoMaxDistance = createSlider({\n      parent: slidersDiv,\n      name: \"Max Distance: \",\n      id: \"viewAttr_AOMaxDistance\",\n      min: \"1.0\",\n      step: \"10.0\",\n      max: \"50000.0\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.maxDistance = parseFloat(slider.value);\n      })\n    });\n    this._aoIntensity = createSlider({\n      parent: slidersDiv,\n      name: \"Intensity: \",\n      id: \"viewAttr_AOIntensity\",\n      min: \"0.1\",\n      step: \"0.1\",\n      max: \"16.0\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.intensity = parseFloat(slider.value);\n      })\n    });\n    this._aoTexelStepSize = createSlider({\n      parent: slidersDiv,\n      name: \"Step: \",\n      id: \"viewAttr_AOTexelStepSize\",\n      min: \"1.0\",\n      step: \"0.005\",\n      max: \"50.0\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.texelStepSize = parseFloat(slider.value);\n      })\n    });\n    this._aoBlurDelta = createSlider({\n      parent: slidersDiv,\n      name: \"Blur Delta: \",\n      id: \"viewAttr_AOBlurDelta\",\n      min: \"0.5\",\n      step: \"0.0001\",\n      max: \"1.5\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.blurDelta = parseFloat(slider.value);\n      })\n    });\n    this._aoBlurSigma = createSlider({\n      parent: slidersDiv,\n      name: \"Blur Sigma: \",\n      id: \"viewAttr_AOBlurSigma\",\n      min: \"0.5\",\n      step: \"0.0001\",\n      max: \"5.0\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.blurSigma = parseFloat(slider.value);\n      })\n    });\n    this._aoBlurTexelStepSize = createSlider({\n      parent: slidersDiv,\n      name: \"Blur Step: \",\n      id: \"viewAttr_AOBlurTexelStepSize\",\n      min: \"1.0\",\n      step: \"0.005\",\n      max: \"5.0\",\n      value: \"0.0\",\n      readout: \"right\",\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\n        aoProps.blurTexelStepSize = parseFloat(slider.value);\n      })\n    });\n    const resetButton = createButton({\n      parent: slidersDiv,\n      id: \"viewAttr_AOReset\",\n      value: \"Reset\",\n      handler: () => this.resetAmbientOcclusion()\n    });\n    resetButton.div.style.textAlign = \"center\";\n    this._update = (view) => {\n      const visible = isAOSupported(view);\n      div.style.display = visible ? \"block\" : \"none\";\n      if (!visible)\n        return;\n      checkbox.checked = isAOEnabled(view);\n      checkboxLabel.style.fontWeight = checkbox.checked ? \"bold\" : \"500\";\n      showHideDropDowns(checkbox.checked);\n      this.updateAmbientOcclusionUI(view);\n    };\n    div.appendChild(slidersDiv);\n    const hr = document.createElement(\"hr\");\n    hr.style.borderColor = \"grey\";\n    div.appendChild(hr);\n    parent.appendChild(div);\n  }\n  update(view) {\n    this._update(view);\n  }\n  updateAmbientOcclusionUI(view) {\n    const getAOSettings = (v) => v.getDisplayStyle3d().settings.ambientOcclusionSettings;\n    const aoSettings = getAOSettings(view);\n    this._aoBias.slider.value = this._aoBias.readout.innerText = aoSettings.bias.toString();\n    this._aoZLengthCap.slider.value = this._aoZLengthCap.readout.innerText = aoSettings.zLengthCap.toString();\n    this._aoMaxDistance.slider.value = this._aoMaxDistance.readout.innerText = aoSettings.maxDistance.toString();\n    this._aoIntensity.slider.value = this._aoIntensity.readout.innerText = aoSettings.intensity.toString();\n    this._aoTexelStepSize.slider.value = this._aoTexelStepSize.readout.innerText = aoSettings.texelStepSize.toString();\n    this._aoBlurDelta.slider.value = this._aoBlurDelta.readout.innerText = aoSettings.blurDelta.toString();\n    this._aoBlurSigma.slider.value = this._aoBlurSigma.readout.innerText = aoSettings.blurSigma.toString();\n    this._aoBlurTexelStepSize.slider.value = this._aoBlurTexelStepSize.readout.innerText = aoSettings.blurTexelStepSize.toString();\n  }\n  updateAmbientOcclusion(updateFunction) {\n    const displayStyleSettings = this._vp.view.getDisplayStyle3d().settings;\n    const aoProps = displayStyleSettings.ambientOcclusionSettings.toJSON();\n    updateFunction(aoProps);\n    displayStyleSettings.ambientOcclusionSettings = AmbientOcclusion.Settings.fromJSON(aoProps);\n    this.sync();\n  }\n  resetAmbientOcclusion() {\n    const newAOSettings = AmbientOcclusion.Settings.defaults;\n    this._vp.view.getDisplayStyle3d().settings.ambientOcclusionSettings = newAOSettings;\n    this.sync();\n    this.updateAmbientOcclusionUI(this._vp.view);\n  }\n  sync() {\n    this._vp.synchWithView();\n  }\n}\n",
      "start": 1693508126250,
      "end": 1693508126316,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "D:/hub2023A/itwinjs-core/test-apps/display-test-app/src/frontend/AmbientOcclusion.ts"
        ],
        "sourcesContent": [
          "/*---------------------------------------------------------------------------------------------\r\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\r\n* See LICENSE.md in the project root for license terms and full copyright notice.\r\n*--------------------------------------------------------------------------------------------*/\r\n\r\nimport { createButton, createCheckBox, createSlider, Slider } from \"@itwin/frontend-devtools\";\r\nimport { AmbientOcclusion, RenderMode, ViewFlags } from \"@itwin/core-common\";\r\nimport { Viewport, ViewState, ViewState3d } from \"@itwin/core-frontend\";\r\n\r\nexport class AmbientOcclusionEditor {\r\n  private readonly _vp: Viewport;\r\n  private readonly _scratchViewFlags = new ViewFlags();\r\n  private readonly _update: (view: ViewState) => void;\r\n  private readonly _aoBias: Slider;\r\n  private readonly _aoZLengthCap: Slider;\r\n  private readonly _aoMaxDistance: Slider;\r\n  private readonly _aoIntensity: Slider;\r\n  private readonly _aoTexelStepSize: Slider;\r\n  private readonly _aoBlurDelta: Slider;\r\n  private readonly _aoBlurSigma: Slider;\r\n  private readonly _aoBlurTexelStepSize: Slider;\r\n\r\n  public constructor(vp: Viewport, parent: HTMLElement) {\r\n    this._vp = vp;\r\n\r\n    const isAOSupported = (view: ViewState) => view.is3d() && RenderMode.SmoothShade === view.viewFlags.renderMode;\r\n    const isAOEnabled = (view: ViewState) => view.viewFlags.ambientOcclusion;\r\n\r\n    const div = document.createElement(\"div\");\r\n\r\n    const slidersDiv = document.createElement(\"div\")!;\r\n\r\n    const showHideDropDowns = (show: boolean) => {\r\n      const display = show ? \"block\" : \"none\";\r\n      slidersDiv.style.display = display;\r\n    };\r\n\r\n    const enableAO = (enabled: boolean) => {\r\n      this._vp.viewFlags = this._vp.viewFlags.with(\"ambientOcclusion\", enabled);\r\n      showHideDropDowns(enabled);\r\n      this.sync();\r\n    };\r\n\r\n    const checkboxInterface = createCheckBox({\r\n      parent: div,\r\n      handler: (cb) => enableAO(cb.checked),\r\n      name: \"Ambient Occlusion\",\r\n      id: \"cbx_AO\",\r\n    });\r\n    const checkbox = checkboxInterface.checkbox;\r\n    const checkboxLabel = checkboxInterface.label;\r\n\r\n    this._aoBias = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Bias: \",\r\n      id: \"viewAttr_AOBias\",\r\n      min: \"0.0\",\r\n      step: \"0.025\",\r\n      max: \"1.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.bias = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoZLengthCap = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Length Cap: \",\r\n      id: \"viewAttr_AOZLengthCap\",\r\n      min: \"0.0\",\r\n      step: \"0.000025\",\r\n      max: \"0.25\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.zLengthCap = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoMaxDistance = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Max Distance: \",\r\n      id: \"viewAttr_AOMaxDistance\",\r\n      min: \"1.0\",\r\n      step: \"10.0\",\r\n      max: \"50000.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.maxDistance = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoIntensity = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Intensity: \",\r\n      id: \"viewAttr_AOIntensity\",\r\n      min: \"0.1\",\r\n      step: \"0.1\",\r\n      max: \"16.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.intensity = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoTexelStepSize = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Step: \",\r\n      id: \"viewAttr_AOTexelStepSize\",\r\n      min: \"1.0\",\r\n      step: \"0.005\",\r\n      max: \"50.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.texelStepSize = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoBlurDelta = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Blur Delta: \",\r\n      id: \"viewAttr_AOBlurDelta\",\r\n      min: \"0.5\",\r\n      step: \"0.0001\",\r\n      max: \"1.5\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.blurDelta = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoBlurSigma = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Blur Sigma: \",\r\n      id: \"viewAttr_AOBlurSigma\",\r\n      min: \"0.5\",\r\n      step: \"0.0001\",\r\n      max: \"5.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.blurSigma = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    this._aoBlurTexelStepSize = createSlider({\r\n      parent: slidersDiv,\r\n      name: \"Blur Step: \",\r\n      id: \"viewAttr_AOBlurTexelStepSize\",\r\n      min: \"1.0\",\r\n      step: \"0.005\",\r\n      max: \"5.0\",\r\n      value: \"0.0\",\r\n      readout: \"right\",\r\n      handler: (slider) => this.updateAmbientOcclusion((aoProps) => {\r\n        aoProps.blurTexelStepSize = parseFloat(slider.value);\r\n      }),\r\n    });\r\n\r\n    const resetButton = createButton({\r\n      parent: slidersDiv,\r\n      id: \"viewAttr_AOReset\",\r\n      value: \"Reset\",\r\n      handler: () => this.resetAmbientOcclusion(),\r\n    });\r\n    resetButton.div.style.textAlign = \"center\";\r\n\r\n    this._update = (view) => {\r\n      const visible = isAOSupported(view);\r\n      div.style.display = visible ? \"block\" : \"none\";\r\n      if (!visible)\r\n        return;\r\n\r\n      checkbox.checked = isAOEnabled(view);\r\n      checkboxLabel.style.fontWeight = checkbox.checked ? \"bold\" : \"500\";\r\n      showHideDropDowns(checkbox.checked);\r\n\r\n      this.updateAmbientOcclusionUI(view);\r\n    };\r\n\r\n    div.appendChild(slidersDiv);\r\n\r\n    const hr = document.createElement(\"hr\");\r\n    hr.style.borderColor = \"grey\";\r\n    div.appendChild(hr);\r\n\r\n    parent.appendChild(div);\r\n  }\r\n\r\n  public update(view: ViewState): void {\r\n    this._update(view);\r\n  }\r\n\r\n  private updateAmbientOcclusionUI(view: ViewState) {\r\n    const getAOSettings = (v: ViewState) => (v as ViewState3d).getDisplayStyle3d().settings.ambientOcclusionSettings;\r\n\r\n    const aoSettings = getAOSettings(view);\r\n\r\n    this._aoBias.slider.value = this._aoBias.readout.innerText = aoSettings.bias.toString();\r\n    this._aoZLengthCap.slider.value = this._aoZLengthCap.readout.innerText = aoSettings.zLengthCap.toString();\r\n    this._aoMaxDistance.slider.value = this._aoMaxDistance.readout.innerText = aoSettings.maxDistance.toString();\r\n    this._aoIntensity.slider.value = this._aoIntensity.readout.innerText = aoSettings.intensity.toString();\r\n    this._aoTexelStepSize.slider.value = this._aoTexelStepSize.readout.innerText = aoSettings.texelStepSize.toString();\r\n    this._aoBlurDelta.slider.value = this._aoBlurDelta.readout.innerText = aoSettings.blurDelta.toString();\r\n    this._aoBlurSigma.slider.value = this._aoBlurSigma.readout.innerText = aoSettings.blurSigma.toString();\r\n    this._aoBlurTexelStepSize.slider.value = this._aoBlurTexelStepSize.readout.innerText = aoSettings.blurTexelStepSize.toString();\r\n  }\r\n\r\n  private updateAmbientOcclusion(updateFunction: (aoProps: any) => void) {\r\n    const displayStyleSettings = (this._vp.view as ViewState3d).getDisplayStyle3d().settings;\r\n    const aoProps = displayStyleSettings.ambientOcclusionSettings.toJSON();\r\n    updateFunction(aoProps);\r\n    displayStyleSettings.ambientOcclusionSettings = AmbientOcclusion.Settings.fromJSON(aoProps);\r\n    this.sync();\r\n  }\r\n\r\n  private resetAmbientOcclusion(): void {\r\n    const newAOSettings = AmbientOcclusion.Settings.defaults;\r\n    (this._vp.view as ViewState3d).getDisplayStyle3d().settings.ambientOcclusionSettings = newAOSettings;\r\n    this.sync();\r\n    this.updateAmbientOcclusionUI(this._vp.view);\r\n  }\r\n\r\n  private sync(): void {\r\n    this._vp.synchWithView();\r\n  }\r\n}\r\n"
        ],
        "mappings": "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",
        "names": []
      }
    }
  ]
}
