PlantUML vscode extension can generate charts from this

@startmindmap
* Schema/Class APIs
**[#Business] iModel
***[#Business]  iModelDb::getECClassMetadData()
****[#Business]: MetaDataRegistry
<code>
Acts as a cache for metadata
</code>;
*****[#Business]: ClassRegistry (static)
<code>
public static register(entityClass: typeof Entity, schema: typeof Schema)
public static getRootEntity(iModel: IModelDb, ecTypeQualifier: string)
public static registerModule(moduleObj: any, schema: typeof Schema)
public static findRegisteredClass(classFullName: string)
public static getClass(classFullName: string, iModel: IModelDb)
public static unregisterCLass(classFullName: string)
</code>;
*****[#Business] Entity::getClassMetaData(): EntityMetaData
***[#Business] iModelDb::getSchemaProps()
**[#Business]: Schemas
<code>
public static registerSchema(schema: typeof Schema)

</code>;
***[#Business]: Schema
<code>
public static get schemaName(): string
public static getRegisteredSchema(schemaName: string): typeof Schema
</code>;
****[#Business]: BisCoreSchema
<code>
public static registerSchema()
   calls Schemas.registerSchema(BisCoreSchema)
public static get schemaFilePath(): string
</code>;
****[#Business]: FunctionalSchema
<code>
public static registerSchema()
public static get schemaFilePath(): string
public static async importSchema(iModelDb: IModelDb)
</code>;
****[#Business] ...

left side
**[#Application]:SchemaLoader
<code>
public getSchema<T extends Schema>(schemaName: string): T
public tryGetSchema<T extends Schema>(schemaName: string): T | undefined
public get context(): SchemaContext
    (uses a SchemaJsonLocater)
</code>;
**[#Application]:SchemaContext
<code>
public addLocater(locater: ISchemaLocater)
public async addSchema(schema: Schema)
public async getSchema()
public async getSchemaInfo()
</code>;
***[#Application]:SchemaInfo
<code>
schemaKey: Readonly<SchemaKey>
references: WithSchemaKey[]
</code>;
***[#Application] ISchemaItemLocater
***[#Application] ISchemaLocater
****[#Application] SchemaCache
****[#Application] SchemaJsonLocater
****[#LightGreen] SchemaFileLocater
****[#LightGreen] SchemaJsonFileLocater
****[#LightGreen] SchemaXmlFileLocater
****[#LightGreen] SchemaXmlStringLocater
****[#LightGreen] StubSchemaXmlFileLocater
***[#Coral]:SchemaContextEditor
[[example-code\snippets\src\backend\LoadAndEditiModelSchemas.test.ts]];
****[#Coral] MutableSchema
@endmindmap

For Usecases:

@startuml
User -> (Start)
User --> (Use the application) : A small label
:Main Admin: ---> (Use the application) : This is\nyet another\nlabel
@enduml

