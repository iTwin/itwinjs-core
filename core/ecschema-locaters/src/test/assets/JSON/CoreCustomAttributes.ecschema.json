{
   "$schema" : "https://dev.bentley.com/json_schemas/ec/32/ecschema",
   "alias" : "CoreCA",
   "description" : "Custom attributes to indicate core EC concepts, may include struct classes intended for use in core custom attributes.",
   "items" : {
      "ClassHasCurrentTimeStampProperty" : {
         "appliesTo" : "EntityClass",
         "modifier" : "Sealed",
         "properties" : [
            {
               "name" : "PropertyName",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "DateTimeComponent" : {
         "enumerators" : [
            {
               "name" : "DateTime",
               "value" : "DateTime"
            },
            {
               "name" : "Date",
               "value" : "Date"
            },
            {
               "name" : "TimeOfDay",
               "value" : "TimeOfDay"
            }
         ],
         "isStrict" : true,
         "schemaItemType" : "Enumeration",
         "type" : "string"
      },
      "DateTimeInfo" : {
         "appliesTo" : "PrimitiveProperty, ArrayProperty",
         "description" : "Optional additional meta data for ECProperties of type DateTime.",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Either Utc, Local or Unspecified. Default: Unspecified. When specifying a DateTimeKind, it is usually not necessary to specify a DateTimeComponent because a DateTimeKind implies the DateTimeComponent 'DateTime'.",
               "name" : "DateTimeKind",
               "type" : "PrimitiveProperty",
               "typeName" : "CoreCustomAttributes.DateTimeKind"
            },
            {
               "description" : "Either DateTime or Date. Default: DateTime. Specifying 'Date' usually implies that a DateTimeKind is irrelevant, because dates (without time) don't need any timezone information.",
               "name" : "DateTimeComponent",
               "type" : "PrimitiveProperty",
               "typeName" : "CoreCustomAttributes.DateTimeComponent"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "DateTimeKind" : {
         "enumerators" : [
            {
               "name" : "Unspecified",
               "value" : "Unspecified"
            },
            {
               "name" : "Utc",
               "value" : "Utc"
            },
            {
               "name" : "Local",
               "value" : "Local"
            }
         ],
         "isStrict" : true,
         "schemaItemType" : "Enumeration",
         "type" : "string"
      },
      "Deprecated" : {
         "appliesTo" : "Any",
         "description" : "Identifies a schema or item within a schema as deprecated.  Deprecated things should not be used.",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Gives advice about avoiding the deprecated item or other helpful information related to the deprecation of the item.",
               "name" : "Description",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "DynamicSchema" : {
         "appliesTo" : "Schema",
         "description" : "Identifies a schema as dynamically generated by an application.  Like versions of a schema may differ and are not guaranteed to merge without conflicts.",
         "label" : "Dynamic Schema",
         "modifier" : "Sealed",
         "schemaItemType" : "CustomAttributeClass"
      },
      "Extension" : {
         "appliesTo" : "AnyProperty",
         "description" : "Used to indicate that the property this custom attribute is applied to is an extension property.",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Extension origin.",
               "name" : "Origin",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "HiddenClass" : {
         "appliesTo" : "AnyClass",
         "description" : "Identifies a class which is designed to be hidden from teh user interface.  Hides the class it is applied to and all derived classes",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "If set to true show the hidden class.  Defaults to False.  Allows a derived class to be shown even though it's base class is hidden",
               "name" : "Show",
               "type" : "PrimitiveProperty",
               "typeName" : "boolean"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "HiddenProperty" : {
         "appliesTo" : "AnyProperty",
         "description" : "Identifies a property which is designed to be hidden from the user interface",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "If set to true show the hidden property. Defaults to False.  Allows a property override to show a hidden property in a derived class",
               "name" : "Show",
               "type" : "PrimitiveProperty",
               "typeName" : "boolean"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "HiddenSchema" : {
         "appliesTo" : "Schema",
         "description" : "Identifies a schema which is designed to be hidden from the user interface.  By default all classes in the schema are hidden as well.",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "If true classe in the schema will be shown.  Default is False.  If set to true individual classes may be hidden using the HiddenClass custom attribute",
               "name" : "ShowClasses",
               "type" : "PrimitiveProperty",
               "typeName" : "boolean"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "IsMixin" : {
         "appliesTo" : "EntityClass",
         "description" : "Applied to abstract ECEntityClasses which serve as secondary base classes for normal ECEntityClasses.",
         "label" : "Is Mixin",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "This mixin may only be applied to entity classes which derive from this class.  Class Name should be fully specified as 'alias:ClassName'",
               "name" : "AppliesToEntityClass",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "Localizable" : {
         "appliesTo" : "PrimitiveProperty",
         "description" : "Applied to a property to indicate that custom attributes using this property can be localized.",
         "label" : "Localizable",
         "modifier" : "Sealed",
         "schemaItemType" : "CustomAttributeClass"
      },
      "NotSubclassableInReferencingSchemas" : {
         "appliesTo" : "AnyClass",
         "description" : "Makes a class 'sealed' outside of the schema containing the class",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Optionally allows specific classes in other schemas to subclass this class.  Use format '[SchemaName]:[ClassName]', e.g. 'Fruit:Banana'",
               "minOccurs" : 0,
               "name" : "Exceptions",
               "type" : "PrimitiveArrayProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "PartialSchema" : {
         "appliesTo" : "Schema",
         "description" : "Identifies a schema file/object that may only contain part of the complete schema.  Like versions of a schema may differ but are guaranteed to merge without conflicts.",
         "label" : "Partial Schema",
         "modifier" : "Sealed",
         "schemaItemType" : "CustomAttributeClass"
      },
      "ProductionStatus" : {
         "appliesTo" : "Schema",
         "description" : "Declares the suitability of this schema for use in production and other workflows.",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Indicates the suitability of this schema for production or other usage.",
               "name" : "SupportedUse",
               "type" : "PrimitiveProperty",
               "typeName" : "CoreCustomAttributes.ProductionStatusValue"
            },
            {
               "description" : "Set when the schema ProductionStatus is set. Used to verify that a validated schema has not been modified after that point.",
               "name" : "Checksum",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "ProductionStatusValue" : {
         "description" : "Used with ProductionStatus to declare the schema author's intended and supported workflows for the schema.",
         "enumerators" : [
            {
               "label" : "NotForProduction",
               "name" : "NotForProduction",
               "value" : "NotForProduction"
            },
            {
               "label" : "FieldTesting",
               "name" : "FieldTesting",
               "value" : "FieldTesting"
            },
            {
               "label" : "Production",
               "name" : "Production",
               "value" : "Production"
            },
            {
               "label" : "Deprecated",
               "name" : "Deprecated",
               "value" : "Deprecated"
            }
         ],
         "isStrict" : true,
         "schemaItemType" : "Enumeration",
         "type" : "string"
      },
      "SchemaNameAndPurpose" : {
         "description" : "Used to define a supplemental schema and its purpose",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Full name of the supplemental schema",
               "name" : "SchemaName",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            },
            {
               "description" : "Purpose of the supplemental schema",
               "name" : "Purpose",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "StructClass"
      },
      "SchemaReference" : {
         "description" : "Reference to a schema including name and version",
         "label" : "Schema Reference",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "Name of schema, excluding version",
               "label" : "Schema Name",
               "name" : "SchemaName",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            },
            {
               "description" : "[This].[Write].[Minor]",
               "label" : "Major Version",
               "name" : "MajorVersion",
               "type" : "PrimitiveProperty",
               "typeName" : "int"
            },
            {
               "description" : "[Major].[Write].[This]",
               "label" : "Minor Version",
               "name" : "MinorVersion",
               "type" : "PrimitiveProperty",
               "typeName" : "int"
            },
            {
               "description" : "[Major].[This].[Minor]",
               "name" : "WriteVersion",
               "type" : "PrimitiveProperty",
               "typeName" : "int"
            }
         ],
         "schemaItemType" : "StructClass"
      },
      "SupplementalProvenance" : {
         "appliesTo" : "Schema",
         "modifier" : "Sealed",
         "properties" : [
            {
               "minOccurs" : 0,
               "name" : "SupplementalSchemaNamesAndPurposes",
               "type" : "StructArrayProperty",
               "typeName" : "CoreCustomAttributes.SchemaNameAndPurpose"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      },
      "SupplementalSchema" : {
         "appliesTo" : "Schema",
         "description" : "Identifies a schema as a supplemental schema and stores extra metadata necessary for supplemental schemas",
         "label" : "Supplemental Schema",
         "modifier" : "Sealed",
         "properties" : [
            {
               "description" : "References the primary schema this supplemental should be applied to",
               "label" : "Primary Schema Reference",
               "name" : "PrimarySchemaReference",
               "type" : "StructProperty",
               "typeName" : "CoreCustomAttributes.SchemaReference"
            },
            {
               "description" : "Positive integer defining the precedence of this supplemental schema. Higher precedences override lower precences.  The primary schema is considered to have a precedence between 199 and 200.",
               "name" : "Precedence",
               "type" : "PrimitiveProperty",
               "typeName" : "int"
            },
            {
               "description" : "A string representing the function of this supplemental schema.  Standard name formatting for a supplemental schema is <PrimarySchemaName>_Supplemental_<Purpose>",
               "name" : "Purpose",
               "type" : "PrimitiveProperty",
               "typeName" : "string"
            }
         ],
         "schemaItemType" : "CustomAttributeClass"
      }
   },
   "label" : "Core Custom Attributes",
   "name" : "CoreCustomAttributes",
   "version" : "01.00.03"
}
