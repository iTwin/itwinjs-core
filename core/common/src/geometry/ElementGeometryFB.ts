/*---------------------------------------------------------------------------------------------
* Copyright (c) Bentley Systems, Incorporated. All rights reserved.
* See LICENSE.md in the project root for license terms and full copyright notice.
*--------------------------------------------------------------------------------------------*/
/** @packageDocumentation
 * @module Serialization
 */
import { flatbuffers } from "flatbuffers";
/* eslint-disable @typescript-eslint/naming-convention */
/* eslint-disable @typescript-eslint/explicit-member-accessibility */
/* eslint-disable @bentley/prefer-get */
/* eslint-disable no-var */
// cspell:word flatbuffers

export namespace EGFBAccessors {
  // automatically generated by the FlatBuffers compiler, do not modify

  /**
   * @enum {number}
   */
  export enum GradientMode {
    None = 0,
    Linear = 1,
    Curved = 2,
    Cylindrical = 3,
    Spherical = 4,
    Hemispherical = 5,
    Thematic = 6
  };

  /**
   * @enum {number}
   */
  export enum BoundaryType {
    None = 0,
    Open = 1,
    Closed = 2
  };

  /**
   * @enum {number}
   */
  export enum FillDisplay {
    None = 0,
    ByView = 1,
    Always = 2,
    Blanking = 3
  };

  /**
   * @enum {number}
   */
  export enum GeometryClass {
    Primary = 0,
    Construction = 1,
    Dimension = 2,
    Pattern = 3
  };

  /**
   * @enum {number}
   */
  export enum BRepType {
    Solid = 0,
    Sheet = 1,
    Wire = 2
  };

  /**
   * @constructor
   */
  export class DPoint3d {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DPoint3d
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DPoint3d {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    y(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    z(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x
     * @param number y
     * @param number z
     * @returns flatbuffers.Offset
     */
    static createDPoint3d(builder: flatbuffers.Builder, x: number, y: number, z: number): flatbuffers.Offset {
      builder.prep(8, 24);
      builder.writeFloat64(z);
      builder.writeFloat64(y);
      builder.writeFloat64(x);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class DPoint2d {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DPoint2d
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DPoint2d {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    y(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x
     * @param number y
     * @returns flatbuffers.Offset
     */
    static createDPoint2d(builder: flatbuffers.Builder, x: number, y: number): flatbuffers.Offset {
      builder.prep(8, 16);
      builder.writeFloat64(y);
      builder.writeFloat64(x);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class DVec3d {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DVec3d
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DVec3d {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    y(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    z(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x
     * @param number y
     * @param number z
     * @returns flatbuffers.Offset
     */
    static createDVec3d(builder: flatbuffers.Builder, x: number, y: number, z: number): flatbuffers.Offset {
      builder.prep(8, 24);
      builder.writeFloat64(z);
      builder.writeFloat64(y);
      builder.writeFloat64(x);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class RotMatrix {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns RotMatrix
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): RotMatrix {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x00(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    x01(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    x02(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @returns number
     */
    x10(): number {
      return this.bb!.readFloat64(this.bb_pos + 24);
    };

    /**
     * @returns number
     */
    x11(): number {
      return this.bb!.readFloat64(this.bb_pos + 32);
    };

    /**
     * @returns number
     */
    x12(): number {
      return this.bb!.readFloat64(this.bb_pos + 40);
    };

    /**
     * @returns number
     */
    x20(): number {
      return this.bb!.readFloat64(this.bb_pos + 48);
    };

    /**
     * @returns number
     */
    x21(): number {
      return this.bb!.readFloat64(this.bb_pos + 56);
    };

    /**
     * @returns number
     */
    x22(): number {
      return this.bb!.readFloat64(this.bb_pos + 64);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x00
     * @param number x01
     * @param number x02
     * @param number x10
     * @param number x11
     * @param number x12
     * @param number x20
     * @param number x21
     * @param number x22
     * @returns flatbuffers.Offset
     */
    static createRotMatrix(builder: flatbuffers.Builder, x00: number, x01: number, x02: number, x10: number, x11: number, x12: number, x20: number, x21: number, x22: number): flatbuffers.Offset {
      builder.prep(8, 72);
      builder.writeFloat64(x22);
      builder.writeFloat64(x21);
      builder.writeFloat64(x20);
      builder.writeFloat64(x12);
      builder.writeFloat64(x11);
      builder.writeFloat64(x10);
      builder.writeFloat64(x02);
      builder.writeFloat64(x01);
      builder.writeFloat64(x00);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class Transform {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Transform
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Transform {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x00(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    x01(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    x02(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @returns number
     */
    tx(): number {
      return this.bb!.readFloat64(this.bb_pos + 24);
    };

    /**
     * @returns number
     */
    x10(): number {
      return this.bb!.readFloat64(this.bb_pos + 32);
    };

    /**
     * @returns number
     */
    x11(): number {
      return this.bb!.readFloat64(this.bb_pos + 40);
    };

    /**
     * @returns number
     */
    x12(): number {
      return this.bb!.readFloat64(this.bb_pos + 48);
    };

    /**
     * @returns number
     */
    ty(): number {
      return this.bb!.readFloat64(this.bb_pos + 56);
    };

    /**
     * @returns number
     */
    x20(): number {
      return this.bb!.readFloat64(this.bb_pos + 64);
    };

    /**
     * @returns number
     */
    x21(): number {
      return this.bb!.readFloat64(this.bb_pos + 72);
    };

    /**
     * @returns number
     */
    x22(): number {
      return this.bb!.readFloat64(this.bb_pos + 80);
    };

    /**
     * @returns number
     */
    tz(): number {
      return this.bb!.readFloat64(this.bb_pos + 88);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x00
     * @param number x01
     * @param number x02
     * @param number tx
     * @param number x10
     * @param number x11
     * @param number x12
     * @param number ty
     * @param number x20
     * @param number x21
     * @param number x22
     * @param number tz
     * @returns flatbuffers.Offset
     */
    static createTransform(builder: flatbuffers.Builder, x00: number, x01: number, x02: number, tx: number, x10: number, x11: number, x12: number, ty: number, x20: number, x21: number, x22: number, tz: number): flatbuffers.Offset {
      builder.prep(8, 96);
      builder.writeFloat64(tz);
      builder.writeFloat64(x22);
      builder.writeFloat64(x21);
      builder.writeFloat64(x20);
      builder.writeFloat64(ty);
      builder.writeFloat64(x12);
      builder.writeFloat64(x11);
      builder.writeFloat64(x10);
      builder.writeFloat64(tx);
      builder.writeFloat64(x02);
      builder.writeFloat64(x01);
      builder.writeFloat64(x00);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class Trans2x3 {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Trans2x3
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Trans2x3 {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x00(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    x01(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    tx(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @returns number
     */
    y00(): number {
      return this.bb!.readFloat64(this.bb_pos + 24);
    };

    /**
     * @returns number
     */
    y01(): number {
      return this.bb!.readFloat64(this.bb_pos + 32);
    };

    /**
     * @returns number
     */
    ty(): number {
      return this.bb!.readFloat64(this.bb_pos + 40);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x00
     * @param number x01
     * @param number tx
     * @param number y00
     * @param number y01
     * @param number ty
     * @returns flatbuffers.Offset
     */
    static createTrans2x3(builder: flatbuffers.Builder, x00: number, x01: number, tx: number, y00: number, y01: number, ty: number): flatbuffers.Offset {
      builder.prep(8, 48);
      builder.writeFloat64(ty);
      builder.writeFloat64(y01);
      builder.writeFloat64(y00);
      builder.writeFloat64(tx);
      builder.writeFloat64(x01);
      builder.writeFloat64(x00);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class FaceSymbology {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns FaceSymbology
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): FaceSymbology {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    useColor(): number {
      return this.bb!.readUint8(this.bb_pos);
    };

    /**
     * @returns number
     */
    useMaterial(): number {
      return this.bb!.readUint8(this.bb_pos + 1);
    };

    /**
     * @returns number
     */
    color(): number {
      return this.bb!.readUint32(this.bb_pos + 4);
    };

    /**
     * @returns flatbuffers.Long
     */
    materialId(): flatbuffers.Long {
      return this.bb!.readInt64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    transparency(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @param DPoint2d= obj
     * @returns DPoint2d|null
     */
    uv(obj?: DPoint2d): DPoint2d | null {
      return (obj || new DPoint2d()).__init(this.bb_pos + 24, this.bb!);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useColor
     * @param number useMaterial
     * @param number color
     * @param flatbuffers.Long materialId
     * @param number transparency
     * @param number uv_x
     * @param number uv_y
     * @returns flatbuffers.Offset
     */
    static createFaceSymbology(builder: flatbuffers.Builder, useColor: number, useMaterial: number, color: number, materialId: flatbuffers.Long, transparency: number, uv_x: number, uv_y: number): flatbuffers.Offset {
      builder.prep(8, 40);
      builder.prep(8, 16);
      builder.writeFloat64(uv_y);
      builder.writeFloat64(uv_x);
      builder.writeFloat64(transparency);
      builder.writeInt64(materialId);
      builder.writeInt32(color);
      builder.pad(2);
      builder.writeInt8(useMaterial);
      builder.writeInt8(useColor);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class FaceSymbologyIndex {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns FaceSymbologyIndex
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): FaceSymbologyIndex {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    faceIndex(): number {
      return this.bb!.readUint32(this.bb_pos);
    };

    /**
     * @returns number
     */
    symbIndex(): number {
      return this.bb!.readUint32(this.bb_pos + 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number faceIndex
     * @param number symbIndex
     * @returns flatbuffers.Offset
     */
    static createFaceSymbologyIndex(builder: flatbuffers.Builder, faceIndex: number, symbIndex: number): flatbuffers.Offset {
      builder.prep(4, 8);
      builder.writeInt32(symbIndex);
      builder.writeInt32(faceIndex);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class DRange1d {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DRange1d
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DRange1d {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    low(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    high(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number low
     * @param number high
     * @returns flatbuffers.Offset
     */
    static createDRange1d(builder: flatbuffers.Builder, low: number, high: number): flatbuffers.Offset {
      builder.prep(8, 16);
      builder.writeFloat64(high);
      builder.writeFloat64(low);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class PointPrimitive {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns PointPrimitive
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): PointPrimitive {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PointPrimitive= obj
     * @returns PointPrimitive
     */
    static getRootAsPointPrimitive(bb: flatbuffers.ByteBuffer, obj?: PointPrimitive): PointPrimitive {
      return (obj || new PointPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PointPrimitive= obj
     * @returns PointPrimitive
     */
    static getSizePrefixedRootAsPointPrimitive(bb: flatbuffers.ByteBuffer, obj?: PointPrimitive): PointPrimitive {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new PointPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param number index
     * @param DPoint3d= obj
     * @returns DPoint3d
     */
    coords(index: number, obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? (obj || new DPoint3d()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 24, this.bb!) : null;
    };

    /**
     * @returns number
     */
    coordsLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns BoundaryType
     */
    boundary(): BoundaryType {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : BoundaryType.None;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startPointPrimitive(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset coordsOffset
     */
    static addCoords(builder: flatbuffers.Builder, coordsOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, coordsOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startCoordsVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(24, numElems, 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param BoundaryType boundary
     */
    static addBoundary(builder: flatbuffers.Builder, boundary: BoundaryType) {
      builder.addFieldInt8(1, boundary, BoundaryType.None);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endPointPrimitive(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createPointPrimitive(builder: flatbuffers.Builder, coordsOffset: flatbuffers.Offset, boundary: BoundaryType): flatbuffers.Offset {
      PointPrimitive.startPointPrimitive(builder);
      PointPrimitive.addCoords(builder, coordsOffset);
      PointPrimitive.addBoundary(builder, boundary);
      return PointPrimitive.endPointPrimitive(builder);
    }
  }

  /**
   * @constructor
   */
  export class PointPrimitive2d {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns PointPrimitive2d
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): PointPrimitive2d {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PointPrimitive2d= obj
     * @returns PointPrimitive2d
     */
    static getRootAsPointPrimitive2d(bb: flatbuffers.ByteBuffer, obj?: PointPrimitive2d): PointPrimitive2d {
      return (obj || new PointPrimitive2d()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param PointPrimitive2d= obj
     * @returns PointPrimitive2d
     */
    static getSizePrefixedRootAsPointPrimitive2d(bb: flatbuffers.ByteBuffer, obj?: PointPrimitive2d): PointPrimitive2d {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new PointPrimitive2d()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param number index
     * @param DPoint2d= obj
     * @returns DPoint2d
     */
    coords(index: number, obj?: DPoint2d): DPoint2d | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? (obj || new DPoint2d()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
    };

    /**
     * @returns number
     */
    coordsLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns BoundaryType
     */
    boundary(): BoundaryType {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : BoundaryType.None;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startPointPrimitive2d(builder: flatbuffers.Builder) {
      builder.startObject(2);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset coordsOffset
     */
    static addCoords(builder: flatbuffers.Builder, coordsOffset: flatbuffers.Offset) {
      builder.addFieldOffset(0, coordsOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startCoordsVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(16, numElems, 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param BoundaryType boundary
     */
    static addBoundary(builder: flatbuffers.Builder, boundary: BoundaryType) {
      builder.addFieldInt8(1, boundary, BoundaryType.None);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endPointPrimitive2d(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createPointPrimitive2d(builder: flatbuffers.Builder, coordsOffset: flatbuffers.Offset, boundary: BoundaryType): flatbuffers.Offset {
      PointPrimitive2d.startPointPrimitive2d(builder);
      PointPrimitive2d.addCoords(builder, coordsOffset);
      PointPrimitive2d.addBoundary(builder, boundary);
      return PointPrimitive2d.endPointPrimitive2d(builder);
    }
  }

  /**
   * @constructor
   */
  export class ArcPrimitive {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns ArcPrimitive
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): ArcPrimitive {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param ArcPrimitive= obj
     * @returns ArcPrimitive
     */
    static getRootAsArcPrimitive(bb: flatbuffers.ByteBuffer, obj?: ArcPrimitive): ArcPrimitive {
      return (obj || new ArcPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param ArcPrimitive= obj
     * @returns ArcPrimitive
     */
    static getSizePrefixedRootAsArcPrimitive(bb: flatbuffers.ByteBuffer, obj?: ArcPrimitive): ArcPrimitive {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new ArcPrimitive()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    center(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DVec3d= obj
     * @returns DVec3d|null
     */
    vector0(obj?: DVec3d): DVec3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? (obj || new DVec3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DVec3d= obj
     * @returns DVec3d|null
     */
    vector90(obj?: DVec3d): DVec3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? (obj || new DVec3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns number
     */
    start(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    sweep(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns BoundaryType
     */
    boundary(): BoundaryType {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : BoundaryType.None;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startArcPrimitive(builder: flatbuffers.Builder) {
      builder.startObject(6);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset centerOffset
     */
    static addCenter(builder: flatbuffers.Builder, centerOffset: flatbuffers.Offset) {
      builder.addFieldStruct(0, centerOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset vector0Offset
     */
    static addVector0(builder: flatbuffers.Builder, vector0Offset: flatbuffers.Offset) {
      builder.addFieldStruct(1, vector0Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset vector90Offset
     */
    static addVector90(builder: flatbuffers.Builder, vector90Offset: flatbuffers.Offset) {
      builder.addFieldStruct(2, vector90Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number start
     */
    static addStart(builder: flatbuffers.Builder, start: number) {
      builder.addFieldFloat64(3, start, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number sweep
     */
    static addSweep(builder: flatbuffers.Builder, sweep: number) {
      builder.addFieldFloat64(4, sweep, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param BoundaryType boundary
     */
    static addBoundary(builder: flatbuffers.Builder, boundary: BoundaryType) {
      builder.addFieldInt8(5, boundary, BoundaryType.None);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endArcPrimitive(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createArcPrimitive(builder: flatbuffers.Builder, centerOffset: flatbuffers.Offset, vector0Offset: flatbuffers.Offset, vector90Offset: flatbuffers.Offset, start: number, sweep: number, boundary: BoundaryType): flatbuffers.Offset {
      ArcPrimitive.startArcPrimitive(builder);
      ArcPrimitive.addCenter(builder, centerOffset);
      ArcPrimitive.addVector0(builder, vector0Offset);
      ArcPrimitive.addVector90(builder, vector90Offset);
      ArcPrimitive.addStart(builder, start);
      ArcPrimitive.addSweep(builder, sweep);
      ArcPrimitive.addBoundary(builder, boundary);
      return ArcPrimitive.endArcPrimitive(builder);
    }
  }

  /**
   * @constructor
   */
  export class BRepData {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns BRepData
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): BRepData {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BRepData= obj
     * @returns BRepData
     */
    static getRootAsBRepData(bb: flatbuffers.ByteBuffer, obj?: BRepData): BRepData {
      return (obj || new BRepData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BRepData= obj
     * @returns BRepData
     */
    static getSizePrefixedRootAsBRepData(bb: flatbuffers.ByteBuffer, obj?: BRepData): BRepData {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new BRepData()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param Transform= obj
     * @returns Transform|null
     */
    entityTransform(obj?: Transform): Transform | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? (obj || new Transform()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns BRepType
     */
    brepType(): BRepType {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : BRepType.Solid;
    };

    /**
     * @param number index
     * @returns number
     */
    entityData(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
    };

    /**
     * @returns number
     */
    entityDataLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint8Array
     */
    entityDataArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param number index
     * @param FaceSymbology= obj
     * @returns FaceSymbology
     */
    symbology(index: number, obj?: FaceSymbology): FaceSymbology | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? (obj || new FaceSymbology()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 40, this.bb!) : null;
    };

    /**
     * @returns number
     */
    symbologyLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @param number index
     * @param FaceSymbologyIndex= obj
     * @returns FaceSymbologyIndex
     */
    symbologyIndex(index: number, obj?: FaceSymbologyIndex): FaceSymbologyIndex | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? (obj || new FaceSymbologyIndex()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 8, this.bb!) : null;
    };

    /**
     * @returns number
     */
    symbologyIndexLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startBRepData(builder: flatbuffers.Builder) {
      builder.startObject(5);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset entityTransformOffset
     */
    static addEntityTransform(builder: flatbuffers.Builder, entityTransformOffset: flatbuffers.Offset) {
      builder.addFieldStruct(0, entityTransformOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param BRepType brepType
     */
    static addBrepType(builder: flatbuffers.Builder, brepType: BRepType) {
      builder.addFieldInt8(1, brepType, BRepType.Solid);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset entityDataOffset
     */
    static addEntityData(builder: flatbuffers.Builder, entityDataOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, entityDataOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createEntityDataVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startEntityDataVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset symbologyOffset
     */
    static addSymbology(builder: flatbuffers.Builder, symbologyOffset: flatbuffers.Offset) {
      builder.addFieldOffset(3, symbologyOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startSymbologyVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(40, numElems, 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset symbologyIndexOffset
     */
    static addSymbologyIndex(builder: flatbuffers.Builder, symbologyIndexOffset: flatbuffers.Offset) {
      builder.addFieldOffset(4, symbologyIndexOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startSymbologyIndexVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(8, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endBRepData(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createBRepData(builder: flatbuffers.Builder, entityTransformOffset: flatbuffers.Offset, brepType: BRepType, entityDataOffset: flatbuffers.Offset, symbologyOffset: flatbuffers.Offset, symbologyIndexOffset: flatbuffers.Offset): flatbuffers.Offset {
      BRepData.startBRepData(builder);
      BRepData.addEntityTransform(builder, entityTransformOffset);
      BRepData.addBrepType(builder, brepType);
      BRepData.addEntityData(builder, entityDataOffset);
      BRepData.addSymbology(builder, symbologyOffset);
      BRepData.addSymbologyIndex(builder, symbologyIndexOffset);
      return BRepData.endBRepData(builder);
    }
  }

  /**
   * @constructor
   */
  export class Image {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Image
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Image {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Image= obj
     * @returns Image
     */
    static getRootAsImage(bb: flatbuffers.ByteBuffer, obj?: Image): Image {
      return (obj || new Image()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Image= obj
     * @returns Image
     */
    static getSizePrefixedRootAsImage(bb: flatbuffers.ByteBuffer, obj?: Image): Image {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new Image()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    drawBorder(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    useFillTint(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    tileCorner0(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    tileCorner1(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    tileCorner2(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    tileCorner3(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns number
     */
    width(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    height(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    format(): number {
      var offset = this.bb!.__offset(this.bb_pos, 20);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param number index
     * @returns number
     */
    byteData(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;
    };

    /**
     * @returns number
     */
    byteDataLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint8Array
     */
    byteDataArray(): Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @returns flatbuffers.Long
     */
    textureId(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 24);
      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startImage(builder: flatbuffers.Builder) {
      builder.startObject(11);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number drawBorder
     */
    static addDrawBorder(builder: flatbuffers.Builder, drawBorder: number) {
      builder.addFieldInt8(0, drawBorder, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useFillTint
     */
    static addUseFillTint(builder: flatbuffers.Builder, useFillTint: number) {
      builder.addFieldInt8(1, useFillTint, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset tileCorner0Offset
     */
    static addTileCorner0(builder: flatbuffers.Builder, tileCorner0Offset: flatbuffers.Offset) {
      builder.addFieldStruct(2, tileCorner0Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset tileCorner1Offset
     */
    static addTileCorner1(builder: flatbuffers.Builder, tileCorner1Offset: flatbuffers.Offset) {
      builder.addFieldStruct(3, tileCorner1Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset tileCorner2Offset
     */
    static addTileCorner2(builder: flatbuffers.Builder, tileCorner2Offset: flatbuffers.Offset) {
      builder.addFieldStruct(4, tileCorner2Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset tileCorner3Offset
     */
    static addTileCorner3(builder: flatbuffers.Builder, tileCorner3Offset: flatbuffers.Offset) {
      builder.addFieldStruct(5, tileCorner3Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number width
     */
    static addWidth(builder: flatbuffers.Builder, width: number) {
      builder.addFieldInt32(6, width, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number height
     */
    static addHeight(builder: flatbuffers.Builder, height: number) {
      builder.addFieldInt32(7, height, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number format
     */
    static addFormat(builder: flatbuffers.Builder, format: number) {
      builder.addFieldInt32(8, format, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset byteDataOffset
     */
    static addByteData(builder: flatbuffers.Builder, byteDataOffset: flatbuffers.Offset) {
      builder.addFieldOffset(9, byteDataOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createByteDataVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(1, data.length, 1);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt8(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startByteDataVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(1, numElems, 1);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long textureId
     */
    static addTextureId(builder: flatbuffers.Builder, textureId: flatbuffers.Long) {
      builder.addFieldInt64(10, textureId, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endImage(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createImage(builder: flatbuffers.Builder, drawBorder: number, useFillTint: number, tileCorner0Offset: flatbuffers.Offset, tileCorner1Offset: flatbuffers.Offset, tileCorner2Offset: flatbuffers.Offset, tileCorner3Offset: flatbuffers.Offset, width: number, height: number, format: number, byteDataOffset: flatbuffers.Offset, textureId: flatbuffers.Long): flatbuffers.Offset {
      Image.startImage(builder);
      Image.addDrawBorder(builder, drawBorder);
      Image.addUseFillTint(builder, useFillTint);
      Image.addTileCorner0(builder, tileCorner0Offset);
      Image.addTileCorner1(builder, tileCorner1Offset);
      Image.addTileCorner2(builder, tileCorner2Offset);
      Image.addTileCorner3(builder, tileCorner3Offset);
      Image.addWidth(builder, width);
      Image.addHeight(builder, height);
      Image.addFormat(builder, format);
      Image.addByteData(builder, byteDataOffset);
      Image.addTextureId(builder, textureId);
      return Image.endImage(builder);
    }
  }

  /**
   * @constructor
   */
  export class GeometryPart {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns GeometryPart
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): GeometryPart {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param GeometryPart= obj
     * @returns GeometryPart
     */
    static getRootAsGeometryPart(bb: flatbuffers.ByteBuffer, obj?: GeometryPart): GeometryPart {
      return (obj || new GeometryPart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param GeometryPart= obj
     * @returns GeometryPart
     */
    static getSizePrefixedRootAsGeometryPart(bb: flatbuffers.ByteBuffer, obj?: GeometryPart): GeometryPart {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new GeometryPart()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns flatbuffers.Long
     */
    geomPartId(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    origin(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns number
     */
    yaw(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    pitch(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    roll(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    scale(): number {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 1.0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startGeometryPart(builder: flatbuffers.Builder) {
      builder.startObject(6);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long geomPartId
     */
    static addGeomPartId(builder: flatbuffers.Builder, geomPartId: flatbuffers.Long) {
      builder.addFieldInt64(0, geomPartId, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset originOffset
     */
    static addOrigin(builder: flatbuffers.Builder, originOffset: flatbuffers.Offset) {
      builder.addFieldStruct(1, originOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number yaw
     */
    static addYaw(builder: flatbuffers.Builder, yaw: number) {
      builder.addFieldFloat64(2, yaw, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number pitch
     */
    static addPitch(builder: flatbuffers.Builder, pitch: number) {
      builder.addFieldFloat64(3, pitch, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number roll
     */
    static addRoll(builder: flatbuffers.Builder, roll: number) {
      builder.addFieldFloat64(4, roll, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number scale
     */
    static addScale(builder: flatbuffers.Builder, scale: number) {
      builder.addFieldFloat64(5, scale, 1.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endGeometryPart(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createGeometryPart(builder: flatbuffers.Builder, geomPartId: flatbuffers.Long, originOffset: flatbuffers.Offset, yaw: number, pitch: number, roll: number, scale: number): flatbuffers.Offset {
      GeometryPart.startGeometryPart(builder);
      GeometryPart.addGeomPartId(builder, geomPartId);
      GeometryPart.addOrigin(builder, originOffset);
      GeometryPart.addYaw(builder, yaw);
      GeometryPart.addPitch(builder, pitch);
      GeometryPart.addRoll(builder, roll);
      GeometryPart.addScale(builder, scale);
      return GeometryPart.endGeometryPart(builder);
    }
  }

  /**
   * @constructor
   */
  export class BasicSymbology {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns BasicSymbology
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): BasicSymbology {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BasicSymbology= obj
     * @returns BasicSymbology
     */
    static getRootAsBasicSymbology(bb: flatbuffers.ByteBuffer, obj?: BasicSymbology): BasicSymbology {
      return (obj || new BasicSymbology()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param BasicSymbology= obj
     * @returns BasicSymbology
     */
    static getSizePrefixedRootAsBasicSymbology(bb: flatbuffers.ByteBuffer, obj?: BasicSymbology): BasicSymbology {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new BasicSymbology()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns flatbuffers.Long
     */
    subCategoryId(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @returns number
     */
    color(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    weight(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns flatbuffers.Long
     */
    lineStyleId(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @returns number
     */
    transparency(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    displayPriority(): number {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns GeometryClass
     */
    geomClass(): GeometryClass {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : GeometryClass.Primary;
    };

    /**
     * @returns number
     */
    useColor(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    useWeight(): number {
      var offset = this.bb!.__offset(this.bb_pos, 20);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    useStyle(): number {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startBasicSymbology(builder: flatbuffers.Builder) {
      builder.startObject(10);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long subCategoryId
     */
    static addSubCategoryId(builder: flatbuffers.Builder, subCategoryId: flatbuffers.Long) {
      builder.addFieldInt64(0, subCategoryId, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number color
     */
    static addColor(builder: flatbuffers.Builder, color: number) {
      builder.addFieldInt32(1, color, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number weight
     */
    static addWeight(builder: flatbuffers.Builder, weight: number) {
      builder.addFieldInt32(2, weight, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long lineStyleId
     */
    static addLineStyleId(builder: flatbuffers.Builder, lineStyleId: flatbuffers.Long) {
      builder.addFieldInt64(3, lineStyleId, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number transparency
     */
    static addTransparency(builder: flatbuffers.Builder, transparency: number) {
      builder.addFieldFloat64(4, transparency, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number displayPriority
     */
    static addDisplayPriority(builder: flatbuffers.Builder, displayPriority: number) {
      builder.addFieldInt32(5, displayPriority, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param GeometryClass geomClass
     */
    static addGeomClass(builder: flatbuffers.Builder, geomClass: GeometryClass) {
      builder.addFieldInt8(6, geomClass, GeometryClass.Primary);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useColor
     */
    static addUseColor(builder: flatbuffers.Builder, useColor: number) {
      builder.addFieldInt8(7, useColor, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useWeight
     */
    static addUseWeight(builder: flatbuffers.Builder, useWeight: number) {
      builder.addFieldInt8(8, useWeight, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useStyle
     */
    static addUseStyle(builder: flatbuffers.Builder, useStyle: number) {
      builder.addFieldInt8(9, useStyle, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endBasicSymbology(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createBasicSymbology(builder: flatbuffers.Builder, subCategoryId: flatbuffers.Long, color: number, weight: number, lineStyleId: flatbuffers.Long, transparency: number, displayPriority: number, geomClass: GeometryClass, useColor: number, useWeight: number, useStyle: number): flatbuffers.Offset {
      BasicSymbology.startBasicSymbology(builder);
      BasicSymbology.addSubCategoryId(builder, subCategoryId);
      BasicSymbology.addColor(builder, color);
      BasicSymbology.addWeight(builder, weight);
      BasicSymbology.addLineStyleId(builder, lineStyleId);
      BasicSymbology.addTransparency(builder, transparency);
      BasicSymbology.addDisplayPriority(builder, displayPriority);
      BasicSymbology.addGeomClass(builder, geomClass);
      BasicSymbology.addUseColor(builder, useColor);
      BasicSymbology.addUseWeight(builder, useWeight);
      BasicSymbology.addUseStyle(builder, useStyle);
      return BasicSymbology.endBasicSymbology(builder);
    }
  }

  /**
   * @constructor
   */
  export class LineStyleModifiers {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns LineStyleModifiers
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): LineStyleModifiers {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param LineStyleModifiers= obj
     * @returns LineStyleModifiers
     */
    static getRootAsLineStyleModifiers(bb: flatbuffers.ByteBuffer, obj?: LineStyleModifiers): LineStyleModifiers {
      return (obj || new LineStyleModifiers()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param LineStyleModifiers= obj
     * @returns LineStyleModifiers
     */
    static getSizePrefixedRootAsLineStyleModifiers(bb: flatbuffers.ByteBuffer, obj?: LineStyleModifiers): LineStyleModifiers {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new LineStyleModifiers()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    modifiers(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    scale(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    dashScale(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    gapScale(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    startWidth(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    endWidth(): number {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    distPhase(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    fractPhase(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    normal(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 20);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns number
     */
    yaw(): number {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    pitch(): number {
      var offset = this.bb!.__offset(this.bb_pos, 24);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    roll(): number {
      var offset = this.bb!.__offset(this.bb_pos, 26);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startLineStyleModifiers(builder: flatbuffers.Builder) {
      builder.startObject(12);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number modifiers
     */
    static addModifiers(builder: flatbuffers.Builder, modifiers: number) {
      builder.addFieldInt32(0, modifiers, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number scale
     */
    static addScale(builder: flatbuffers.Builder, scale: number) {
      builder.addFieldFloat64(1, scale, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number dashScale
     */
    static addDashScale(builder: flatbuffers.Builder, dashScale: number) {
      builder.addFieldFloat64(2, dashScale, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number gapScale
     */
    static addGapScale(builder: flatbuffers.Builder, gapScale: number) {
      builder.addFieldFloat64(3, gapScale, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number startWidth
     */
    static addStartWidth(builder: flatbuffers.Builder, startWidth: number) {
      builder.addFieldFloat64(4, startWidth, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number endWidth
     */
    static addEndWidth(builder: flatbuffers.Builder, endWidth: number) {
      builder.addFieldFloat64(5, endWidth, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number distPhase
     */
    static addDistPhase(builder: flatbuffers.Builder, distPhase: number) {
      builder.addFieldFloat64(6, distPhase, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number fractPhase
     */
    static addFractPhase(builder: flatbuffers.Builder, fractPhase: number) {
      builder.addFieldFloat64(7, fractPhase, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset normalOffset
     */
    static addNormal(builder: flatbuffers.Builder, normalOffset: flatbuffers.Offset) {
      builder.addFieldStruct(8, normalOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number yaw
     */
    static addYaw(builder: flatbuffers.Builder, yaw: number) {
      builder.addFieldFloat64(9, yaw, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number pitch
     */
    static addPitch(builder: flatbuffers.Builder, pitch: number) {
      builder.addFieldFloat64(10, pitch, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number roll
     */
    static addRoll(builder: flatbuffers.Builder, roll: number) {
      builder.addFieldFloat64(11, roll, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endLineStyleModifiers(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createLineStyleModifiers(builder: flatbuffers.Builder, modifiers: number, scale: number, dashScale: number, gapScale: number, startWidth: number, endWidth: number, distPhase: number, fractPhase: number, normalOffset: flatbuffers.Offset, yaw: number, pitch: number, roll: number): flatbuffers.Offset {
      LineStyleModifiers.startLineStyleModifiers(builder);
      LineStyleModifiers.addModifiers(builder, modifiers);
      LineStyleModifiers.addScale(builder, scale);
      LineStyleModifiers.addDashScale(builder, dashScale);
      LineStyleModifiers.addGapScale(builder, gapScale);
      LineStyleModifiers.addStartWidth(builder, startWidth);
      LineStyleModifiers.addEndWidth(builder, endWidth);
      LineStyleModifiers.addDistPhase(builder, distPhase);
      LineStyleModifiers.addFractPhase(builder, fractPhase);
      LineStyleModifiers.addNormal(builder, normalOffset);
      LineStyleModifiers.addYaw(builder, yaw);
      LineStyleModifiers.addPitch(builder, pitch);
      LineStyleModifiers.addRoll(builder, roll);
      return LineStyleModifiers.endLineStyleModifiers(builder);
    }
  }

  /**
   * @constructor
   */
  export class Material {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns Material
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): Material {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Material= obj
     * @returns Material
     */
    static getRootAsMaterial(bb: flatbuffers.ByteBuffer, obj?: Material): Material {
      return (obj || new Material()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param Material= obj
     * @returns Material
     */
    static getSizePrefixedRootAsMaterial(bb: flatbuffers.ByteBuffer, obj?: Material): Material {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new Material()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    useMaterial(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns flatbuffers.Long
     */
    materialId(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    origin(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    size(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns number
     */
    yaw(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    pitch(): number {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    roll(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @param Trans2x3= obj
     * @returns Trans2x3|null
     */
    trans2x3(obj?: Trans2x3): Trans2x3 | null {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? (obj || new Trans2x3()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startMaterial(builder: flatbuffers.Builder) {
      builder.startObject(8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useMaterial
     */
    static addUseMaterial(builder: flatbuffers.Builder, useMaterial: number) {
      builder.addFieldInt8(0, useMaterial, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long materialId
     */
    static addMaterialId(builder: flatbuffers.Builder, materialId: flatbuffers.Long) {
      builder.addFieldInt64(1, materialId, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset originOffset
     */
    static addOrigin(builder: flatbuffers.Builder, originOffset: flatbuffers.Offset) {
      builder.addFieldStruct(2, originOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset sizeOffset
     */
    static addSize(builder: flatbuffers.Builder, sizeOffset: flatbuffers.Offset) {
      builder.addFieldStruct(3, sizeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number yaw
     */
    static addYaw(builder: flatbuffers.Builder, yaw: number) {
      builder.addFieldFloat64(4, yaw, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number pitch
     */
    static addPitch(builder: flatbuffers.Builder, pitch: number) {
      builder.addFieldFloat64(5, pitch, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number roll
     */
    static addRoll(builder: flatbuffers.Builder, roll: number) {
      builder.addFieldFloat64(6, roll, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset trans2x3Offset
     */
    static addTrans2x3(builder: flatbuffers.Builder, trans2x3Offset: flatbuffers.Offset) {
      builder.addFieldStruct(7, trans2x3Offset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endMaterial(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createMaterial(builder: flatbuffers.Builder, useMaterial: number, materialId: flatbuffers.Long, originOffset: flatbuffers.Offset, sizeOffset: flatbuffers.Offset, yaw: number, pitch: number, roll: number, trans2x3Offset: flatbuffers.Offset): flatbuffers.Offset {
      Material.startMaterial(builder);
      Material.addUseMaterial(builder, useMaterial);
      Material.addMaterialId(builder, materialId);
      Material.addOrigin(builder, originOffset);
      Material.addSize(builder, sizeOffset);
      Material.addYaw(builder, yaw);
      Material.addPitch(builder, pitch);
      Material.addRoll(builder, roll);
      Material.addTrans2x3(builder, trans2x3Offset);
      return Material.endMaterial(builder);
    }
  }

  /**
   * @constructor
   */
  export class ThematicSettings {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns ThematicSettings
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): ThematicSettings {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param ThematicSettings= obj
     * @returns ThematicSettings
     */
    static getRootAsThematicSettings(bb: flatbuffers.ByteBuffer, obj?: ThematicSettings): ThematicSettings {
      return (obj || new ThematicSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param ThematicSettings= obj
     * @returns ThematicSettings
     */
    static getSizePrefixedRootAsThematicSettings(bb: flatbuffers.ByteBuffer, obj?: ThematicSettings): ThematicSettings {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new ThematicSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    stepCount(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    margin(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    marginColor(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    mode(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    colorScheme(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @param DRange1d= obj
     * @returns DRange1d|null
     */
    range(obj?: DRange1d): DRange1d | null {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? (obj || new DRange1d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startThematicSettings(builder: flatbuffers.Builder) {
      builder.startObject(6);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number stepCount
     */
    static addStepCount(builder: flatbuffers.Builder, stepCount: number) {
      builder.addFieldInt32(0, stepCount, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number margin
     */
    static addMargin(builder: flatbuffers.Builder, margin: number) {
      builder.addFieldFloat64(1, margin, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number marginColor
     */
    static addMarginColor(builder: flatbuffers.Builder, marginColor: number) {
      builder.addFieldInt32(2, marginColor, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number mode
     */
    static addMode(builder: flatbuffers.Builder, mode: number) {
      builder.addFieldInt32(3, mode, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number colorScheme
     */
    static addColorScheme(builder: flatbuffers.Builder, colorScheme: number) {
      builder.addFieldInt32(4, colorScheme, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset rangeOffset
     */
    static addRange(builder: flatbuffers.Builder, rangeOffset: flatbuffers.Offset) {
      builder.addFieldStruct(5, rangeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endThematicSettings(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createThematicSettings(builder: flatbuffers.Builder, stepCount: number, margin: number, marginColor: number, mode: number, colorScheme: number, rangeOffset: flatbuffers.Offset): flatbuffers.Offset {
      ThematicSettings.startThematicSettings(builder);
      ThematicSettings.addStepCount(builder, stepCount);
      ThematicSettings.addMargin(builder, margin);
      ThematicSettings.addMarginColor(builder, marginColor);
      ThematicSettings.addMode(builder, mode);
      ThematicSettings.addColorScheme(builder, colorScheme);
      ThematicSettings.addRange(builder, rangeOffset);
      return ThematicSettings.endThematicSettings(builder);
    }
  }

  /**
   * @constructor
   */
  export class AreaFill {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns AreaFill
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): AreaFill {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param AreaFill= obj
     * @returns AreaFill
     */
    static getRootAsAreaFill(bb: flatbuffers.ByteBuffer, obj?: AreaFill): AreaFill {
      return (obj || new AreaFill()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param AreaFill= obj
     * @returns AreaFill
     */
    static getSizePrefixedRootAsAreaFill(bb: flatbuffers.ByteBuffer, obj?: AreaFill): AreaFill {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new AreaFill()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns FillDisplay
     */
    fill(): FillDisplay {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : FillDisplay.None;
    };

    /**
     * @returns number
     */
    color(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    useColor(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    backgroundFill(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    transparency(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns GradientMode
     */
    mode(): GradientMode {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : GradientMode.None;
    };

    /**
     * @returns number
     */
    flags(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    angle(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    tint(): number {
      var offset = this.bb!.__offset(this.bb_pos, 20);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    shift(): number {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @param number index
     * @returns number
     */
    colors(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 24);
      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
    };

    /**
     * @returns number
     */
    colorsLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 24);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint32Array
     */
    colorsArray(): Uint32Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 24);
      return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param number index
     * @returns number
     */
    values(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 26);
      return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;
    };

    /**
     * @returns number
     */
    valuesLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 26);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Float64Array
     */
    valuesArray(): Float64Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 26);
      return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param ThematicSettings= obj
     * @returns ThematicSettings|null
     */
    thematicSettings(obj?: ThematicSettings): ThematicSettings | null {
      var offset = this.bb!.__offset(this.bb_pos, 28);
      return offset ? (obj || new ThematicSettings()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startAreaFill(builder: flatbuffers.Builder) {
      builder.startObject(13);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param FillDisplay fill
     */
    static addFill(builder: flatbuffers.Builder, fill: FillDisplay) {
      builder.addFieldInt8(0, fill, FillDisplay.None);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number color
     */
    static addColor(builder: flatbuffers.Builder, color: number) {
      builder.addFieldInt32(1, color, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useColor
     */
    static addUseColor(builder: flatbuffers.Builder, useColor: number) {
      builder.addFieldInt8(2, useColor, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number backgroundFill
     */
    static addBackgroundFill(builder: flatbuffers.Builder, backgroundFill: number) {
      builder.addFieldInt8(3, backgroundFill, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number transparency
     */
    static addTransparency(builder: flatbuffers.Builder, transparency: number) {
      builder.addFieldFloat64(4, transparency, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param GradientMode mode
     */
    static addMode(builder: flatbuffers.Builder, mode: GradientMode) {
      builder.addFieldInt8(5, mode, GradientMode.None);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number flags
     */
    static addFlags(builder: flatbuffers.Builder, flags: number) {
      builder.addFieldInt16(6, flags, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number angle
     */
    static addAngle(builder: flatbuffers.Builder, angle: number) {
      builder.addFieldFloat64(7, angle, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number tint
     */
    static addTint(builder: flatbuffers.Builder, tint: number) {
      builder.addFieldFloat64(8, tint, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number shift
     */
    static addShift(builder: flatbuffers.Builder, shift: number) {
      builder.addFieldFloat64(9, shift, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset colorsOffset
     */
    static addColors(builder: flatbuffers.Builder, colorsOffset: flatbuffers.Offset) {
      builder.addFieldOffset(10, colorsOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createColorsVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(4, data.length, 4);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt32(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startColorsVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(4, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset valuesOffset
     */
    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {
      builder.addFieldOffset(11, valuesOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createValuesVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(8, data.length, 8);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addFloat64(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startValuesVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(8, numElems, 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset thematicSettingsOffset
     */
    static addThematicSettings(builder: flatbuffers.Builder, thematicSettingsOffset: flatbuffers.Offset) {
      builder.addFieldOffset(12, thematicSettingsOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endAreaFill(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createAreaFill(builder: flatbuffers.Builder, fill: FillDisplay, color: number, useColor: number, backgroundFill: number, transparency: number, mode: GradientMode, flags: number, angle: number, tint: number, shift: number, colorsOffset: flatbuffers.Offset, valuesOffset: flatbuffers.Offset, thematicSettingsOffset: flatbuffers.Offset): flatbuffers.Offset {
      AreaFill.startAreaFill(builder);
      AreaFill.addFill(builder, fill);
      AreaFill.addColor(builder, color);
      AreaFill.addUseColor(builder, useColor);
      AreaFill.addBackgroundFill(builder, backgroundFill);
      AreaFill.addTransparency(builder, transparency);
      AreaFill.addMode(builder, mode);
      AreaFill.addFlags(builder, flags);
      AreaFill.addAngle(builder, angle);
      AreaFill.addTint(builder, tint);
      AreaFill.addShift(builder, shift);
      AreaFill.addColors(builder, colorsOffset);
      AreaFill.addValues(builder, valuesOffset);
      AreaFill.addThematicSettings(builder, thematicSettingsOffset);
      return AreaFill.endAreaFill(builder);
    }
  }

  /**
   * @constructor
   */
  export class DwgHatchDefLine {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns DwgHatchDefLine
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): DwgHatchDefLine {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DwgHatchDefLine= obj
     * @returns DwgHatchDefLine
     */
    static getRootAsDwgHatchDefLine(bb: flatbuffers.ByteBuffer, obj?: DwgHatchDefLine): DwgHatchDefLine {
      return (obj || new DwgHatchDefLine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param DwgHatchDefLine= obj
     * @returns DwgHatchDefLine
     */
    static getSizePrefixedRootAsDwgHatchDefLine(bb: flatbuffers.ByteBuffer, obj?: DwgHatchDefLine): DwgHatchDefLine {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new DwgHatchDefLine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    angle(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @param DPoint2d= obj
     * @returns DPoint2d|null
     */
    through(obj?: DPoint2d): DPoint2d | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? (obj || new DPoint2d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param DPoint2d= obj
     * @returns DPoint2d|null
     */
    offset(obj?: DPoint2d): DPoint2d | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? (obj || new DPoint2d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param number index
     * @returns number
     */
    dashes(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readFloat64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : 0;
    };

    /**
     * @returns number
     */
    dashesLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Float64Array
     */
    dashesArray(): Float64Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? new Float64Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startDwgHatchDefLine(builder: flatbuffers.Builder) {
      builder.startObject(4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number angle
     */
    static addAngle(builder: flatbuffers.Builder, angle: number) {
      builder.addFieldFloat64(0, angle, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset throughOffset
     */
    static addThrough(builder: flatbuffers.Builder, throughOffset: flatbuffers.Offset) {
      builder.addFieldStruct(1, throughOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset offsetOffset
     */
    static addOffset(builder: flatbuffers.Builder, offsetOffset: flatbuffers.Offset) {
      builder.addFieldStruct(2, offsetOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset dashesOffset
     */
    static addDashes(builder: flatbuffers.Builder, dashesOffset: flatbuffers.Offset) {
      builder.addFieldOffset(3, dashesOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createDashesVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(8, data.length, 8);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addFloat64(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startDashesVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(8, numElems, 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endDwgHatchDefLine(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createDwgHatchDefLine(builder: flatbuffers.Builder, angle: number, throughOffset: flatbuffers.Offset, offsetOffset: flatbuffers.Offset, dashesOffset: flatbuffers.Offset): flatbuffers.Offset {
      DwgHatchDefLine.startDwgHatchDefLine(builder);
      DwgHatchDefLine.addAngle(builder, angle);
      DwgHatchDefLine.addThrough(builder, throughOffset);
      DwgHatchDefLine.addOffset(builder, offsetOffset);
      DwgHatchDefLine.addDashes(builder, dashesOffset);
      return DwgHatchDefLine.endDwgHatchDefLine(builder);
    }
  }

  /**
   * @constructor
   */
  export class AreaPattern {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns AreaPattern
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): AreaPattern {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param AreaPattern= obj
     * @returns AreaPattern
     */
    static getRootAsAreaPattern(bb: flatbuffers.ByteBuffer, obj?: AreaPattern): AreaPattern {
      return (obj || new AreaPattern()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param AreaPattern= obj
     * @returns AreaPattern
     */
    static getSizePrefixedRootAsAreaPattern(bb: flatbuffers.ByteBuffer, obj?: AreaPattern): AreaPattern {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new AreaPattern()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param DPoint3d= obj
     * @returns DPoint3d|null
     */
    origin(obj?: DPoint3d): DPoint3d | null {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? (obj || new DPoint3d()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param RotMatrix= obj
     * @returns RotMatrix|null
     */
    rotation(obj?: RotMatrix): RotMatrix | null {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? (obj || new RotMatrix()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @returns number
     */
    space1(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    space2(): number {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    angle1(): number {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    angle2(): number {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    scale(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    color(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    weight(): number {
      var offset = this.bb!.__offset(this.bb_pos, 20);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    useColor(): number {
      var offset = this.bb!.__offset(this.bb_pos, 22);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    useWeight(): number {
      var offset = this.bb!.__offset(this.bb_pos, 24);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    invisibleBoundary(): number {
      var offset = this.bb!.__offset(this.bb_pos, 26);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    snappable(): number {
      var offset = this.bb!.__offset(this.bb_pos, 28);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns flatbuffers.Long
     */
    symbolId(): flatbuffers.Long {
      var offset = this.bb!.__offset(this.bb_pos, 30);
      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
    };

    /**
     * @param number index
     * @param DwgHatchDefLine= obj
     * @returns DwgHatchDefLine
     */
    defLine(index: number, obj?: DwgHatchDefLine): DwgHatchDefLine | null {
      var offset = this.bb!.__offset(this.bb_pos, 32);
      return offset ? (obj || new DwgHatchDefLine()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
    };

    /**
     * @returns number
     */
    defLineLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 32);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startAreaPattern(builder: flatbuffers.Builder) {
      builder.startObject(15);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset originOffset
     */
    static addOrigin(builder: flatbuffers.Builder, originOffset: flatbuffers.Offset) {
      builder.addFieldStruct(0, originOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset rotationOffset
     */
    static addRotation(builder: flatbuffers.Builder, rotationOffset: flatbuffers.Offset) {
      builder.addFieldStruct(1, rotationOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number space1
     */
    static addSpace1(builder: flatbuffers.Builder, space1: number) {
      builder.addFieldFloat64(2, space1, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number space2
     */
    static addSpace2(builder: flatbuffers.Builder, space2: number) {
      builder.addFieldFloat64(3, space2, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number angle1
     */
    static addAngle1(builder: flatbuffers.Builder, angle1: number) {
      builder.addFieldFloat64(4, angle1, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number angle2
     */
    static addAngle2(builder: flatbuffers.Builder, angle2: number) {
      builder.addFieldFloat64(5, angle2, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number scale
     */
    static addScale(builder: flatbuffers.Builder, scale: number) {
      builder.addFieldFloat64(6, scale, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number color
     */
    static addColor(builder: flatbuffers.Builder, color: number) {
      builder.addFieldInt32(7, color, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number weight
     */
    static addWeight(builder: flatbuffers.Builder, weight: number) {
      builder.addFieldInt32(8, weight, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useColor
     */
    static addUseColor(builder: flatbuffers.Builder, useColor: number) {
      builder.addFieldInt8(9, useColor, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number useWeight
     */
    static addUseWeight(builder: flatbuffers.Builder, useWeight: number) {
      builder.addFieldInt8(10, useWeight, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number invisibleBoundary
     */
    static addInvisibleBoundary(builder: flatbuffers.Builder, invisibleBoundary: number) {
      builder.addFieldInt8(11, invisibleBoundary, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number snappable
     */
    static addSnappable(builder: flatbuffers.Builder, snappable: number) {
      builder.addFieldInt8(12, snappable, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Long symbolId
     */
    static addSymbolId(builder: flatbuffers.Builder, symbolId: flatbuffers.Long) {
      builder.addFieldInt64(13, symbolId, builder.createLong(0, 0));
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset defLineOffset
     */
    static addDefLine(builder: flatbuffers.Builder, defLineOffset: flatbuffers.Offset) {
      builder.addFieldOffset(14, defLineOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<flatbuffers.Offset> data
     * @returns flatbuffers.Offset
     */
    static createDefLineVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {
      builder.startVector(4, data.length, 4);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addOffset(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startDefLineVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(4, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endAreaPattern(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createAreaPattern(builder: flatbuffers.Builder, originOffset: flatbuffers.Offset, rotationOffset: flatbuffers.Offset, space1: number, space2: number, angle1: number, angle2: number, scale: number, color: number, weight: number, useColor: number, useWeight: number, invisibleBoundary: number, snappable: number, symbolId: flatbuffers.Long, defLineOffset: flatbuffers.Offset): flatbuffers.Offset {
      AreaPattern.startAreaPattern(builder);
      AreaPattern.addOrigin(builder, originOffset);
      AreaPattern.addRotation(builder, rotationOffset);
      AreaPattern.addSpace1(builder, space1);
      AreaPattern.addSpace2(builder, space2);
      AreaPattern.addAngle1(builder, angle1);
      AreaPattern.addAngle2(builder, angle2);
      AreaPattern.addScale(builder, scale);
      AreaPattern.addColor(builder, color);
      AreaPattern.addWeight(builder, weight);
      AreaPattern.addUseColor(builder, useColor);
      AreaPattern.addUseWeight(builder, useWeight);
      AreaPattern.addInvisibleBoundary(builder, invisibleBoundary);
      AreaPattern.addSnappable(builder, snappable);
      AreaPattern.addSymbolId(builder, symbolId);
      AreaPattern.addDefLine(builder, defLineOffset);
      return AreaPattern.endAreaPattern(builder);
    }
  }

  /**
   * @constructor
   */
  export class TextStringTransform {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TextStringTransform
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TextStringTransform {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    form3d00(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    form3d01(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    form3d02(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @returns number
     */
    form3d03(): number {
      return this.bb!.readFloat64(this.bb_pos + 24);
    };

    /**
     * @returns number
     */
    form3d10(): number {
      return this.bb!.readFloat64(this.bb_pos + 32);
    };

    /**
     * @returns number
     */
    form3d11(): number {
      return this.bb!.readFloat64(this.bb_pos + 40);
    };

    /**
     * @returns number
     */
    form3d12(): number {
      return this.bb!.readFloat64(this.bb_pos + 48);
    };

    /**
     * @returns number
     */
    form3d13(): number {
      return this.bb!.readFloat64(this.bb_pos + 56);
    };

    /**
     * @returns number
     */
    form3d20(): number {
      return this.bb!.readFloat64(this.bb_pos + 64);
    };

    /**
     * @returns number
     */
    form3d21(): number {
      return this.bb!.readFloat64(this.bb_pos + 72);
    };

    /**
     * @returns number
     */
    form3d22(): number {
      return this.bb!.readFloat64(this.bb_pos + 80);
    };

    /**
     * @returns number
     */
    form3d23(): number {
      return this.bb!.readFloat64(this.bb_pos + 88);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number form3d00
     * @param number form3d01
     * @param number form3d02
     * @param number form3d03
     * @param number form3d10
     * @param number form3d11
     * @param number form3d12
     * @param number form3d13
     * @param number form3d20
     * @param number form3d21
     * @param number form3d22
     * @param number form3d23
     * @returns flatbuffers.Offset
     */
    static createTextStringTransform(builder: flatbuffers.Builder, form3d00: number, form3d01: number, form3d02: number, form3d03: number, form3d10: number, form3d11: number, form3d12: number, form3d13: number, form3d20: number, form3d21: number, form3d22: number, form3d23: number): flatbuffers.Offset {
      builder.prep(8, 96);
      builder.writeFloat64(form3d23);
      builder.writeFloat64(form3d22);
      builder.writeFloat64(form3d21);
      builder.writeFloat64(form3d20);
      builder.writeFloat64(form3d13);
      builder.writeFloat64(form3d12);
      builder.writeFloat64(form3d11);
      builder.writeFloat64(form3d10);
      builder.writeFloat64(form3d03);
      builder.writeFloat64(form3d02);
      builder.writeFloat64(form3d01);
      builder.writeFloat64(form3d00);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class TextStringRange {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TextStringRange
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TextStringRange {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    lowx(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    lowy(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @returns number
     */
    highx(): number {
      return this.bb!.readFloat64(this.bb_pos + 16);
    };

    /**
     * @returns number
     */
    highy(): number {
      return this.bb!.readFloat64(this.bb_pos + 24);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number lowx
     * @param number lowy
     * @param number highx
     * @param number highy
     * @returns flatbuffers.Offset
     */
    static createTextStringRange(builder: flatbuffers.Builder, lowx: number, lowy: number, highx: number, highy: number): flatbuffers.Offset {
      builder.prep(8, 32);
      builder.writeFloat64(highy);
      builder.writeFloat64(highx);
      builder.writeFloat64(lowy);
      builder.writeFloat64(lowx);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class TextStringGlyphOrigin {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TextStringGlyphOrigin
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TextStringGlyphOrigin {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @returns number
     */
    x(): number {
      return this.bb!.readFloat64(this.bb_pos);
    };

    /**
     * @returns number
     */
    y(): number {
      return this.bb!.readFloat64(this.bb_pos + 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number x
     * @param number y
     * @returns flatbuffers.Offset
     */
    static createTextStringGlyphOrigin(builder: flatbuffers.Builder, x: number, y: number): flatbuffers.Offset {
      builder.prep(8, 16);
      builder.writeFloat64(y);
      builder.writeFloat64(x);
      return builder.offset();
    };

  }

  /**
   * @constructor
   */
  export class TextStringStyle {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TextStringStyle
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TextStringStyle {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TextStringStyle= obj
     * @returns TextStringStyle
     */
    static getRootAsTextStringStyle(bb: flatbuffers.ByteBuffer, obj?: TextStringStyle): TextStringStyle {
      return (obj || new TextStringStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TextStringStyle= obj
     * @returns TextStringStyle
     */
    static getSizePrefixedRootAsTextStringStyle(bb: flatbuffers.ByteBuffer, obj?: TextStringStyle): TextStringStyle {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new TextStringStyle()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    majorVersion(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    minorVersion(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    fontId(): number {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
    };

    /**
     * @returns boolean
     */
    isBold(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @returns boolean
     */
    isItalic(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @returns boolean
     */
    isUnderlined(): boolean {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
    };

    /**
     * @returns number
     */
    height(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @returns number
     */
    widthFactor(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startTextStringStyle(builder: flatbuffers.Builder) {
      builder.startObject(8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number majorVersion
     */
    static addMajorVersion(builder: flatbuffers.Builder, majorVersion: number) {
      builder.addFieldInt8(0, majorVersion, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number minorVersion
     */
    static addMinorVersion(builder: flatbuffers.Builder, minorVersion: number) {
      builder.addFieldInt8(1, minorVersion, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number fontId
     */
    static addFontId(builder: flatbuffers.Builder, fontId: number) {
      builder.addFieldInt32(2, fontId, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isBold
     */
    static addIsBold(builder: flatbuffers.Builder, isBold: boolean) {
      builder.addFieldInt8(3, +isBold, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isItalic
     */
    static addIsItalic(builder: flatbuffers.Builder, isItalic: boolean) {
      builder.addFieldInt8(4, +isItalic, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param boolean isUnderlined
     */
    static addIsUnderlined(builder: flatbuffers.Builder, isUnderlined: boolean) {
      builder.addFieldInt8(5, +isUnderlined, +false);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number height
     */
    static addHeight(builder: flatbuffers.Builder, height: number) {
      builder.addFieldFloat64(6, height, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number widthFactor
     */
    static addWidthFactor(builder: flatbuffers.Builder, widthFactor: number) {
      builder.addFieldFloat64(7, widthFactor, 0.0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endTextStringStyle(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createTextStringStyle(builder: flatbuffers.Builder, majorVersion: number, minorVersion: number, fontId: number, isBold: boolean, isItalic: boolean, isUnderlined: boolean, height: number, widthFactor: number): flatbuffers.Offset {
      TextStringStyle.startTextStringStyle(builder);
      TextStringStyle.addMajorVersion(builder, majorVersion);
      TextStringStyle.addMinorVersion(builder, minorVersion);
      TextStringStyle.addFontId(builder, fontId);
      TextStringStyle.addIsBold(builder, isBold);
      TextStringStyle.addIsItalic(builder, isItalic);
      TextStringStyle.addIsUnderlined(builder, isUnderlined);
      TextStringStyle.addHeight(builder, height);
      TextStringStyle.addWidthFactor(builder, widthFactor);
      return TextStringStyle.endTextStringStyle(builder);
    }
  }

  /**
   * @constructor
   */
  export class TextString {
    bb: flatbuffers.ByteBuffer | null = null;

    bb_pos: number = 0;
    /**
     * @param number i
     * @param flatbuffers.ByteBuffer bb
     * @returns TextString
     */
    __init(i: number, bb: flatbuffers.ByteBuffer): TextString {
      this.bb_pos = i;
      this.bb = bb;
      return this;
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TextString= obj
     * @returns TextString
     */
    static getRootAsTextString(bb: flatbuffers.ByteBuffer, obj?: TextString): TextString {
      return (obj || new TextString()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @param flatbuffers.ByteBuffer bb
     * @param TextString= obj
     * @returns TextString
     */
    static getSizePrefixedRootAsTextString(bb: flatbuffers.ByteBuffer, obj?: TextString): TextString {
      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
      return (obj || new TextString()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };

    /**
     * @returns number
     */
    majorVersion(): number {
      var offset = this.bb!.__offset(this.bb_pos, 4);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @returns number
     */
    minorVersion(): number {
      var offset = this.bb!.__offset(this.bb_pos, 6);
      return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
    };

    /**
     * @param flatbuffers.Encoding= optionalEncoding
     * @returns string|Uint8Array|null
     */
    text(): string | null
    text(optionalEncoding: flatbuffers.Encoding): string | Uint8Array | null
    text(optionalEncoding?: any): string | Uint8Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 8);
      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
    };

    /**
     * @param TextStringStyle= obj
     * @returns TextStringStyle|null
     */
    style(obj?: TextStringStyle): TextStringStyle | null {
      var offset = this.bb!.__offset(this.bb_pos, 10);
      return offset ? (obj || new TextStringStyle()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
    };

    /**
     * @param TextStringTransform= obj
     * @returns TextStringTransform|null
     */
    transform(obj?: TextStringTransform): TextStringTransform | null {
      var offset = this.bb!.__offset(this.bb_pos, 12);
      return offset ? (obj || new TextStringTransform()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param TextStringRange= obj
     * @returns TextStringRange|null
     */
    range(obj?: TextStringRange): TextStringRange | null {
      var offset = this.bb!.__offset(this.bb_pos, 14);
      return offset ? (obj || new TextStringRange()).__init(this.bb_pos + offset, this.bb!) : null;
    };

    /**
     * @param number index
     * @returns number
     */
    glyphIds(index: number): number | null {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;
    };

    /**
     * @returns number
     */
    glyphIdsLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @returns Uint32Array
     */
    glyphIdsArray(): Uint32Array | null {
      var offset = this.bb!.__offset(this.bb_pos, 16);
      return offset ? new Uint32Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
    };

    /**
     * @param number index
     * @param TextStringGlyphOrigin= obj
     * @returns TextStringGlyphOrigin
     */
    glyphOrigins(index: number, obj?: TextStringGlyphOrigin): TextStringGlyphOrigin | null {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? (obj || new TextStringGlyphOrigin()).__init(this.bb!.__vector(this.bb_pos + offset) + index * 16, this.bb!) : null;
    };

    /**
     * @returns number
     */
    glyphOriginsLength(): number {
      var offset = this.bb!.__offset(this.bb_pos, 18);
      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
    };

    /**
     * @param flatbuffers.Builder builder
     */
    static startTextString(builder: flatbuffers.Builder) {
      builder.startObject(8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number majorVersion
     */
    static addMajorVersion(builder: flatbuffers.Builder, majorVersion: number) {
      builder.addFieldInt8(0, majorVersion, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number minorVersion
     */
    static addMinorVersion(builder: flatbuffers.Builder, minorVersion: number) {
      builder.addFieldInt8(1, minorVersion, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset textOffset
     */
    static addText(builder: flatbuffers.Builder, textOffset: flatbuffers.Offset) {
      builder.addFieldOffset(2, textOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset styleOffset
     */
    static addStyle(builder: flatbuffers.Builder, styleOffset: flatbuffers.Offset) {
      builder.addFieldOffset(3, styleOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset transformOffset
     */
    static addTransform(builder: flatbuffers.Builder, transformOffset: flatbuffers.Offset) {
      builder.addFieldStruct(4, transformOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset rangeOffset
     */
    static addRange(builder: flatbuffers.Builder, rangeOffset: flatbuffers.Offset) {
      builder.addFieldStruct(5, rangeOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset glyphIdsOffset
     */
    static addGlyphIds(builder: flatbuffers.Builder, glyphIdsOffset: flatbuffers.Offset) {
      builder.addFieldOffset(6, glyphIdsOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param Array.<number> data
     * @returns flatbuffers.Offset
     */
    static createGlyphIdsVector(builder: flatbuffers.Builder, data: number[] | Uint8Array): flatbuffers.Offset {
      builder.startVector(4, data.length, 4);
      for (var i = data.length - 1; i >= 0; i--) {
        builder.addInt32(data[i]);
      }
      return builder.endVector();
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startGlyphIdsVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(4, numElems, 4);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param flatbuffers.Offset glyphOriginsOffset
     */
    static addGlyphOrigins(builder: flatbuffers.Builder, glyphOriginsOffset: flatbuffers.Offset) {
      builder.addFieldOffset(7, glyphOriginsOffset, 0);
    };

    /**
     * @param flatbuffers.Builder builder
     * @param number numElems
     */
    static startGlyphOriginsVector(builder: flatbuffers.Builder, numElems: number) {
      builder.startVector(16, numElems, 8);
    };

    /**
     * @param flatbuffers.Builder builder
     * @returns flatbuffers.Offset
     */
    static endTextString(builder: flatbuffers.Builder): flatbuffers.Offset {
      var offset = builder.endObject();
      return offset;
    };

    static createTextString(builder: flatbuffers.Builder, majorVersion: number, minorVersion: number, textOffset: flatbuffers.Offset, styleOffset: flatbuffers.Offset, transformOffset: flatbuffers.Offset, rangeOffset: flatbuffers.Offset, glyphIdsOffset: flatbuffers.Offset, glyphOriginsOffset: flatbuffers.Offset): flatbuffers.Offset {
      TextString.startTextString(builder);
      TextString.addMajorVersion(builder, majorVersion);
      TextString.addMinorVersion(builder, minorVersion);
      TextString.addText(builder, textOffset);
      TextString.addStyle(builder, styleOffset);
      TextString.addTransform(builder, transformOffset);
      TextString.addRange(builder, rangeOffset);
      TextString.addGlyphIds(builder, glyphIdsOffset);
      TextString.addGlyphOrigins(builder, glyphOriginsOffset);
      return TextString.endTextString(builder);
    }
  }

}
