// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContentBuilder createPropertyDescription creates description with choices 1`] = `
Object {
  "displayLabel": "Simple Field",
  "enum": Object {
    "choices": Array [
      Object {
        "label": "Enum 1",
        "value": 1,
      },
      Object {
        "label": "Enum 2",
        "value": 2,
      },
    ],
    "isStrict": true,
  },
  "name": "SimpleField",
  "typename": "enum",
}
`;

exports[`ContentBuilder createPropertyDescription creates description with editor 1`] = `
Object {
  "displayLabel": "Simple Field",
  "editor": Object {
    "name": "EditorName",
    "params": Array [],
  },
  "name": "SimpleField",
  "typename": "string",
}
`;

exports[`ContentBuilder createPropertyDescription creates description with renderer 1`] = `
Object {
  "displayLabel": "Simple Field",
  "name": "SimpleField",
  "renderer": Object {
    "name": "RendererName",
  },
  "typename": "string",
}
`;

exports[`ContentBuilder createPropertyDescription creates simple description 1`] = `
Object {
  "displayLabel": "Simple Field",
  "name": "SimpleField",
  "typename": "string",
}
`;

exports[`ContentBuilder createPropertyRecord with arrays creates record with array value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "myarray[]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "description": "some display value 1",
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "SimpleField",
            "typename": "MyType",
          },
          "value": Object {
            "displayValue": "some display value 1",
            "value": "some value 1",
            "valueFormat": 0,
          },
        },
        PropertyRecord {
          "description": "some display value 2",
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "SimpleField",
            "typename": "MyType",
          },
          "value": Object {
            "displayValue": "some display value 2",
            "value": "some value 2",
            "valueFormat": 0,
          },
        },
      ],
      "itemsTypeName": "MyType",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with arrays creates record with merged array value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "isMerged": true,
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "myarray[]",
    },
    "value": Object {
      "displayValue": "merged",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with arrays creates record with nested array value 1`] = `
Object {
  "field": "nested-array-field",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "root-field$nested-array-field",
      "typename": "myarray[][]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$nested-array-field",
            "typename": "MyArray[]",
          },
          "value": Object {
            "items": Array [
              PropertyRecord {
                "description": "some display value 1",
                "property": Object {
                  "displayLabel": "Simple Field",
                  "name": "root-field$nested-array-field",
                  "typename": "MyType",
                },
                "value": Object {
                  "displayValue": "some display value 1",
                  "value": "some value 1",
                  "valueFormat": 0,
                },
              },
              PropertyRecord {
                "description": "some display value 2",
                "property": Object {
                  "displayLabel": "Simple Field",
                  "name": "root-field$nested-array-field",
                  "typename": "MyType",
                },
                "value": Object {
                  "displayValue": "some display value 2",
                  "value": "some value 2",
                  "valueFormat": 0,
                },
              },
            ],
            "itemsTypeName": "MyType",
            "valueFormat": 1,
          },
        },
        PropertyRecord {
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$nested-array-field",
            "typename": "MyArray[]",
          },
          "value": Object {
            "items": Array [
              PropertyRecord {
                "description": "some display value 3",
                "property": Object {
                  "displayLabel": "Simple Field",
                  "name": "root-field$nested-array-field",
                  "typename": "MyType",
                },
                "value": Object {
                  "displayValue": "some display value 3",
                  "value": "some value 3",
                  "valueFormat": 0,
                },
              },
              PropertyRecord {
                "description": "some display value 4",
                "property": Object {
                  "displayLabel": "Simple Field",
                  "name": "root-field$nested-array-field",
                  "typename": "MyType",
                },
                "value": Object {
                  "displayValue": "some display value 4",
                  "value": "some value 4",
                  "valueFormat": 0,
                },
              },
            ],
            "itemsTypeName": "MyType",
            "valueFormat": 1,
          },
        },
      ],
      "itemsTypeName": "MyArray[]",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with arrays creates record with undefined array value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "myarray[]",
    },
    "value": Object {
      "displayValue": "",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with nested content creates record with for nested content value without child records 1`] = `
Object {
  "field": "root-field",
  "record": PropertyRecord {
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Nested Content",
      "name": "root-field",
      "typename": "NestedContentFieldType[]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "property": Object {
            "displayLabel": "Nested Content",
            "name": "root-field",
            "typename": "NestedContentFieldType",
          },
          "value": Object {
            "members": Object {
              "nested-field": PropertyRecord {
                "isReadonly": true,
                "property": Object {
                  "displayLabel": "Nested Content",
                  "name": "root-field$nested-field",
                  "typename": "NestedContentFieldType[]",
                },
                "value": Object {
                  "items": Array [
                    PropertyRecord {
                      "property": Object {
                        "displayLabel": "Nested Content",
                        "name": "root-field$nested-field",
                        "typename": "NestedContentFieldType",
                      },
                      "value": Object {
                        "members": Object {},
                        "valueFormat": 2,
                      },
                    },
                  ],
                  "itemsTypeName": "NestedContentFieldType",
                  "valueFormat": 1,
                },
              },
            },
            "valueFormat": 2,
          },
        },
      ],
      "itemsTypeName": "NestedContentFieldType",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with nested content creates record with merged nesting content value 1`] = `
Object {
  "field": "root-field",
  "record": PropertyRecord {
    "isMerged": true,
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Nested Content",
      "name": "root-field",
      "typename": "NestedContentFieldType",
    },
    "value": Object {
      "displayValue": "merged",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with nested content creates record with multiple nested content values 1`] = `
Object {
  "field": "root-field",
  "record": PropertyRecord {
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Nested Content",
      "name": "root-field",
      "typename": "NestedContentFieldType[]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "property": Object {
            "displayLabel": "Nested Content",
            "name": "root-field",
            "typename": "NestedContentFieldType",
          },
          "value": Object {
            "members": Object {
              "nested-field": PropertyRecord {
                "description": "some display value 1",
                "property": Object {
                  "displayLabel": "Simple Field",
                  "name": "root-field$nested-field",
                  "typename": "string",
                },
                "value": Object {
                  "displayValue": "some display value 1",
                  "value": "some value 1",
                  "valueFormat": 0,
                },
              },
            },
            "valueFormat": 2,
          },
        },
        PropertyRecord {
          "property": Object {
            "displayLabel": "Nested Content",
            "name": "root-field",
            "typename": "NestedContentFieldType",
          },
          "value": Object {
            "members": Object {
              "nested-field": PropertyRecord {
                "description": "some display value 2",
                "property": Object {
                  "displayLabel": "Simple Field",
                  "name": "root-field$nested-field",
                  "typename": "string",
                },
                "value": Object {
                  "displayValue": "some display value 2",
                  "value": "some value 2",
                  "valueFormat": 0,
                },
              },
            },
            "valueFormat": 2,
          },
        },
      ],
      "itemsTypeName": "NestedContentFieldType",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with nested content creates record with single deeply nested content value 1`] = `
Object {
  "field": "root-field",
  "record": PropertyRecord {
    "autoExpand": true,
    "extendedData": Object {
      "test": "extended-data",
    },
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Nested Content",
      "name": "root-field",
      "typename": "NestedContentFieldType[]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "autoExpand": true,
          "isReadonly": true,
          "property": Object {
            "displayLabel": "Nested Content",
            "name": "root-field",
            "typename": "NestedContentFieldType",
          },
          "value": Object {
            "members": Object {
              "nested-field": PropertyRecord {
                "isReadonly": true,
                "property": Object {
                  "displayLabel": "Nested Content",
                  "name": "root-field$nested-field",
                  "typename": "NestedContentFieldType[]",
                },
                "value": Object {
                  "items": Array [
                    PropertyRecord {
                      "property": Object {
                        "displayLabel": "Nested Content",
                        "name": "root-field$nested-field",
                        "typename": "NestedContentFieldType",
                      },
                      "value": Object {
                        "members": Object {
                          "deeply-nested-field": PropertyRecord {
                            "description": "some display value",
                            "property": Object {
                              "displayLabel": "Simple Field",
                              "name": "root-field$nested-field$deeply-nested-field",
                              "typename": "string",
                            },
                            "value": Object {
                              "displayValue": "some display value",
                              "value": "some value",
                              "valueFormat": 0,
                            },
                          },
                        },
                        "valueFormat": 2,
                      },
                    },
                  ],
                  "itemsTypeName": "NestedContentFieldType",
                  "valueFormat": 1,
                },
              },
            },
            "valueFormat": 2,
          },
        },
      ],
      "itemsTypeName": "NestedContentFieldType",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with deeply nested primitive value 1`] = `
Object {
  "field": "deeply-nested-field",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "root-field$nested-field$deeply-nested-field",
      "typename": "string[]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "description": "some display value 1",
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$nested-field$deeply-nested-field",
            "typename": "string",
          },
          "value": Object {
            "displayValue": "some display value 1",
            "value": "some value 1",
            "valueFormat": 0,
          },
        },
        PropertyRecord {
          "description": "some display value 2",
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$nested-field$deeply-nested-field",
            "typename": "string",
          },
          "value": Object {
            "displayValue": "some display value 2",
            "value": "some value 2",
            "valueFormat": 0,
          },
        },
      ],
      "itemsTypeName": "string",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with deeply nested primitive value when nested value is not set 1`] = `
Object {
  "field": "deeply-nested-field",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "root-field$nested-field$deeply-nested-field",
      "typename": "string[]",
    },
    "value": Object {
      "items": Array [],
      "itemsTypeName": "string",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with merged primitive value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "description": "merged",
    "isMerged": true,
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "merged",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with nested primitive value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "root-field$SimpleField",
      "typename": "string[]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "description": "some display value 1",
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$SimpleField",
            "typename": "string",
          },
          "value": Object {
            "displayValue": "some display value 1",
            "value": "some value 1",
            "valueFormat": 0,
          },
        },
        PropertyRecord {
          "description": "some display value 2",
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$SimpleField",
            "typename": "string",
          },
          "value": Object {
            "displayValue": "some display value 2",
            "value": "some value 2",
            "valueFormat": 0,
          },
        },
      ],
      "itemsTypeName": "string",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with nested primitive value when nested content value is not set 1`] = `
Object {
  "field": "nested-field",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "root-field$nested-field",
      "typename": "string[]",
    },
    "value": Object {
      "items": Array [],
      "itemsTypeName": "string",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with primitive value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "description": "some display value",
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "some display value",
      "value": "some value",
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with primitives creates record with undefined primitive value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "string",
    },
    "value": Object {
      "displayValue": "",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with structs creates record with merged struct value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "isMerged": true,
    "isReadonly": true,
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "mystruct[]",
    },
    "value": Object {
      "displayValue": "merged",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with structs creates record with nested struct value 1`] = `
Object {
  "field": "nested-struct-field",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "root-field$nested-struct-field",
      "typename": "mystruct[][]",
    },
    "value": Object {
      "items": Array [
        PropertyRecord {
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$nested-struct-field",
            "typename": "MyStruct[]",
          },
          "value": Object {
            "members": Object {
              "MyProperty": PropertyRecord {
                "description": "some display value 1",
                "property": Object {
                  "displayLabel": "My Property",
                  "name": "MyProperty",
                  "typename": "MyType",
                },
                "value": Object {
                  "displayValue": "some display value 1",
                  "value": "some value 1",
                  "valueFormat": 0,
                },
              },
            },
            "valueFormat": 2,
          },
        },
        PropertyRecord {
          "property": Object {
            "displayLabel": "Simple Field",
            "name": "root-field$nested-struct-field",
            "typename": "MyStruct[]",
          },
          "value": Object {
            "members": Object {
              "MyProperty": PropertyRecord {
                "description": "some display value 2",
                "property": Object {
                  "displayLabel": "My Property",
                  "name": "MyProperty",
                  "typename": "MyType",
                },
                "value": Object {
                  "displayValue": "some display value 2",
                  "value": "some value 2",
                  "valueFormat": 0,
                },
              },
            },
            "valueFormat": 2,
          },
        },
      ],
      "itemsTypeName": "MyStruct[]",
      "valueFormat": 1,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with structs creates record with struct value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "mystruct[]",
    },
    "value": Object {
      "members": Object {
        "MyProperty": PropertyRecord {
          "description": "some display value",
          "property": Object {
            "displayLabel": "My Property",
            "name": "MyProperty",
            "typename": "MyType",
          },
          "value": Object {
            "displayValue": "some display value",
            "value": "some value",
            "valueFormat": 0,
          },
        },
      },
      "valueFormat": 2,
    },
  },
}
`;

exports[`ContentBuilder createPropertyRecord with structs creates record with undefined struct value 1`] = `
Object {
  "field": "SimpleField",
  "record": PropertyRecord {
    "property": Object {
      "displayLabel": "Simple Field",
      "name": "SimpleField",
      "typename": "mystruct[]",
    },
    "value": Object {
      "displayValue": "",
      "value": undefined,
      "valueFormat": 0,
    },
  },
}
`;
