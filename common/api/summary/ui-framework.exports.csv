sep=;
Release Tag;API Item
alpha;AccuDrawCommandItems
alpha;AccuDrawDialog(props: AccuDrawDialogProps): JSX.Element
alpha;AccuDrawDialogProps 
alpha;AccuDrawKeyboardShortcuts
alpha;AccuDrawPopupManager
alpha;AccuDrawWidget(): JSX.Element
alpha;AccuDrawWidgetControl 
public;Action
internal;ActionButtonItem(props: ActionButtonProps): JSX.Element
public;class ActionButtonItemDef 
public;ActionCreatorsObject =
public;ActionItemButton 
public;ActionItemButtonProps 
public;ActionsUnion
public;ActionTypes
public;ActionWithPayload
public;ActiveContentChangedEvent 
public;ActiveContentChangedEventArgs
internal;ActiveFrontstageDefProvider({ frontstageDef }:
public;ActivityCenterField 
beta;ActivityMessage(props: ActivityMessageProps): JSX.Element
public;ActivityMessageCancelledEvent 
public;ActivityMessageEventArgs
beta;ActivityMessagePopup(props: ActivityMessagePopupProps): JSX.Element | null
beta;ActivityMessagePopupProps 
beta;ActivityMessageProps
public;ActivityMessageUpdatedEvent 
internal;addMissingWidgets(frontstageDef: FrontstageDef, initialState: NineZoneState): NineZoneState
internal;addPanelWidgets(state: NineZoneState, frontstageDef: FrontstageDef, side: PanelSide): NineZoneState
internal;addWidgets(state: NineZoneState, widgets: ReadonlyArray
alpha;AnalysisAnimationTimelineDataProvider 
public;AnyItemDef = GroupItemDef | CommandItemDef | ToolItemDef | ActionButtonItemDef
public;AnyWidgetProps = WidgetProps | ToolWidgetProps | NavigationWidgetProps
internal;appendWidgets(state: NineZoneState, widgetDefs: ReadonlyArray
public;AppNotificationManager 
beta;areNoFeatureOverridesActive(): boolean
public;Backstage 
beta;BackstageActionItem 
beta;BackstageAppButton(props: BackstageAppButtonProps): JSX.Element
beta;BackstageAppButtonProps
beta;BackstageComposer(props: BackstageComposerProps): JSX.Element
internal;BackstageComposerActionItem({ item }: BackstageComposerActionItemProps): JSX.Element
internal;BackstageComposerActionItemProps
beta;BackstageComposerItem({ item }: BackstageComposerItemProps): JSX.Element
beta;BackstageComposerItemProps
beta;BackstageComposerProps 
internal;BackstageComposerStageLauncher({ item }: BackstageComposerStageLauncherProps): JSX.Element
internal;BackstageComposerStageLauncherProps
public;BackstageEvent 
public;BackstageEventArgs
public;BackstageItemProps 
public;BackstageItemState
beta;BackstageItemType
beta;BackstageItemUtilities
beta;BackstageManager
public;BackstageProps 
beta;BackstageStageLauncher 
beta;BackstageToggledArgs
public;BaseItemState
beta;BasicNavigationWidget(props: BasicNavigationWidgetProps): JSX.Element
beta;BasicNavigationWidgetProps
beta;BasicToolWidget(props: BasicToolWidgetProps): JSX.Element
beta;BasicToolWidgetProps
public;BooleanListenerProps
public;BooleanSyncUiListener 
alpha;Calculator 
internal;CalculatorEngine
internal;CalculatorKeyType
internal;CalculatorOperator
alpha;CalculatorPopup 
alpha;CalculatorPopupProps 
alpha;CalculatorProps 
internal;CalculatorPropsProps = Pick
alpha;CardContainer 
alpha;CardContainerProps 
alpha;CardInfo
alpha;CardSelectedEvent 
alpha;CardSelectedEventArgs
public;CategoryTree(props: CategoryTreeProps): JSX.Element
public;CategoryTreeProps
internal;ChangeSetInfo
beta;ClassGroupingOption
beta;ClearEmphasisStatusField(props: ClearEmphasisStatusFieldProps): JSX.Element
internal;clearKeyinPaletteHistory(): void
public;COLOR_THEME_DEFAULT = ColorTheme.Light
public;ColorTheme
public;CombinedReducerState
public;combineReducers: CombineReducersFunction
public;CombineReducersFunction = 
public;CommandItemDef 
public;CommandItemProps 
public;CommandLaunchBackstageItem 
public;CommandLaunchBackstageItemProps 
public;ConditionalField 
public;ConditionalFieldProps 
public;ConfigurableBase 
public;ConfigurableCreateInfo
public;ConfigurableUiActionId
public;ConfigurableUiActions:
public;ConfigurableUiActionsUnion = ActionsUnion
public;ConfigurableUiContent(props: ConfigurableUiContentProps): JSX.Element
public;ConfigurableUiContentProps 
public;class ConfigurableUiControl 
public;ConfigurableUiControlConstructor = new (info: ConfigurableCreateInfo, options: any) => ConfigurableUiElement
public;ConfigurableUiControlType
public;ConfigurableUiElement
public;ConfigurableUiManager
public;ConfigurableUiReducer(state: ConfigurableUiState | undefined, _action: ConfigurableUiActionsUnion): ConfigurableUiState
public;ConfigurableUiState
beta;connectIModelConnection: (mapStateToProps?: any, mapDispatchToProps?: any) => import("react-redux").InferableComponentEnhancerWithProps
beta;connectIModelConnectionAndViewState: (mapStateToProps?: any, mapDispatchToProps?: any) => import("react-redux").InferableComponentEnhancerWithProps
public;ContentCallback = (content: ContentProps) => void
public;ContentControl 
public;ContentControlActivatedEvent 
public;ContentControlActivatedEventArgs
public;ContentGroup
public;ContentGroupManager
public;ContentGroupProps
public;ContentLayout 
public;ContentLayoutActivatedEvent 
public;ContentLayoutActivatedEventArgs
public;ContentLayoutComponentProps 
public;ContentLayoutDef
public;ContentLayoutManager
public;ContentLayoutProps 
public;ContentProps
public;ContentViewManager
public;CoreTools
public;createAction
public;createAction
internal;createStableWidgetDef(widgetDef: WidgetDef, stableId: string): WidgetDef
alpha;createVisibilityTreeNodeRenderer: (iconsEnabled: boolean, descriptionEnabled: boolean) => (props: TreeNodeRendererProps) => JSX.Element
public;CubeNavigationAidControl 
public;CursorDirection
public;CursorDirectionParts
public;CursorInformation
beta;CursorMenuData
public;CursorPopup 
public;CursorPopupContent(props: CommonDivProps): JSX.Element
internal;CursorPopupFadeOutEvent 
internal;CursorPopupFadeOutEventArgs
public;CursorPopupManager
alpha;CursorPopupMenu 
public;CursorPopupOptions
public;CursorPopupProps 
public;CursorPopupRenderer 
internal;CursorPopupShow
internal;CursorPopupUpdatePositionEvent 
internal;CursorPopupUpdatePositionEventArgs
internal;CursorPrompt
public;CursorUpdatedEvent 
public;CursorUpdatedEventArgs
beta;CustomItemDef 
beta;CustomItemProps 
public;DeepReadonly
public;DeepReadonlyArray
public;DeepReadonlyObject
beta;DefaultDialogGridContainer({ componentGenerator, isToolSettings }:
beta;DefaultNavigationProps
beta;DefaultNavigationWidget 
internal;DefaultToolSettingsProvider 
alpha;DefaultViewOverlay 
public;DialogChangedEvent 
public;DialogChangedEventArgs
internal;DialogGridContainer({ componentGenerator, containerClassName }: DialogGridContainerProps): JSX.Element
public;DialogInfo
internal;DialogManagerBase
internal;DialogRendererBase 
internal;DialogRendererProps
internal;DockedStatusBarItem(props: StatusBarItemProps): JSX.Element
beta;DragDropLayerChangedEvent 
beta;DragDropLayerChangedEventArgs
beta;DragDropLayerManager
beta;DragDropLayerRenderer: typeof DragDropLayerRendererComponent & DndComponentClass
beta;DragDropLayerRendererComponent 
beta;DragDropLayerRendererProps 
beta;DrawingNavigationAidControl 
public;ElementTooltip 
public;ElementTooltipChangedEvent 
public;ElementTooltipChangedEventArgs
alpha;EmphasizeElementsChangedArgs
beta;ExpandableSection 
beta;ExpandableSectionProps 
internal;expandWidget: 
beta;ExtensibleToolbarProps
beta;featureOverridesActiveStateFunc(state: Readonly
public;FooterModeField 
public;FooterModeFieldProps 
internal;FrameworkAccuDraw 
beta;FrameworkRootState
internal;FrameworkStagePanel 
internal;FrameworkStagePanelProps
beta;FrameworkState
alpha;FrameworkToolAdmin 
beta;FrameworkUiAdmin 
alpha;FrameworkVersion(props: FrameworkVersionProps): JSX.Element
alpha;FrameworkVersion = "1" | "2"
internal;FrameworkVersionChangedEvent 
internal;FrameworkVersionChangedEventArgs
internal;FrameworkVersionContext: React.Context
alpha;FrameworkVersionProps
internal;FrameworkVersionSwitch(props: FrameworkVersionSwitchProps): JSX.Element
internal;FrameworkVersionSwitchProps
internal;FrameworkZone 
internal;FrameworkZoneProps 
public;Frontstage 
public;FrontstageActivatedEvent 
public;FrontstageActivatedEventArgs
public;FrontstageComposer 
public;FrontstageDeactivatedEvent 
public;FrontstageDeactivatedEventArgs
public;FrontstageDef
internal;FrontstageEventArgs
public;FrontstageLaunchBackstageItem 
public;FrontstageLaunchBackstageItemProps 
public;FrontstageManager
internal;FrontstageNineZoneStateChangedEventArgs 
public;FrontstageProps 
public;class FrontstageProvider
public;FrontstageReadyEvent 
public;FrontstageReadyEventArgs
internal;FrontstageRuntimeProps
public;FunctionKey
public;FunctionType = (...args: any[]) => any
public;getBackstageItemStateFromProps: (props: BackstageItemProps) => BackstageItemState
internal;getBadgeClassName(badgeType: BadgeType | undefined): "uifw-badge-new" | "uifw-badge-tp" | undefined
alpha;getCategories(imodel: IModelConnection, viewport?: Viewport, filteredProvider?: IPresentationTreeDataProvider): Promise
internal;getExtendedZone: (zoneId: WidgetZoneId, zones: ZonesManagerProps, defProvider: ZoneDefProvider) => ZoneManagerProps
beta;getFeatureOverrideSyncEventIds(): string[]
internal;getFirstItem: (groupItemDef: GroupItemDef) => AnyItemDef | undefined
internal;getFirstItemId: (groupItemDef: GroupItemDef) => string
internal;getFloatingZoneBounds: (props: ZoneManagerProps) => RectangleProps
internal;getFloatingZoneStyle: (props: ZoneManagerProps) =>
beta;getIsHiddenIfFeatureOverridesActive(): ConditionalBooleanValue
beta;getIsHiddenIfSelectionNotActive(): ConditionalBooleanValue
internal;getNestedStagePanelKey: (location: StagePanelLocation_2) => NestedStagePanelKey
internal;getPanelZoneWidgets(frontstageDef: FrontstageDef, panelZone: WidgetIdTypes): WidgetDef[]
beta;getSelectionContextSyncEventIds(): string[]
internal;getStableWidgetProps(widgetProps: WidgetProps, stableId: string): WidgetProps
internal;getStagePanelType: (location: StagePanelLocation_2) => StagePanelType
internal;getWidgetId(side: PanelSide, key: StagePanelZoneDefKeys): WidgetIdTypes
public;GroupButton(props: GroupButtonProps): JSX.Element
internal;GroupButtonItem(props: GroupButtonProps_2): JSX.Element
public;GroupButtonProps 
internal;GroupedItems = ReadonlyArray
internal;GroupItem 
public;GroupItemDef 
public;GroupItemProps 
alpha;HideIsolateEmphasizeAction
alpha;class HideIsolateEmphasizeActionHandler
alpha;HideIsolateEmphasizeManager 
alpha;HTMLElementPopup 
alpha;HTMLElementPopupProps 
beta;IModelAppUiSettings 
beta;IModelConnectedCategoryTree: import("react-redux").ConnectedComponent
alpha;IModelConnectedModelsTree: import("react-redux").ConnectedComponent
beta;IModelConnectedNavigationWidget: import("react-redux").ConnectedComponent
beta;IModelConnectedSpatialContainmentTree: import("react-redux").ConnectedComponent
beta;IModelConnectedViewport: import("react-redux").ConnectedComponent
beta;IModelConnectedViewSelector: import("react-redux").ConnectedComponent
beta;IModelConnectedVisibilityComponent: import("react-redux").ConnectedComponent
internal;IModelInfo
internal;IModelScope
internal;IModelServices
internal;IModelUserInfo
beta;IModelViewportControl 
beta;IModelViewportControlOptions
internal;INACTIVITY_TIME_DEFAULT = 3500
beta;Indicator 
internal;initializeNineZoneState(frontstageDef: FrontstageDef): NineZoneState
internal;initializePanel(nineZone: NineZoneState, frontstageDef: FrontstageDef, panelSide: PanelSide): NineZoneState
alpha;InputEditorCommitHandler
alpha;InputEditorPopup 
alpha;InputEditorPopupProps 
public;InputFieldMessage 
public;InputFieldMessageAddedEvent 
public;InputFieldMessageEventArgs
public;InputFieldMessageRemovedEvent 
alpha;InputStatus
internal;isCollapsedToPanelState: (isCollapsed: boolean) => StagePanelState.Minimized | StagePanelState.Open
internal;isFrontstageStateSettingResult(settingsResult: UiSettingsResult): settingsResult is
beta;isNoSelectionActive(): boolean
internal;isPanelCollapsed(zoneStates: ReadonlyArray
internal;isReactContent: (content: PopupContentType) => content is ReactContent
internal;isReactNotifyMessageDetails: (details: any) => details is ReactNotifyMessageDetails
alpha;isStatusBarItem: (item: CommonStatusBarItem) => item is StatusBarItem
internal;isToolSettingsWidgetManagerProps: (props: WidgetManagerProps | undefined) => props is ToolSettingsWidgetManagerProps
public;class ItemDefBase
public;ItemList 
public;ItemMap 
public;ItemProps 
alpha;IVisibilityHandler 
public;KeyboardShortcut 
public;KeyboardShortcutContainer
public;KeyboardShortcutManager
public;KeyboardShortcutMenu 
public;KeyboardShortcutMenuEvent 
public;KeyboardShortcutMenuState
public;KeyboardShortcutProps 
beta;KeyinBrowser 
beta;KeyinBrowserExecuteArgs
beta;KeyinBrowserProps 
beta;KeyinEntry
beta;KeyinFieldLocalization
internal;KeyinPalettePanel({ keyins, onKeyinExecuted, historyLength: allowedHistoryLength }: KeyinPalettePanelProps): JSX.Element
alpha;KeyinPalettePopup({ el, id, keyins, onCancel, onItemExecuted }: KeyinPalettePopupProps): JSX.Element
alpha;KeyinPalettePopupProps
public;LayoutFragmentProps
public;LayoutHorizontalSplitProps 
public;LayoutSplit
public;LayoutSplitPropsBase
public;LayoutVerticalSplitProps 
beta;ListItem
beta;ListItemType
beta;ListPicker 
beta;ListPickerBase 
beta;ListPickerItem 
beta;ListPickerItemProps 
beta;ListPickerProps
beta;ListPickerPropsExtended 
public;MarkupTools
alpha;MenuButton 
alpha;MenuButtonPopup 
alpha;MenuButtonPopupProps 
alpha;MenuButtonProps 
alpha;MenuItem 
alpha;MenuItemHelpers
beta;MenuItemProps = AbstractMenuItemProps
public;MessageAddedEvent 
public;MessageAddedEventArgs
public;MessageCenterField 
public;MessageCenterFieldProps 
public;MessageManager
beta;MessageRenderer(props: MessageRendererProps): JSX.Element | null
beta;MessageRendererProps 
public;MessagesUpdatedEvent 
public;ModalDialogChangedEvent 
public;ModalDialogManager
public;ModalDialogRenderer 
public;ModalFrontstage 
public;ModalFrontstageChangedEvent 
public;ModalFrontstageChangedEventArgs
public;ModalFrontstageClosedEvent 
public;ModalFrontstageClosedEventArgs
internal;ModalFrontstageComposer({ stageInfo }:
public;ModalFrontstageInfo
public;ModalFrontstageProps 
alpha;ModalFrontstageRequestedCloseEvent 
alpha;ModalFrontstageRequestedCloseEventArgs
public;ModelessDialog 
public;ModelessDialogChangedEvent 
public;ModelessDialogManager
public;ModelessDialogProps 
public;ModelessDialogRenderer 
internal;ModelSelectorWidget 
internal;ModelSelectorWidgetControl 
public;ModelsTree(props: ModelsTreeProps): JSX.Element
beta;ModelsTreeNodeType
public;ModelsTreeProps
beta;ModelsTreeSelectionPredicate = (key: NodeKey, type: ModelsTreeNodeType) => boolean
alpha;ModelsVisibilityHandler 
alpha;ModelsVisibilityHandlerProps
public;MouseDownChangedEvent 
public;MouseDownChangedEventArgs
beta;NameToReducerMap
public;NavigationAidActivatedEvent 
public;NavigationAidActivatedEventArgs
public;NavigationAidControl 
beta;NavigationAidHost(props: NavigationAidHostProps): JSX.Element
beta;NavigationAidHostProps
public;NavigationWidget 
beta;NavigationWidgetComposer(props: NavigationWidgetComposerProps): JSX.Element
beta;NavigationWidgetComposerProps 
public;NavigationWidgetDef 
public;NavigationWidgetProps 
public;NavigationWidgetPropsEx 
public;NestedFrontstage
public;NineZoneChangeHandler
public;NotifyMessageDetailsType = NotifyMessageDetails | ReactNotifyMessageDetails
public;NotifyMessageType = MessageType
internal;packNineZoneState(state: NineZoneState): SavedNineZoneState
internal;PanelSizeChangedEvent 
internal;PanelSizeChangedEventArgs
beta;PanelStateChangedEvent 
beta;PanelStateChangedEventArgs
internal;panelStateToIsCollapsed: (panelState: StagePanelState) => boolean
public;PointerMessage 
public;PointerMessageChangedEvent 
public;PointerMessageChangedEventArgs
public;PointerMessageProps 
public;PopupButton 
public;PopupButtonChildrenRenderProp = (args: PopupButtonChildrenRenderPropArgs) => React.ReactNode
public;PopupButtonChildrenRenderPropArgs
public;PopupButtonProps 
alpha;PopupContentType = HTMLElement | ReactContent
alpha;PopupInfo
alpha;PopupManager
alpha;PopupPropsBase
alpha;PopupRenderer 
alpha;PopupsChangedEvent 
alpha;PopupsChangedEventArgs
alpha;PositionPopup 
alpha;PositionPopupContent(props: CommonDivProps): JSX.Element
alpha;PositionPopupProps 
beta;PresentationSelectionScope
internal;ProjectInfo
internal;ProjectReadStatus
internal;ProjectScope
internal;ProjectServices
public;PromptField: import("react-redux").ConnectedComponent
public;PropsHelper
alpha;ReactContent
public;ReactMessage = ReactMessage_2
public;ReactNotifyMessageDetails
public;Reducer
public;ReducerActions
public;ReducerMapActions
beta;ReducerRegistry
beta;ReducerRegistryInstance: ReducerRegistry
internal;removeMissingWidgets(frontstageDef: FrontstageDef, initialState: NineZoneState): NineZoneState
alpha;RestoreFrontstageLayoutTool 
internal;restoreNineZoneState(frontstageDef: FrontstageDef, saved: SavedNineZoneState): NineZoneState
beta;ReviewToolWidget 
beta;ReviewToolWidgetProps
internal;RotationData
internal;RULESET_CATEGORIES: Ruleset
internal;RULESET_MODELS: Ruleset
internal;RULESET_MODELS_GROUPED_BY_CLASS: Ruleset
internal;RULESET_SPATIAL_BREAKDOWN: Ruleset
internal;RULESET_SPATIAL_BREAKDOWN_GROUPED_BY_CLASS: Ruleset
alpha;SafeAreaContext: React.Context
public;SavedView
public;SavedViewLayout
public;SavedViewLayoutProps
public;SavedViewProps 
alpha;ScheduleAnimationTimelineDataProvider 
beta;SectionsStatusField(props: SectionsStatusFieldProps): JSX.Element
beta;SectionsStatusFieldProps 
beta;selectionContextStateFunc(state: Readonly
beta;SelectionContextToolDefinitions
public;SelectionInfoField: import("react-redux").ConnectedComponent
public;SelectionScopeField: import("react-redux").ConnectedComponent
public;SeparatorBackstageItem 
beta;SessionState
beta;SessionStateActionId
beta;SessionStateActions:
beta;SessionStateActionsProps
beta;SessionStateActionsUnion = ActionsUnion
beta;sessionStateMapDispatchToProps:
beta;SessionStateReducer(state: SessionState | undefined, action: SessionStateActionsUnion): DeepReadonly
internal;setPanelSize: 
beta;SettingsModalFrontstage 
internal;settingsStatusToUiSettingsStatus(status: SettingsStatus): UiSettingsStatus
internal;setWidgetLabel: 
internal;setWidgetState: 
alpha;SheetCard 
alpha;SheetCardProps
alpha;SheetData
alpha;SheetNavigationAid 
alpha;SheetNavigationAidControl 
alpha;SheetNavigationProps 
alpha;SheetsModalFrontstage 
internal;showWidget: 
public;SignIn 
public;SignInProps 
public;SignOutModalFrontstage 
public;SnapModeField: import("react-redux").ConnectedComponent
alpha;SolarTimelineDataProvider 
public;SpatialContainmentTree(props: SpatialContainmentTreeProps): JSX.Element
public;SpatialContainmentTreeProps
public;SpecialKey
internal;SplitterPaneTarget 
internal;SplitterPaneTargetProps
beta;StagePanel 
public;StagePanelChangeHandler
beta;StagePanelDef 
beta;StagePanelDefaultProps = Pick
alpha;StagePanelHeader 
alpha;StagePanelHeaderProps 
alpha;StagePanelLocation
beta;StagePanelMaxSizeSpec = number |
beta;StagePanelProps
internal;StagePanelRuntimeProps
alpha;StagePanelSection
beta;StagePanelState
internal;StagePanelZoneDef 
internal;StagePanelZoneDefKeys = keyof Pick
beta;StagePanelZoneProps
internal;StagePanelZonesDef
beta;StagePanelZonesProps
public;StandardMessageBox 
public;StandardMessageBoxProps 
alpha;StandardRotationNavigationAid 
alpha;StandardRotationNavigationAidControl 
beta;StateManager
public;StateType
public;StatusBar 
public;StatusBarCenterSection(props: CommonDivProps): JSX.Element
beta;StatusBarComposer(props: StatusBarComposerProps): JSX.Element
beta;StatusBarComposerProps 
internal;StatusBarContext: React.Context
public;StatusBarFieldId = string | null
beta;StatusBarItem 
internal;StatusBarItemProps 
beta;StatusBarItemsManager 
beta;StatusBarItemUtilities
public;StatusBarLeftSection(props: CommonDivProps): JSX.Element
public;StatusBarProps 
public;StatusBarRightSection(props: CommonDivProps): JSX.Element
public;StatusBarSpaceBetween(props: CommonDivProps): JSX.Element
public;class StatusBarWidgetControl 
public;StatusBarWidgetControlArgs
internal;StatusBarZone 
internal;StatusBarZoneProps 
public;StatusFieldProps 
beta;StickyMessage(props: StickyMessageProps): JSX.Element
beta;StickyMessageProps
public;SupportsViewSelectorChange
public;SyncToolSettingsPropertiesEvent 
public;SyncToolSettingsPropertiesEventArgs
public;SyncUiEvent 
public;SyncUiEventArgs
public;SyncUiEventDispatcher
public;SyncUiEventId
public;SYSTEM_PREFERRED_COLOR_THEME = "SYSTEM_PREFERRED"
internal;TabLocation
public;TargetChangeHandler
public;Task 
public;TaskActivatedEvent 
public;TaskActivatedEventArgs
public;TaskLaunchBackstageItem 
public;TaskLaunchBackstageItemProps 
public;TaskManager
public;TaskProps 
public;TaskPropsList
public;ThemeManager: import("react-redux").ConnectedComponent
beta;TileLoadingIndicator 
beta;ToastMessage(props: ToastMessageProps): JSX.Element
beta;ToastMessageProps
alpha;toggleAllCategories(viewManager: ViewManager, imodel: IModelConnection, display: boolean, viewport?: Viewport, forAllViewports?: boolean, filteredProvider?: IPresentationTreeDataProvider): Promise
public;ToolActivatedEvent 
public;ToolActivatedEventArgs
public;ToolAssistanceChangedEvent 
public;ToolAssistanceChangedEventArgs
public;ToolAssistanceField 
internal;ToolAssistanceFieldDefaultProps = Pick
public;ToolAssistanceFieldProps 
internal;Toolbar 
beta;ToolbarButtonHelper
beta;ToolbarComposer(props: ExtensibleToolbarProps): JSX.Element
beta;ToolbarDragInteractionContext: React.Context
internal;ToolbarGroupItem 
beta;ToolbarHelper
alpha;ToolbarPopup 
alpha;ToolbarPopupProps 
internal;ToolbarProps 
public;ToolbarWidgetDefBase 
public;ToolbarWidgetProps 
public;ToolButton 
public;ToolButtonProps 
internal;ToolGroupPanelContext: React.Context
public;ToolIconChangedEvent 
public;ToolIconChangedEventArgs
public;ToolInformation
public;ToolItemDef 
public;ToolItemProps 
internal;ToolSettingsContent(): JSX.Element | null
internal;ToolSettingsDockedContent(): JSX.Element
beta;ToolSettingsEntry
beta;ToolSettingsGrid({ settings }: ToolSettingsGridProps): JSX.Element
beta;ToolSettingsGridContainer({ componentGenerator }:
beta;ToolSettingsGridProps
beta;ToolSettingsManager
internal;ToolSettingsWidgetContent(): JSX.Element
internal;ToolSettingsZone 
internal;ToolSettingsZoneProps 
public;ToolUiProvider 
public;ToolWidget 
beta;ToolWidgetComposer(props: ToolWidgetComposerProps): JSX.Element
beta;ToolWidgetComposerProps 
public;ToolWidgetDef 
public;ToolWidgetProps 
public;ToolWidgetPropsEx 
internal;toPanelSide(location: StagePanelLocation_2): PanelSide
internal;TrackingTime
internal;UiActivityEvent 
internal;UiActivityEventArgs
beta;UiDataProvidedDialog({ uiDataProvider, id, isModal, ...dialogProps }: UiDataProvidedDialogProps): JSX.Element
beta;UiDataProvidedDialogProps
public;UiFramework
internal;UiIntervalEvent 
internal;UiIntervalEventArgs
internal;UiSettingsContext: React.Context
alpha;UiSettingsProvider(props: UiSettingsProviderProps): JSX.Element
alpha;UiSettingsProviderProps
public;UiShowHideManager
public;UiVisibilityChangedEvent 
public;UiVisibilityEventArgs
internal;useActiveFrontstageDef(): FrontstageDef | undefined
beta;useActiveFrontstageId: () => string
beta;useActiveIModelConnection(): IModelConnection | undefined
internal;useActiveModalFrontstageInfo(): ModalFrontstageInfo | undefined
beta;useActiveViewport(): ScreenViewport | undefined
internal;useAvailableUiItemsProviders(): readonly string[]
beta;useBackstageManager: () => BackstageManager
internal;useDefaultBackstageItems: (manager: BackstageItemsManager) => readonly BackstageItem[]
beta;useDefaultStatusBarItems: (manager: StatusBarItemsManager_2) => readonly CommonStatusBarItem[]
beta;useDefaultToolbarItems: (manager: ToolbarItemsManager) => readonly CommonToolbarItem[]
internal;useFrameworkVersion(): FrameworkVersion
internal;useFrontstageManager(frontstageDef: FrontstageDef): void
internal;useGroupedItems: (items: ReadonlyArray
internal;useHorizontalToolSettingNodes(): ToolSettingsEntry[] | undefined
beta;useIsBackstageOpen: (manager: BackstageManager) => boolean
internal;useItemsManager(frontstageDef: FrontstageDef): void
internal;useLabels(): NineZoneLabels
internal;useNineZoneDispatch(frontstageDef: FrontstageDef): NineZoneDispatch
internal;useNineZoneState(frontstageDef: FrontstageDef): NineZoneState | undefined
public;UserProfileBackstageItem 
public;UserProfileBackstageItemProps 
internal;useSavedFrontstageState(frontstageDef: FrontstageDef): void
internal;useSaveFrontstageSettings(frontstageDef: FrontstageDef): void
internal;useStatusBarEntry(): DockedStatusBarEntryContextArg
internal;useSyncDefinitions(frontstageDef: FrontstageDef): void
internal;useToolSettingsNode(): React.ReactNode
beta;useUiItemsProviderStatusBarItems: (manager: StatusBarItemsManager_2) => readonly CommonStatusBarItem[]
beta;useUiItemsProviderToolbarItems: (manager: ToolbarItemsManager, toolbarUsage: ToolbarUsage, toolbarOrientation: ToolbarOrientation) => readonly CommonToolbarItem[]
internal;useUiSettingsContext(): UiSettings
internal;useUiVisibility(): boolean
internal;useUpdateNineZoneSize(frontstageDef: FrontstageDef): void
alpha;useVisibilityTreeFiltering: (nodeLoader: AbstractTreeNodeLoaderWithProvider
alpha;useVisibilityTreeRenderer: (iconsEnabled: boolean, descriptionsEnabled: boolean) => (props: TreeRendererProps) => JSX.Element
internal;useWidgetDef(): WidgetDef | undefined
alpha;useWidgetDirection(): "horizontal" | "vertical"
alpha;ValidationTextbox 
internal;VersionInfo
beta;ViewAttributesStatusField 
public;ViewLayout
public;ViewportContentControl 
beta;ViewSelector 
beta;ViewSelectorChangedEvent 
beta;ViewSelectorChangedEventArgs
beta;ViewSelectorDefaultProps = Pick
beta;ViewSelectorProps
public;ViewUtilities
alpha;VisibilityChangeListener = (nodeIds?: string[]) => void
beta;VisibilityComponent 
beta;VisibilityComponentConfig
public;VisibilityComponentHierarchy
beta;VisibilityComponentProps
alpha;VisibilityStatus
alpha;VisibilityTreeEventHandler 
alpha;VisibilityTreeEventHandlerParams 
alpha;VisibilityTreeFilterInfo
alpha;visibilityTreeNodeCheckboxRenderer: (props: NodeCheckboxRenderProps) => JSX.Element
alpha;VisibilityTreeNoFilteredData(props: VisibilityTreeNoFilteredDataProps): JSX.Element
alpha;VisibilityTreeNoFilteredDataProps
alpha;VisibilityTreeSelectionPredicate = (key: NodeKey, node: TreeNodeItem) => boolean
beta;VisibilityWidget 
public;Widget 
public;WIDGET_OPACITY_DEFAULT = 0.9
internal;WidgetChangedEventArgs
public;WidgetChangeHandler
internal;WidgetContent(): JSX.Element
public;WidgetControl 
public;WidgetDef
internal;WidgetEventArgs
public;WidgetHost
internal;WidgetInfo
beta;WidgetManager
internal;WidgetPanelsFrontstage: React.NamedExoticComponent
internal;WidgetPanelsFrontstageContent(): JSX.Element | null
internal;WidgetPanelsFrontstageState
internal;WidgetPanelsStatusBar(props: CommonProps): JSX.Element | null
internal;WidgetPanelsTab(): JSX.Element
internal;WidgetPanelsToolbars(): JSX.Element
internal;WidgetPanelsToolSettings(): JSX.Element | null
public;WidgetProps 
beta;WidgetProvider
internal;WidgetProvidersChangedEvent 
internal;WidgetProvidersChangedEventArgs
internal;WidgetsChangedEvent 
internal;WidgetsChangedEventArgs
internal;WidgetStack 
internal;WidgetStackProps 
internal;WidgetStackTab 
internal;WidgetStackTabGroup 
internal;WidgetStackTabGroupProps
internal;WidgetStackTabProps
internal;WidgetStackTabs 
internal;WidgetStackTabsProps
public;WidgetState
public;WidgetStateChangedEvent 
public;WidgetStateChangedEventArgs
public;WidgetStateFunc = (state: Readonly
internal;WidgetTab
internal;WidgetTabs =
public;WidgetType
beta;withMessageCenterFieldProps: 
alpha;withSafeArea: 
beta;withStatusFieldProps: 
public;Workflow 
public;WorkflowActivatedEvent 
public;WorkflowActivatedEventArgs
public;WorkflowManager
public;WorkflowProps 
public;WorkflowPropsList
public;Zone 
public;ZoneDef 
public;ZoneDefProvider
public;ZoneLocation
public;ZoneProps 
internal;ZoneRuntimeProps
public;ZoneState
internal;ZoneTargets 
internal;ZoneTargetsProps 