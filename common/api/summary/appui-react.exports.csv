sep=;
Release Tag;API Item
beta;AccuDrawCommandItems
beta;AccuDrawDialog(props: AccuDrawDialogProps): JSX.Element
beta;AccuDrawDialogProps 
beta;AccuDrawGrabInputFocusEvent 
beta;AccuDrawKeyboardShortcuts
alpha;AccuDrawPopupManager
beta;AccuDrawSetCompassModeEvent 
beta;AccuDrawSetCompassModeEventArgs
beta;AccuDrawSetFieldFocusEvent 
beta;AccuDrawSetFieldFocusEventArgs
beta;AccuDrawSetFieldLockEvent 
beta;AccuDrawSetFieldLockEventArgs
beta;AccuDrawSetFieldValueFromUiEvent 
beta;AccuDrawSetFieldValueFromUiEventArgs
beta;AccuDrawSetFieldValueToUiEvent 
beta;AccuDrawSetFieldValueToUiEventArgs
beta;AccuDrawUiSettings
beta;AccuDrawUiSettingsChangedEvent 
beta;AccuDrawWidget(): JSX.Element
beta;AccuDrawWidgetControl 
public;Action
internal;ActionButtonItem(props: ActionButtonProps): JSX.Element
public;class ActionButtonItemDef 
public;ActionCreatorsObject =
public;ActionItemButton 
public;ActionItemButtonProps 
public;ActionsUnion
public;ActionTypes
public;ActionWithPayload
public;ActiveContentChangedEvent 
public;ActiveContentChangedEventArgs
internal;ActiveFrontstageDefProvider({ frontstageDef }:
public;ActivityCenterField 
public;ActivityMessage(props: ActivityMessageProps): JSX.Element
public;ActivityMessageCancelledEvent 
public;ActivityMessageEventArgs
public;ActivityMessagePopup(props: ActivityMessagePopupProps): JSX.Element | null
public;ActivityMessagePopupProps 
public;ActivityMessageProps
public;ActivityMessageUpdatedEvent 
internal;addMissingWidgets(frontstageDef: FrontstageDef, initialState: NineZoneState): NineZoneState
internal;addPanelWidgets(state: NineZoneState, frontstageDef: FrontstageDef, side: PanelSide): NineZoneState
internal;addWidgets(state: NineZoneState, widgets: ReadonlyArray
public;AnalysisAnimationTimelineDataProvider 
public;AnyItemDef = GroupItemDef | CommandItemDef | ToolItemDef | ActionButtonItemDef
public;AnyToolbarItemDef = AnyItemDef | CustomItemDef
public;AnyWidgetProps = WidgetProps | ToolWidgetProps | NavigationWidgetProps
internal;appendWidgets(state: NineZoneState, widgetDefs: ReadonlyArray
public;AppNotificationManager 
public;AppUiSettings 
beta;areNoFeatureOverridesActive(): boolean
public;Backstage 
deprecated;Backstage 
beta;BackstageActionItem 
deprecated;BackstageActionItem 
public;BackstageAppButton(props: BackstageAppButtonProps): JSX.Element
public;BackstageAppButtonProps
public;BackstageComposer(props: BackstageComposerProps): JSX.Element
internal;BackstageComposerActionItem({ item }: BackstageComposerActionItemProps): JSX.Element
internal;BackstageComposerActionItemProps
beta;BackstageComposerItem({ item }: BackstageComposerItemProps): JSX.Element
beta;BackstageComposerItemProps
public;BackstageComposerProps 
internal;BackstageComposerStageLauncher({ item }: BackstageComposerStageLauncherProps): JSX.Element
internal;BackstageComposerStageLauncherProps
public;BackstageEvent 
public;BackstageEventArgs
deprecated;BackstageEventArgs
public;BackstageItemProps 
deprecated;BackstageItemProps 
public;BackstageItemState
deprecated;BackstageItemState
beta;BackstageItemType
deprecated;BackstageItemType
beta;BackstageItemUtilities
deprecated;BackstageItemUtilities
public;BackstageManager
public;BackstageProps 
deprecated;BackstageProps 
beta;BackstageStageLauncher 
deprecated;BackstageStageLauncher 
public;BackstageToggledArgs
public;BaseItemState
public;BasicNavigationWidget(props: BasicNavigationWidgetProps): JSX.Element
public;BasicNavigationWidgetProps
public;BasicToolWidget(props: BasicToolWidgetProps): JSX.Element
public;BasicToolWidgetProps
public;BooleanListenerProps
public;BooleanSyncUiListener 
alpha;BumpToolSetting 
alpha;Calculator 
internal;CalculatorEngine
internal;CalculatorKeyType
internal;CalculatorOperator
alpha;CalculatorPopup 
alpha;CalculatorPopupProps 
alpha;CalculatorProps 
internal;CalculatorPropsProps = Pick
alpha;CardContainer 
alpha;CardContainerProps 
alpha;CardInfo
alpha;CardSelectedEvent 
alpha;CardSelectedEventArgs
public;CategoryTree(props: CategoryTreeProps): JSX.Element
public;CategoryTreeProps
public;ChildWindowLocationProps
public;ChildWindowManager
beta;ClassGroupingOption
beta;ClearEmphasisStatusField(props: ClearEmphasisStatusFieldProps): JSX.Element
deprecated;ClearEmphasisStatusField(props: ClearEmphasisStatusFieldProps): JSX.Element
internal;clearKeyinPaletteHistory(): void
public;ColorTheme
public;CombinedReducerState
public;combineReducers: CombineReducersFunction
public;CombineReducersFunction = 
public;CommandItemDef 
public;CommandItemProps 
public;CommandLaunchBackstageItem 
public;CommandLaunchBackstageItemProps 
public;ConditionalField 
public;ConditionalFieldProps 
public;ConfigurableBase 
public;ConfigurableCreateInfo
public;ConfigurableUiActionId
public;ConfigurableUiActions:
public;ConfigurableUiActionsUnion = ActionsUnion
public;ConfigurableUiContent(props: ConfigurableUiContentProps): JSX.Element
public;ConfigurableUiContentProps 
public;class ConfigurableUiControl 
public;ConfigurableUiControlConstructor = new (info: ConfigurableCreateInfo, options: any) => ConfigurableUiElement
public;ConfigurableUiControlType
public;ConfigurableUiElement
public;ConfigurableUiManager
public;ConfigurableUiReducer(state: ConfigurableUiState | undefined, action: ConfigurableUiActionsUnion): ConfigurableUiState
public;ConfigurableUiState
public;connectIModelConnection: (mapStateToProps?: any, mapDispatchToProps?: any) => import("react-redux").InferableComponentEnhancerWithProps
beta;connectIModelConnectionAndViewState: (mapStateToProps?: any, mapDispatchToProps?: any) => import("react-redux").InferableComponentEnhancerWithProps
public;ContentCallback = (content: ContentProps) => void
public;ContentControl 
public;ContentControlActivatedEvent 
public;ContentControlActivatedEventArgs
public;ContentGroup
public;ContentGroupProps
public;class ContentGroupProvider
public;ContentLayout 
public;ContentLayoutActivatedEvent 
public;ContentLayoutActivatedEventArgs
public;ContentLayoutComponentProps 
public;ContentLayoutDef
public;ContentLayoutManager
public;ContentProps
public;ContentToolWidgetComposer(props: ContentToolWidgetComposerProps): JSX.Element
public;ContentToolWidgetComposerProps
public;ContentViewManager
public;CoreTools
public;createAction
public;createAction
internal;createStableWidgetDef(widgetDef: WidgetDef, stableId: string): WidgetDef
alpha;createVisibilityTreeNodeRenderer: (iconsEnabled: boolean, descriptionEnabled: boolean) => (props: TreeNodeRendererProps) => JSX.Element
public;CubeNavigationAidControl 
public;CursorDirection
public;CursorDirectionParts
public;CursorInformation
public;CursorMenuData
public;CursorPopup 
public;CursorPopupContent(props: CommonDivProps): JSX.Element
internal;CursorPopupFadeOutEvent 
internal;CursorPopupFadeOutEventArgs
public;CursorPopupManager
alpha;CursorPopupMenu 
public;CursorPopupOptions
public;CursorPopupProps 
public;CursorPopupRenderer 
internal;CursorPopupShow
internal;CursorPopupUpdatePositionEvent 
internal;CursorPopupUpdatePositionEventArgs
internal;CursorPrompt
public;CursorUpdatedEvent 
public;CursorUpdatedEventArgs
public;CustomItemDef 
public;CustomItemProps 
public;DeepReadonly
public;DeepReadonlyArray
public;DeepReadonlyObject
public;DefaultContentTools
public;DefaultContentToolsAppData
public;DefaultDialogGridContainer({ componentGenerator, isToolSettings }:
beta;DefaultNavigationProps
deprecated;DefaultNavigationProps
public;DefaultNavigationTools
beta;DefaultNavigationWidget 
deprecated;DefaultNavigationWidget 
public;DefaultStatusbarItems
internal;DefaultToolSettingsProvider 
public;DefaultViewOverlay({ viewport, onPlayPause, featureOptions }: ViewOverlayProps): JSX.Element | null
public;DialogChangedEvent 
public;DialogChangedEventArgs
internal;DialogGridContainer({ componentGenerator, containerClassName }: DialogGridContainerProps): JSX.Element
public;DialogInfo
internal;DialogManagerBase
internal;DialogRendererBase 
internal;DialogRendererProps
internal;DockedStatusBarItem(props: StatusBarItemProps): JSX.Element
beta;DrawingNavigationAidControl 
public;ElementTooltip 
public;ElementTooltipChangedEvent 
public;ElementTooltipChangedEventArgs
public;EmphasizeElementsChangedArgs
beta;ExpandableSection 
beta;ExpandableSectionProps 
internal;expandWidget: (base:
public;ExtensibleToolbarProps
beta;featureOverridesActiveStateFunc(state: Readonly
alpha;FocusToolSettings 
public;FooterModeField 
public;FooterModeFieldProps 
beta;FrameworkAccuDraw 
beta;FrameworkRootState
internal;FrameworkStagePanel 
internal;FrameworkStagePanelProps
public;FrameworkState
alpha;FrameworkToolAdmin 
public;FrameworkUiAdmin 
public;FrameworkVersion(props: FrameworkVersionProps): JSX.Element
internal;FrameworkVersionChangedEvent 
internal;FrameworkVersionChangedEventArgs
public;FrameworkVersionContext: React.Context
public;FrameworkVersionId = "1" | "2"
public;FrameworkVersionProps
internal;FrameworkVersionSwitch(props: FrameworkVersionSwitchProps): JSX.Element
internal;FrameworkVersionSwitchProps
internal;FrameworkZone 
internal;FrameworkZoneProps 
public;Frontstage 
internal;FRONTSTAGE_SETTINGS_NAMESPACE = "uifw-frontstageSettings"
public;FrontstageActivatedEvent 
public;FrontstageActivatedEventArgs
public;FrontstageComposer 
public;FrontstageDeactivatedEvent 
public;FrontstageDeactivatedEventArgs
public;FrontstageDef
internal;FrontstageEventArgs
public;FrontstageLaunchBackstageItem 
public;FrontstageLaunchBackstageItemProps 
public;FrontstageManager
internal;FrontstageNineZoneStateChangedEventArgs 
public;FrontstageProps 
public;class FrontstageProvider
public;FrontstageReadyEvent 
public;FrontstageReadyEventArgs
internal;FrontstageRuntimeProps
public;FunctionType = (...args: any[]) => any
public;getBackstageItemStateFromProps: (props: BackstageItemProps) => BackstageItemState
deprecated;getBackstageItemStateFromProps: (props: BackstageItemProps) => BackstageItemState
internal;getBadgeClassName(badgeType: BadgeType | undefined): "uifw-badge-new" | "uifw-badge-tp" | undefined
alpha;getCategories(imodel: IModelConnection, viewport?: Viewport, filteredProvider?: IPresentationTreeDataProvider): Promise
internal;getExtendedZone: (zoneId: WidgetZoneId, zones: ZonesManagerProps, defProvider: ZoneDefProvider) => ZoneManagerProps
beta;getFeatureOverrideSyncEventIds(): string[]
internal;getFirstItem: (groupItemDef: GroupItemDef) => AnyItemDef | undefined
internal;getFirstItemId: (groupItemDef: GroupItemDef) => string
internal;getFloatingZoneBounds: (props: ZoneManagerProps) => RectangleProps
internal;getFloatingZoneStyle: (props: ZoneManagerProps) =>
internal;getFrontstageStateSettingName(frontstageId: WidgetPanelsFrontstageState["id"]): string
beta;getIsHiddenIfFeatureOverridesActive(): ConditionalBooleanValue
beta;getIsHiddenIfSelectionNotActive(): ConditionalBooleanValue
beta;getListPanel(props: ListPickerProps): React.ReactNode
internal;getNestedStagePanelKey: (location: StagePanelLocation_2) => NestedStagePanelKey
internal;getPanelZoneWidgets(frontstageDef: FrontstageDef, panelZone: WidgetIdTypes): WidgetDef[]
beta;getQuantityFormatsSettingsManagerEntry(itemPriority: number, opts?: Partial
beta;getSelectionContextSyncEventIds(): string[]
internal;getStableWidgetProps(widgetProps: WidgetProps, stableId: string): WidgetProps
internal;getStagePanelType: (location: StagePanelLocation_2) => StagePanelType
beta;getUiSettingsManagerEntry(itemPriority: number, allowSettingUiFrameworkVersion?: boolean): SettingsTabEntry
internal;getWidgetId(side: PanelSide, key: StagePanelZoneDefKeys): WidgetIdTypes
public;GroupButton(props: GroupButtonProps): JSX.Element
internal;GroupButtonItem(props: GroupButtonProps_2): JSX.Element
public;GroupButtonProps 
internal;GroupedItems = ReadonlyArray
internal;GroupItem 
public;GroupItemDef 
public;GroupItemProps 
public;HideIsolateEmphasizeAction
public;class HideIsolateEmphasizeActionHandler
public;HideIsolateEmphasizeManager 
alpha;HTMLElementPopup 
alpha;HTMLElementPopupProps 
beta;IModelAppUiSettings 
deprecated;IModelAppUiSettings 
beta;IModelConnectedNavigationWidget: import("react-redux").ConnectedComponent
deprecated;IModelConnectedNavigationWidget: import("react-redux").ConnectedComponent
public;IModelConnectedViewport: import("react-redux").ConnectedComponent
beta;IModelConnectedViewSelector: import("react-redux").ConnectedComponent
public;IModelViewportControl 
public;IModelViewportControlOptions
internal;INACTIVITY_TIME_DEFAULT = 3500
beta;Indicator 
public;InitialAppUiSettings
internal;initializeNineZoneState(frontstageDef: FrontstageDef): NineZoneState
internal;initializePanel(nineZone: NineZoneState, frontstageDef: FrontstageDef, panelSide: PanelSide): NineZoneState
alpha;InputEditorCommitHandler
alpha;InputEditorPopup 
alpha;InputEditorPopupProps 
public;InputFieldMessage 
public;InputFieldMessageAddedEvent 
public;InputFieldMessageEventArgs
public;InputFieldMessageRemovedEvent 
alpha;InputStatus
internal;isCollapsedToPanelState: (isCollapsed: boolean) => StagePanelState.Minimized | StagePanelState.Open
internal;isFrontstageStateSettingResult(settingsResult: UiSettingsResult): settingsResult is
beta;isNoSelectionActive(): boolean
internal;isPanelCollapsed(zoneStates: ReadonlyArray
internal;isReactContent: (content: PopupContentType) => content is ReactContent
internal;isReactNotifyMessageDetails: (details: any) => details is ReactNotifyMessageDetails
public;isStatusBarItem: (item: CommonStatusBarItem) => item is StatusBarItem
internal;isToolSettingsWidgetManagerProps: (props: WidgetManagerProps | undefined) => props is ToolSettingsWidgetManagerProps
public;class ItemDefBase
public;ItemList 
public;ItemMap 
public;ItemProps 
alpha;IVisibilityHandler 
public;KeyboardShortcut 
public;KeyboardShortcutContainer
public;KeyboardShortcutManager
public;KeyboardShortcutMenu 
public;KeyboardShortcutMenuEvent 
public;KeyboardShortcutMenuState
public;KeyboardShortcutProps 
beta;KeyinBrowser 
beta;KeyinBrowserExecuteArgs
beta;KeyinBrowserProps 
public;KeyinEntry
public;KeyinFieldLocalization
internal;KeyinPalettePanel({ keyins, onKeyinExecuted, historyLength: allowedHistoryLength }: KeyinPalettePanelProps): JSX.Element
alpha;KeyinPalettePopup({ el, id, keyins, onCancel, onItemExecuted }: KeyinPalettePopupProps): JSX.Element
alpha;KeyinPalettePopupProps
beta;ListItem
beta;ListItemType
beta;ListPicker 
beta;ListPickerBase 
beta;ListPickerItem 
beta;ListPickerItemProps 
beta;ListPickerProps
beta;ListPickerPropsExtended 
public;MarkupTools
alpha;MenuButton 
alpha;MenuButtonPopup 
alpha;MenuButtonPopupProps 
alpha;MenuButtonProps 
alpha;MenuItem 
alpha;MenuItemHelpers
public;MenuItemProps = AbstractMenuItemProps
public;MessageAddedEvent 
public;MessageAddedEventArgs
public;MessageCenterField 
public;MessageCenterFieldProps 
public;MessageManager
public;MessagesUpdatedEvent 
public;ModalDialogChangedEvent 
public;ModalDialogManager
public;ModalDialogRenderer 
public;ModalFrontstage 
public;ModalFrontstageChangedEvent 
public;ModalFrontstageChangedEventArgs
public;ModalFrontstageClosedEvent 
public;ModalFrontstageClosedEventArgs
internal;ModalFrontstageComposer({ stageInfo }:
public;ModalFrontstageInfo
public;ModalFrontstageProps 
alpha;ModalFrontstageRequestedCloseEvent 
alpha;ModalFrontstageRequestedCloseEventArgs
public;ModelessDialog 
public;ModelessDialogChangedEvent 
public;ModelessDialogManager
public;ModelessDialogProps 
public;ModelessDialogRenderer 
public;ModelsTree(props: ModelsTreeProps): JSX.Element
beta;ModelsTreeNodeType
public;ModelsTreeProps
beta;ModelsTreeSelectionPredicate = (key: NodeKey, type: ModelsTreeNodeType) => boolean
alpha;ModelsVisibilityHandler 
alpha;ModelsVisibilityHandlerProps
public;MouseDownChangedEvent 
public;MouseDownChangedEventArgs
public;NameToReducerMap
public;NavigationAidActivatedEvent 
public;NavigationAidActivatedEventArgs
public;NavigationAidControl 
public;NavigationAidHost(props: NavigationAidHostProps): JSX.Element
public;NavigationAidHostProps
public;NavigationWidget 
deprecated;NavigationWidget 
public;NavigationWidgetComposer(props: NavigationWidgetComposerProps): JSX.Element
public;NavigationWidgetComposerProps 
public;NavigationWidgetDef 
deprecated;NavigationWidgetDef 
public;NavigationWidgetProps 
public;NavigationWidgetPropsEx 
deprecated;NavigationWidgetPropsEx 
public;NestedFrontstage
public;NineZoneChangeHandler
public;NotifyMessageDetailsType = NotifyMessageDetails | ReactNotifyMessageDetails
public;NotifyMessageType = MessageType
public;OpenChildWindowInfo
public;OpenMessageCenterEvent 
internal;packNineZoneState(state: NineZoneState): SavedNineZoneState
internal;PanelSizeChangedEvent 
internal;PanelSizeChangedEventArgs
beta;PanelStateChangedEvent 
public;PanelStateChangedEventArgs
internal;panelStateToIsCollapsed: (panelState: StagePanelState) => boolean
public;PointerMessage 
public;PointerMessageChangedEvent 
public;PointerMessageChangedEventArgs
public;PointerMessageProps 
public;PopupButton 
deprecated;PopupButton 
public;PopupButtonChildrenRenderProp = (args: PopupButtonChildrenRenderPropArgs) => React.ReactNode
deprecated;PopupButtonChildrenRenderProp = (args: PopupButtonChildrenRenderPropArgs) => React.ReactNode
public;PopupButtonChildrenRenderPropArgs
deprecated;PopupButtonChildrenRenderPropArgs
public;PopupButtonProps 
deprecated;PopupButtonProps 
alpha;PopupContentType = HTMLElement | ReactContent
alpha;PopupInfo
alpha;PopupManager
alpha;PopupPropsBase
alpha;PopupRenderer 
alpha;PopupsChangedEvent 
alpha;PopupsChangedEventArgs
alpha;PositionPopup 
alpha;PositionPopupContent(props: CommonDivProps): JSX.Element
alpha;PositionPopupProps 
public;PresentationSelectionScope
public;PromptField: import("react-redux").ConnectedComponent
deprecated;PromptField: import("react-redux").ConnectedComponent
public;PropsHelper
beta;QuantityFormatSettingsPage({ initialQuantityType, availableUnitSystems }: QuantityFormatterSettingsOptions): JSX.Element
beta;QuantityFormatterSettingsOptions
alpha;ReactContent
public;ReactNotifyMessageDetails
public;Reducer
public;ReducerActions
public;ReducerMapActions
beta;ReducerRegistry
beta;ReducerRegistryInstance: ReducerRegistry
internal;removeMissingWidgets(frontstageDef: FrontstageDef, initialState: NineZoneState): NineZoneState
alpha;RestoreFrontstageLayoutTool 
internal;restoreNineZoneState(frontstageDef: FrontstageDef, saved: SavedNineZoneState): NineZoneState
beta;ReviewToolWidget 
beta;ReviewToolWidgetProps
internal;RotationData
internal;RULESET_CATEGORIES: Ruleset
internal;RULESET_MODELS: Ruleset
internal;RULESET_MODELS_GROUPED_BY_CLASS: Ruleset
internal;RULESET_SPATIAL_BREAKDOWN: Ruleset
internal;RULESET_SPATIAL_BREAKDOWN_GROUPED_BY_CLASS: Ruleset
public;SafeAreaContext: React.Context
public;SavedView
public;SavedViewLayout
public;SavedViewLayoutProps
public;SavedViewProps 
internal;saveFrontstagePopoutWidgetSizeAndPosition(state: NineZoneState, stageId: string, stageVersion: number, childWindowId: string, childWindow: Window): Promise
public;ScheduleAnimationTimelineDataProvider 
beta;SectionsStatusField(props: SectionsStatusFieldProps): JSX.Element
beta;SectionsStatusFieldProps 
beta;selectionContextStateFunc(state: Readonly
public;SelectionContextToolDefinitions
public;SelectionInfoField: import("react-redux").ConnectedComponent
public;SelectionScope
public;SelectionScopeField: import("react-redux").ConnectedComponent
public;SeparatorBackstageItem 
public;SessionState
public;SessionStateActionId
public;SessionStateActions:
beta;SessionStateActionsProps
public;SessionStateActionsUnion = ActionsUnion
beta;sessionStateMapDispatchToProps:
public;SessionStateReducer(state: SessionState | undefined, action: SessionStateActionsUnion): DeepReadonly
internal;setPanelSize: (base:
beta;SettingsModalFrontstage 
internal;settingsStatusToUiSettingsStatus(status: SettingsStatus): UiSettingsStatus
internal;setWidgetLabel: (base:
internal;setWidgetState: (base:
alpha;SheetCard 
alpha;SheetCardProps
alpha;SheetData
alpha;SheetNavigationAid 
alpha;SheetNavigationAidControl 
alpha;SheetNavigationProps 
alpha;SheetsModalFrontstage 
internal;showWidget: (base:
public;SnapModeField: import("react-redux").ConnectedComponent
alpha;SolarTimelineDataProvider 
public;SpatialContainmentTree(props: SpatialContainmentTreeProps): JSX.Element
public;SpatialContainmentTreeProps
internal;SplitterPaneTarget 
internal;SplitterPaneTargetProps
public;StagePanel 
public;StagePanelChangeHandler
public;StagePanelDef 
public;StagePanelDefaultProps = Pick
alpha;StagePanelHeader 
alpha;StagePanelHeaderProps 
alpha;StagePanelLocation
deprecated;StagePanelLocation
public;StagePanelMaxSizeSpec = number |
public;StagePanelProps
internal;StagePanelRuntimeProps
alpha;StagePanelSection
deprecated;StagePanelSection
public;StagePanelState
internal;StagePanelZoneDef 
internal;StagePanelZoneDefKeys = keyof Pick
public;StagePanelZoneProps
internal;StagePanelZonesDef
public;StagePanelZonesProps
public;StandardContentToolsProvider 
public;StandardFrontstageProps
public;StandardFrontstageProvider 
public;StandardMessageBox 
public;StandardMessageBoxProps 
public;StandardNavigationToolsProvider 
alpha;StandardRotationNavigationAid 
alpha;StandardRotationNavigationAidControl 
public;StandardStatusbarItemsProvider 
public;StateManager
public;StateType
public;StatusBar 
public;StatusBarCenterSection(props: CommonDivProps): JSX.Element
public;StatusBarComposer(props: StatusBarComposerProps): JSX.Element
public;StatusBarComposerProps 
internal;StatusBarContext: React.Context
public;StatusBarFieldId = string | null
public;StatusBarItem 
internal;StatusBarItemProps 
beta;StatusBarItemsManager 
deprecated;StatusBarItemsManager 
public;StatusBarItemUtilities
public;StatusBarLeftSection(props: CommonDivProps): JSX.Element
public;StatusBarProps 
public;StatusBarRightSection(props: CommonDivProps): JSX.Element
public;StatusBarSpaceBetween(props: CommonDivProps): JSX.Element
public;StatusBarWidgetComposerControl 
public;class StatusBarWidgetControl 
public;StatusBarWidgetControlArgs
internal;StatusBarZone 
internal;StatusBarZoneProps 
public;StatusFieldProps 
public;StatusMessageRenderer(props: StatusMessageRendererProps): JSX.Element | null
public;StatusMessageRendererProps 
public;StickyMessage(props: StickyMessageProps): JSX.Element
public;StickyMessageProps
public;SupportsViewSelectorChange
public;SyncToolSettingsPropertiesEvent 
public;SyncToolSettingsPropertiesEventArgs
public;SyncUiEvent 
public;SyncUiEventArgs
public;SyncUiEventDispatcher
public;SyncUiEventId
public;SYSTEM_PREFERRED_COLOR_THEME = "SYSTEM_PREFERRED"
internal;TabLocation
public;TargetChangeHandler
internal;Task 
deprecated;Task 
internal;TaskActivatedEvent 
deprecated;TaskActivatedEvent 
internal;TaskActivatedEventArgs
deprecated;TaskActivatedEventArgs
internal;TaskLaunchBackstageItem 
deprecated;TaskLaunchBackstageItem 
internal;TaskLaunchBackstageItemProps 
deprecated;TaskLaunchBackstageItemProps 
internal;TaskManager
deprecated;TaskManager
internal;TaskProps 
deprecated;TaskProps 
internal;TaskPropsList
deprecated;TaskPropsList
public;ThemeManager: import("react-redux").ConnectedComponent
public;TileLoadingIndicator 
public;ToastMessage(props: ToastMessageProps): JSX.Element
public;ToastMessageProps
alpha;toggleAllCategories(viewManager: ViewManager, imodel: IModelConnection, display: boolean, viewport?: Viewport, forAllViewports?: boolean, filteredProvider?: IPresentationTreeDataProvider): Promise
public;ToolActivatedEvent 
public;ToolActivatedEventArgs
public;ToolAssistanceChangedEvent 
public;ToolAssistanceChangedEventArgs
public;ToolAssistanceField 
internal;ToolAssistanceFieldDefaultProps = Pick
public;ToolAssistanceFieldProps 
internal;Toolbar 
public;ToolbarButtonHelper
public;ToolbarComposer(props: ExtensibleToolbarProps): JSX.Element
beta;ToolbarDragInteractionContext: React.Context
internal;ToolbarGroupItem 
public;ToolbarHelper
alpha;ToolbarPopup 
alpha;ToolbarPopupProps 
internal;ToolbarProps 
public;ToolbarWidgetDefBase 
public;ToolbarWidgetProps 
public;ToolButton 
public;ToolButtonProps 
internal;ToolGroupPanelContext: React.Context
public;ToolIconChangedEvent 
public;ToolIconChangedEventArgs
public;ToolInformation
public;ToolItemDef 
public;ToolItemProps 
internal;ToolSettingsContent(): JSX.Element | null
internal;ToolSettingsDockedContent(): JSX.Element
public;ToolSettingsEntry
internal;ToolSettingsGrid({ settings }: ToolSettingsGridProps): JSX.Element
public;ToolSettingsGridContainer({ componentGenerator }:
internal;ToolSettingsGridProps
public;ToolSettingsManager
internal;ToolSettingsWidgetContent(): JSX.Element
internal;ToolSettingsZone 
internal;ToolSettingsZoneProps 
public;ToolUiProvider 
public;ToolWidget 
deprecated;ToolWidget 
public;ToolWidgetComposer(props: ToolWidgetComposerProps): JSX.Element
public;ToolWidgetComposerProps 
public;ToolWidgetDef 
deprecated;ToolWidgetDef 
public;ToolWidgetProps 
public;ToolWidgetPropsEx 
deprecated;ToolWidgetPropsEx 
internal;toPanelSide(location: StagePanelLocation_2): PanelSide
internal;TrackingTime
internal;UiActivityEvent 
internal;UiActivityEventArgs
public;UiDataProvidedDialog({ uiDataProvider, id, isModal, ...dialogProps }: UiDataProvidedDialogProps): JSX.Element
public;UiDataProvidedDialogProps
public;UiFramework
internal;UiIntervalEvent 
internal;UiIntervalEventArgs
internal;UiSettingsContext: React.Context
beta;UiSettingsPage({ allowSettingUiFrameworkVersion }:
public;UiSettingsProvider(props: UiSettingsProviderProps): JSX.Element
public;UiSettingsProviderProps
public;UiShowHideManager
internal;UiShowHideSettingsProvider 
public;UiVisibilityChangedEvent 
public;UiVisibilityEventArgs
alpha;UnitSystemSelector(props: UnitSystemSelectorProps): JSX.Element
beta;UnitSystemSelectorProps
internal;useActiveFrontstageDef(): import("./FrontstageDef").FrontstageDef | undefined
public;useActiveFrontstageId: () => string
public;useActiveIModelConnection(): IModelConnection | undefined
internal;useActiveModalFrontstageInfo(): ModalFrontstageInfo | undefined
public;useActiveStageId(): string
public;useActiveViewport(): ScreenViewport | undefined
public;useAnalysisAnimationDataProvider(viewport: ScreenViewport | undefined): AnalysisAnimationTimelineDataProvider | undefined
internal;useAvailableUiItemsProviders(): readonly string[]
public;useBackstageManager: () => BackstageManager
internal;useDefaultBackstageItems: (manager: BackstageItemsManager) => readonly BackstageItem[]
public;useDefaultStatusBarItems: (manager: StatusBarItemsManager_2) => readonly CommonStatusBarItem[]
public;useDefaultToolbarItems: (manager: ToolbarItemsManager) => readonly CommonToolbarItem[]
public;useFrameworkVersion(): FrameworkVersionId
internal;useFrontstageManager(frontstageDef: FrontstageDef): void
internal;useGroupedItems: (items: ReadonlyArray
internal;useHorizontalToolSettingNodes(): ToolSettingsEntry[] | undefined
public;useIsBackstageOpen: (manager: BackstageManager) => boolean
internal;useItemsManager(frontstageDef: FrontstageDef): void
internal;useLabels(): NineZoneLabels
internal;useNineZoneDispatch(frontstageDef: FrontstageDef): NineZoneDispatch
internal;useNineZoneState(frontstageDef: FrontstageDef): NineZoneState | undefined
public;UserInfo
public;UserSettingsProvider
public;UserSettingsStorage 
internal;useSavedFrontstageState(frontstageDef: FrontstageDef): void
internal;useSaveFrontstageSettings(frontstageDef: FrontstageDef): void
public;useScheduleAnimationDataProvider(viewport: ScreenViewport | undefined): ScheduleAnimationTimelineDataProvider | undefined
beta;useSolarDataProvider(viewport: ScreenViewport | undefined): SolarDataProvider | undefined
internal;useStatusBarEntry(): DockedStatusBarEntryContextArg
internal;useSyncDefinitions(frontstageDef: FrontstageDef): void
internal;useToolSettingsNode(): string | number | boolean | {} | React.ReactElement
public;useUiItemsProviderBackstageItems: (manager: BackstageItemsManager) => readonly BackstageItem[]
public;useUiItemsProviderStatusBarItems: (manager: StatusBarItemsManager_2) => readonly CommonStatusBarItem[]
public;useUiItemsProviderToolbarItems: (manager: ToolbarItemsManager, toolbarUsage: ToolbarUsage, toolbarOrientation: ToolbarOrientation) => readonly CommonToolbarItem[]
public;useUiSettingsStorageContext(): UiSettingsStorage
internal;useUiVisibility(): boolean
internal;useUpdateNineZoneSize(frontstageDef: FrontstageDef): void
alpha;useVisibilityTreeFiltering: (nodeLoader: AbstractTreeNodeLoaderWithProvider
alpha;useVisibilityTreeRenderer: (iconsEnabled: boolean, descriptionsEnabled: boolean) => (props: TreeRendererProps) => JSX.Element
internal;useWidgetDef(): WidgetDef | undefined
alpha;useWidgetDirection(): "horizontal" | "vertical"
alpha;ValidationTextbox 
beta;ViewAttributesStatusField 
public;ViewLayout
public;ViewOverlayProps
public;ViewportContentControl 
beta;ViewSelector 
beta;ViewSelectorChangedEvent 
beta;ViewSelectorChangedEventArgs
beta;ViewSelectorDefaultProps = Pick
beta;ViewSelectorProps
public;ViewToolWidgetComposer(props: ViewToolWidgetComposerProps): JSX.Element
public;ViewToolWidgetComposerProps
public;ViewUtilities
alpha;VisibilityChangeListener = (nodeIds?: string[], visibilityStatus?: Map
alpha;VisibilityStatus
alpha;VisibilityTreeEventHandler 
alpha;VisibilityTreeEventHandlerParams 
alpha;VisibilityTreeFilterInfo
alpha;visibilityTreeNodeCheckboxRenderer: (props: NodeCheckboxRenderProps) => JSX.Element
alpha;VisibilityTreeNoFilteredData(props: VisibilityTreeNoFilteredDataProps): JSX.Element
alpha;VisibilityTreeNoFilteredDataProps
alpha;VisibilityTreeSelectionPredicate = (key: NodeKey, node: TreeNodeItem) => boolean
public;Widget 
public;WIDGET_OPACITY_DEFAULT = 0.9
internal;WidgetChangedEventArgs
public;WidgetChangeHandler
internal;WidgetContent(): JSX.Element
public;WidgetControl 
public;WidgetDef
internal;WidgetEventArgs
public;WidgetHost
internal;WidgetInfo
beta;WidgetManager
public;WidgetPanelProps = Omit
internal;WidgetPanelsFrontstage: React.NamedExoticComponent
internal;WidgetPanelsFrontstageContent(): JSX.Element | null
internal;WidgetPanelsFrontstageState
internal;WidgetPanelsStatusBar(props: CommonProps): JSX.Element | null
internal;WidgetPanelsTab(): JSX.Element
internal;WidgetPanelsToolbars(): JSX.Element
internal;WidgetPanelsToolSettings(): JSX.Element | null
public;WidgetProps 
internal;WidgetsChangedEvent 
internal;WidgetsChangedEventArgs
internal;WidgetStack 
internal;WidgetStackProps 
internal;WidgetStackTab 
internal;WidgetStackTabGroup 
internal;WidgetStackTabGroupProps
internal;WidgetStackTabProps
internal;WidgetStackTabs 
internal;WidgetStackTabsProps
public;WidgetStateChangedEvent 
public;WidgetStateChangedEventArgs
public;WidgetStateFunc = (state: Readonly
internal;WidgetTab
internal;WidgetTabs =
public;WidgetType
public;withMessageCenterFieldProps: 
public;withSafeArea: 
public;withStatusFieldProps: 
internal;Workflow 
deprecated;Workflow 
internal;WorkflowActivatedEvent 
deprecated;WorkflowActivatedEvent 
internal;WorkflowActivatedEventArgs
deprecated;WorkflowActivatedEventArgs
internal;WorkflowManager
deprecated;WorkflowManager
internal;WorkflowProps 
deprecated;WorkflowProps 
internal;WorkflowPropsList
deprecated;WorkflowPropsList
public;Zone 
public;ZoneDef 
public;ZoneDefProvider
public;ZoneLocation
public;ZoneProps 
internal;ZoneRuntimeProps
public;ZoneState