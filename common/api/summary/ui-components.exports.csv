sep=;
Release Tag;API Item
beta;class AbstractTreeNodeLoader 
beta;class AbstractTreeNodeLoaderWithProvider
beta;ActionButtonList 
beta;ActionButtonListProps
beta;ActionButtonRenderer = (props: ActionButtonRendererProps) => React.ReactNode
beta;ActionButtonRendererProps
internal;ActionItem({ item, addGroupSeparator }:
beta;ActiveMatchInfo
alpha;adjustDateToTimezone(inDateTime: Date, utcOffset: number): Date
beta;AlphaSlider 
beta;AlphaSliderProps 
alpha;AnimationFractionChangeHandler = (animationFraction: number) => void
public;ArrayPropertyValueRenderer 
beta;AsyncErrorMessage
beta;AsyncValueProcessingResult
public;class BasePointTypeConverter 
alpha;BaseSolarDataProvider 
alpha;BaseTimelineDataProvider 
beta;BasicPropertyEditor 
beta;BeDragDropContext: typeof BeDragDropContextComponent & ContextComponent
beta;BeDragDropContextComponent 
public;BeInspireTree
public;BeInspireTreeDataProvider
public;BeInspireTreeDataProviderInterface
public;BeInspireTreeDataProviderMethod
public;BeInspireTreeDataProviderPromise
public;BeInspireTreeDataProviderRaw
public;BeInspireTreeEvent
public;BeInspireTreeNode
public;BeInspireTreeNodeConfig
public;BeInspireTreeNodeITree
public;BeInspireTreeNodePayloadConfig
public;BeInspireTreeNodes
public;BeInspireTreeProps
public;BeInspireTreeRenderer
beta;BooleanEditor 
beta;BooleanPropertyEditor 
public;BooleanTypeConverter 
beta;Breadcrumb 
beta;BreadcrumbDetails 
beta;BreadcrumbDetailsDragDropProps
beta;BreadcrumbDetailsDragDropType = {} | TreeNodeItem | TableDataProvider
beta;BreadcrumbDetailsProps 
beta;BreadcrumbDragDropProps
internal;BreadcrumbInput 
internal;BreadcrumbInputProps
internal;BreadcrumbInputState
beta;BreadcrumbMode
beta;BreadcrumbNode 
beta;BreadcrumbNodeProps
internal;BreadcrumbNodeRenderer = (props: BreadcrumbNodeProps, node?: TreeNodeItem, parent?: TreeNodeItem) => React.ReactNode
beta;BreadcrumbPath
beta;BreadcrumbProps 
beta;BreadcrumbTreeUtils
beta;BreadcrumbUpdateEvent 
beta;BreadcrumbUpdateEventArgs
alpha;CategorizedPropertyItem 
alpha;CategorizedPropertyTypes = FlatGridItemType.Array | FlatGridItemType.Primitive | FlatGridItemType.Struct
alpha;CategoryRecordsDict
beta;CellEditingEngine
public;CellItem
public;CellProps
beta;CheckBoxInfo
beta;CheckboxStateChange
beta;ColorEditor 
beta;ColorPickerButton: React.ForwardRefExoticComponent
beta;ColorPickerDialog({ dialogTitle, color, onOkResult, onCancelResult, colorPresets }: ColorPickerDialogProps): JSX.Element
beta;ColorPickerDialogProps
beta;ColorPickerPanel({ activeColor, onColorChange, colorPresets }: ColorPickerPanelProps): JSX.Element
beta;ColorPickerPanelProps
beta;ColorPickerPopup: React.ForwardRefExoticComponent
beta;ColorPickerPopupProps 
beta;ColorPickerProps 
beta;ColorPropertyEditor 
beta;ColorSwatch(props: ColorSwatchProps): JSX.Element
beta;ColorSwatchProps 
public;ColumnDescription
beta;ColumnFilterDescriptor 
public;CommonPropertyGridProps 
public;CompletionObserver
beta;CompositeFilterDescriptor 
beta;CompositeFilterDescriptorCollection
alpha;CompositeFilterType
alpha;CompositePropertyDataFilterer 
public;CompositeTypeConverter 
internal;ContextMenu 
internal;ContextMenuItem 
internal;ContextMenuProps 
beta;ControlledSelectableContent(props: ControlledSelectableContentProps): JSX.Element
beta;ControlledSelectableContentProps
beta;ControlledTree(props: ControlledTreeProps): JSX.Element
beta;ControlledTreeProps 
public;ConvertedPrimitives
internal;CubeHover
beta;CubeNavigationAid 
beta;CubeNavigationAidProps 
public;CubeRotationChangeEvent 
public;CubeRotationChangeEventArgs
internal;CustomItem({ item, addGroupSeparator }:
alpha;CustomNumberEditor 
alpha;CustomNumberPropertyEditor 
beta;CustomToolbarItem 
beta;DataController
beta;class DataControllerBase 
internal;DataRowItem 
internal;DateField({ initialDate, onDateChange, readOnly, dateFormatter, timeDisplay, style, className }: DateFieldProps): JSX.Element
internal;DateFieldProps 
alpha;DatePicker(props: DatePickerProps): JSX.Element
alpha;DatePickerPopupButton({ displayEditField, timeDisplay, selected, onDateChange, dateFormatter, buttonToolTip, fieldStyle, fieldClassName }: DatePickerPopupButtonProps): JSX.Element
alpha;DatePickerPopupButtonProps 
alpha;DatePickerProps
internal;DateTimeEditor 
internal;DateTimePropertyEditor 
public;DateTimeTypeConverter 
public;class DateTimeTypeConverterBase 
public;DelayLoadedTreeNodeItem 
public;DEPRECATED_FilteringInputProps 
public;DEPRECATED_Tree 
beta;DEPRECATED_withTreeDragDrop
beta;Direction
internal;DirectionHelpers
alpha;DisplayValuePropertyDataFilterer 
beta;DistinctValueCollection
beta;DistinctValuesFilterDescriptor 
public;DoublePropertyValueRenderer 
internal;DragAction
beta;DragDropArguments
beta;DragLayerProps
beta;DragSourceArguments
beta;DragSourceProps
beta;DrawingNavigationAid 
beta;DrawingNavigationAidProps 
internal;DrawingNavigationCanvas 
internal;DrawingNavigationCanvasProps
public;DrawingViewportChangeEvent 
public;DrawingViewportChangeEventArgs
beta;DropEffects
beta;DropStatus
beta;DropTargetArguments
beta;DropTargetProps
public;EditableTreeDataProvider 
beta;EditableTreeProps
beta;EditorContainer 
beta;EditorContainerProps 
beta;EnumButtonGroupEditor 
beta;EnumEditor 
beta;EnumPropertyButtonGroupEditor 
beta;EnumPropertyEditor 
public;EnumTypeConverter 
public;ErrorObserver
public;EventsMuteContext 
beta;ExtendedTreeNodeRendererProps 
internal;FaceCell 
internal;FaceCellProps 
beta;FavoritePropertiesRenderer
alpha;FavoritePropertyList 
alpha;FavoritePropertyListProps
beta;FieldFilterDescriptor 
beta;FilterableColumn
beta;FilterableTable
beta;FilterCompositionLogicalOperator
beta;FilterDescriptor
beta;FilterDescriptorCollection 
beta;class FilterDescriptorCollectionBase
alpha;FilteredPropertyData 
public;FilteringInput 
public;FilteringInputProps = DEPRECATED_FilteringInputProps | NEW_FilteringInputProps
beta;FilteringInputStatus
alpha;FilteringPropertyDataProvider 
beta;FilterOperator
beta;FilterRenderer
alpha;FlatGridItem = CategorizedPropertyItem | GridCategoryItem
alpha;FlatGridItemBase
alpha;FlatGridItemType
public;FloatTypeConverter 
internal;formatInputDate(inputDate: Date, timeDisplay?: TimeDisplay, customFormatter?: DateFormatter, alternateDateFormat?: AlternateDateFormats): string | undefined
public;from
beta;GetCurrentlyEditedNode = () => BeInspireTreeNode
internal;getToolbarDirection: (expandsTo: Direction) => OrthogonalDirection
alpha;GridCategoryItem 
internal;GroupPopupItem({ item, addGroupSeparator }:
internal;handleLoadedNodeHierarchy(modelSource: TreeModelSource, loadedHierarchy: LoadedNodeHierarchy): void
public;hasChildren: (node: TreeNodeItem) => boolean
public;hasFlag: (selectionMode: SelectionMode, flag: SelectionModeFlags) => boolean
public;hasSelectionModeFlag: (selectionMode: SelectionMode, flag: SelectionModeFlags) => boolean
public;HexadecimalTypeConverter 
beta;HighlightableTreeNodeProps
beta;HighlightableTreeProps
beta;HighlightedRecordProps
beta;HighlightingEngine
internal;HitBoxX
internal;HitBoxY
internal;HitBoxZ
beta;HueSlider({ isHorizontal, onHueChange, hsv, className, style }: HueSliderProps): JSX.Element
beta;HueSliderProps 
alpha;IconEditor 
alpha;IconPickerButton 
alpha;IconPickerProps 
alpha;IconPropertyEditor 
public;IImageLoader
public;Image = LoadedImage | LoadedBinaryImage
beta;ImageCheckBoxEditor 
beta;ImageCheckBoxPropertyEditor 
public;ImageFileFormat = "png" | "jpg" | "jpge"
public;ImageSourceType = "svg" | "url" | "binary" | "core-icon" | "webfont-icon"
public;ImmediatelyLoadedTreeNodeItem 
alpha;IMutableCategorizedPropertyItem 
alpha;IMutableFlatGridItem = IMutableCategorizedPropertyItem | IMutableGridCategoryItem
alpha;IMutableFlatPropertyGridItem
alpha;IMutableGridCategoryItem 
alpha;IMutableGridItemFactory
alpha;IMutablePropertyGridModel
internal;InlineEdit 
internal;InputSwitchComponent 
internal;InputSwitchProps
alpha;IntlFormatter 
public;IntTypeConverter 
alpha;IPropertyDataFilterer
public;IPropertyDataProvider
alpha;IPropertyGridEventHandler
alpha;IPropertyGridModel
alpha;IPropertyGridModelSource
public;IPropertyValueRenderer
internal;isCustomToolbarItem(item: ToolbarItem): item is CustomToolbarItem
public;isTreeDataProviderInterface: (provider: TreeDataProvider) => provider is ITreeDataProvider
public;isTreeDataProviderMethod: (provider: TreeDataProvider) => provider is TreeDataProviderMethod
public;isTreeDataProviderPromise: (provider: TreeDataProvider) => provider is TreeDataProviderPromise
public;isTreeDataProviderRaw: (provider: TreeDataProvider) => provider is TreeDataProviderRaw
beta;isTreeModelNode(obj: TreeModelNodeType | undefined): obj is TreeModelNode
beta;isTreeModelNodePlaceholder(obj: TreeModelNodeType | undefined): obj is TreeModelNodePlaceholder
beta;isTreeModelRootNode(obj: TreeModelNodeType | undefined): obj is TreeModelRootNode
public;ItemColorOverrides
public;ItemStyle
public;ItemStyleProvider:
public;ITreeDataProvider
public;ITreeImageLoader 
beta;ITreeNodeLoader
beta;ITreeNodeLoaderWithProvider
alpha;LabelPropertyDataFilterer 
public;LessGreaterOperatorProcessor
beta;LineWeightSwatch 
beta;LineWeightSwatchProps 
public;LoadedBinaryImage 
public;LoadedImage
beta;LoadedNodeHierarchy
beta;LoadedNodeHierarchyItem
internal;MapMode
public;MapPayloadToInspireNodeCallback
public;matchLinks: (text: string) =>
internal;MenuItem
alpha;Milestone
alpha;MilestoneRange
internal;MultiSelectionHandler
alpha;MutableCategorizedArrayProperty 
alpha;MutableCategorizedPrimitiveProperty 
alpha;class MutableCategorizedProperty 
alpha;MutableCategorizedStructProperty 
beta;MutableCheckBoxInfo 
alpha;class MutableFlatPropertyGridItem 
alpha;MutableGridCategory 
alpha;MutableGridItemFactory 
alpha;MutablePropertyGridModel 
beta;MutableTableDataProvider 
beta;MutableTreeDataProvider 
beta;MutableTreeModel 
beta;MutableTreeModelNode 
internal;NavCubeFace 
internal;NavCubeFaceProps 
public;NavigationPropertyTypeConverter 
public;NavigationPropertyValueRenderer 
public;NEW_FilteringInputProps 
public;NextObserver
internal;Node
public;NodeCheckboxProps 
internal;NodeRenderer = (item: BeInspireTreeNode
internal;NodesDeselectedCallback = OnItemsDeselectedCallback
internal;NodesSelectedCallback = OnItemsSelectedCallback
public;NonPrimitivePropertyLabelRenderer 
public;NonPrimitivePropertyLabelRendererProps 
public;NonPrimitivePropertyRenderer 
public;NonPrimitivePropertyRendererProps 
public;NullableOperatorProcessor
beta;NumericInputEditor 
beta;NumericInputPropertyEditor 
public;class NumericTypeConverterBase 
public;Observable
public;Observer
public;OnItemsDeselectedCallback
public;OnItemsSelectedCallback
public;OnSelectionChanged = (shiftDown?: boolean, ctrlDown?: boolean) => void
public;OperatorProcessor
beta;OperatorValueFilterDescriptor 
beta;OperatorValueFilterDescriptorCollection 
alpha;OrthogonalDirection
internal;OrthogonalDirectionHelpers
beta;PagedTreeNodeLoader
public;PageOptions
beta;ParsedInput: React.ForwardRefExoticComponent
beta;ParsedInputProps 
alpha;PlaybackSettings
alpha;PlaybackSettingsChangeHandler = (settingsChange: PlaybackSettings) => void
internal;PlayButton 
internal;PlayerButton 
internal;PlayerButtonProps 
public;Point2dTypeConverter 
public;Point3dTypeConverter 
beta;PopupItem(props: PopupItemProps): JSX.Element
internal;PopupItemPopup(props: PopupItemPopupProps): JSX.Element
beta;PopupItemProps 
beta;PopupItemWithDrag(props: PopupItemWithDragProps): JSX.Element
beta;PopupItemWithDragProps 
public;PrimitivePropertyLabelRenderer 
public;PrimitivePropertyLabelRendererProps 
public;PrimitivePropertyRenderer 
public;PrimitivePropertyValueRenderer 
internal;PrimitivePropertyValueRendererImpl(props: PrimitivePropertyValueRendererImplProps): JSX.Element
public;PrimitiveRendererProps 
public;PropertyCategory
public;PropertyCategoryBlock 
public;PropertyCategoryBlockProps 
public;PropertyContainerType
public;PropertyData
public;PropertyDataChangeEvent 
public;PropertyDataChangesListener = () => void
alpha;class PropertyDataFiltererBase 
alpha;PropertyDataFilterResult
public;PropertyDialogState
public;PropertyEditingArgs
beta;class PropertyEditorBase 
beta;PropertyEditorManager
beta;PropertyEditorProps 
alpha;PropertyFilterChangeEvent 
alpha;PropertyFilterChangesListener = () => void
public;PropertyGrid 
public;PropertyGridCategory
internal;PropertyGridCommons
public;PropertyGridContextMenuArgs
alpha;PropertyGridEventHandler
internal;PropertyGridEventsRelatedProps = Pick
internal;PropertyGridEventsRelatedPropsSupplier 
internal;PropertyGridEventsRelatedPropsSupplierProps 
alpha;PropertyGridModelChangeEvent 
alpha;PropertyGridModelChangeListener = () => void
alpha;PropertyGridModelSource 
public;PropertyGridProps 
internal;PropertyLabelRenderer 
public;PropertyLabelRendererProps
public;PropertyPopupState
beta;PropertyRecordMatchInfo
public;PropertyRenderer 
public;PropertyRendererProps 
beta;PropertyUpdatedArgs
public;PropertyValueRendererContext
public;PropertyValueRendererManager
public;PropertyView 
public;PropertyViewProps 
beta;QuantityInput: React.ForwardRefExoticComponent
beta;QuantityProps 
public;ReactDataGridColumn 
public;ResultSelector 
public;ResultSelectorProps 
public;RowItem
public;RowProps
beta;SaturationPicker({ onSaturationChange, hsv, className, style }: SaturationPickerProps): JSX.Element
beta;SaturationPickerProps 
internal;Scrubber 
internal;ScrubberProps 
beta;SelectableContent(props: SelectableContentProps): JSX.Element
beta;SelectableContentDefinition
beta;SelectableContentProps
internal;SelectionHandler
public;SelectionMode
public;SelectionModeFlags
beta;SetCurrentlyEditedNode = (currentlyEditedNode?: BeInspireTreeNode
public;SharedRendererProps
public;SharedTableNonPrimitiveValueRendererProps
internal;ShortDateTimePropertyEditor 
public;ShortDateTypeConverter 
public;ShowHideDialog
public;ShowHideDialogProps
public;ShowHideID = string | number | symbol
public;ShowHideItem
public;ShowHideMenu
public;ShowHideMenuProps
public;SignIn 
public;SignInProps 
public;SimplePropertyDataProvider 
beta;SimpleTableDataProvider 
public;SimpleTreeDataProvider 
public;SimpleTreeDataProviderHierarchy = Map
internal;SingleSelectionHandler
beta;SliderEditor 
beta;SliderPropertyEditor 
alpha;SolarDataProvider
alpha;SolarPlaybackProgressHandler = (time: Date) => void
alpha;SolarTimeline 
public;SortComparer
public;SparseArray
internal;SparseTree
beta;StandardEditorNames
public;StandardRotationChangeEvent 
public;StandardRotationChangeEventArgs
beta;StandardTypeConverterTypeNames
beta;StandardTypeNames
public;StringOperatorProcessor
public;StringTypeConverter 
public;StructPropertyValueRenderer 
public;Subscribable
public;Subscription 
public;Table 
public;TableArrayValueRenderer 
beta;TableCellContextMenuArgs
public;TableCellEditorState
public;TableCellUpdatedArgs
internal;TableColumn 
public;TableDataChangeEvent 
public;TableDataChangesListener = () => void
public;TableDataProvider
beta;TableDistinctValue
beta;TableDragDropProps
beta;TableDragDropType = {} | RowItem | TableDataProvider
beta;TableDropTargetProps
public;TableNonPrimitiveValueRenderer 
public;TableNonPrimitiveValueRendererProps 
public;TableProps 
internal;TableRow 
internal;TableRowProps 
public;TableRowStyleProvider:
public;TableSelectionTarget
public;TableSpecificValueRendererProps 
public;TableStructValueRenderer 
beta;TextareaEditor 
beta;TextareaPropertyEditor 
beta;TextEditor 
beta;ThemedEnumEditor 
beta;ThemedEnumEditorProps 
beta;ThemedEnumPropertyEditor 
internal;Timeline 
alpha;TimelineComponent 
alpha;TimelineDataProvider
alpha;TimelineDateDisplay
beta;TimelinePausePlayAction
beta;TimelinePausePlayArgs 
internal;TimelineProps 
alpha;TimelineScale
beta;ToggleEditor 
beta;TogglePropertyEditor 
internal;toNode: 
internal;toNodes: 
beta;Toolbar(props: ToolbarProps): JSX.Element
beta;ToolbarButtonItem: React.MemoExoticComponent
beta;ToolbarButtonItemProps 
beta;ToolbarItem = ActionButton | GroupButton | CustomToolbarItem
internal;ToolbarItemComponent({ item, addGroupSeparator }:
internal;ToolbarItemContext: React.Context
internal;ToolbarItemContextArgs
beta;ToolbarOpacitySetting
internal;ToolbarOverflowContextProps
beta;ToolbarPanelAlignment
internal;ToolbarPanelAlignmentHelpers
internal;ToolbarPopupContext: React.Context
internal;ToolbarPopupContextProps
beta;ToolbarProps 
beta;ToolbarWithOverflow(props: ToolbarWithOverflowProps): JSX.Element
internal;ToolbarWithOverflowDirectionContext: React.Context
beta;ToolbarWithOverflowProps 
internal;toToolbarPopupRelativePosition(expandsTo: Direction, alignment: ToolbarPanelAlignment): RelativePosition
beta;TreeActions
beta;TreeCellUpdatedArgs
beta;TreeCheckboxStateChangeEventArgs
public;TreeDataChangesListener = (nodes: Array
public;TreeDataProvider = TreeDataProviderRaw | TreeDataProviderPromise | TreeDataProviderMethod | ITreeDataProvider
public;TreeDataProviderMethod = (node?: TreeNodeItem) => Promise
public;TreeDataProviderPromise = Promise
public;TreeDataProviderRaw = ImmediatelyLoadedTreeNodeItem[]
internal;TreeDataSource 
beta;TreeDragDropProps
beta;TreeDragDropType = {} | TreeNodeItem | TreeDataProvider
beta;TreeEditingParams
internal;TreeEventDispatcher 
beta;TreeEventHandler 
beta;TreeEventHandlerParams
beta;TreeEvents
public;TreeImageLoader 
beta;TreeModel
beta;TreeModelChanges
beta;TreeModelNode
beta;TreeModelNodeEditingInfo
beta;TreeModelNodeInput
beta;TreeModelNodePlaceholder
beta;TreeModelNodeType = TreeModelNode | TreeModelNodePlaceholder | TreeModelRootNode
beta;TreeModelRootNode
beta;TreeModelSource
public;TreeNode 
beta;TreeNodeEventArgs
public;TreeNodeIcon(props: TreeNodeIconProps): JSX.Element | null
public;TreeNodeIconProps 
public;TreeNodeItem
beta;TreeNodeItemData = ImmediatelyLoadedTreeNodeItem & DelayLoadedTreeNodeItem
beta;TreeNodeLoader
beta;TreeNodeLoadResult
public;TreeNodeProps 
beta;TreeNodeRenderer: React.MemoExoticComponent
beta;TreeNodeRendererProps 
public;TreeProps 
beta;TreeRenderer 
beta;TreeRendererAttributes
beta;TreeRendererContext
beta;TreeRendererProps
beta;TreeSelectionChange
beta;TreeSelectionModificationEventArgs
beta;TreeSelectionReplacementEventArgs
public;class TypeConverter 
public;TypeConverterManager
beta;TypeEditor
public;UiComponents
public;Unsubscribable
beta;useAsyncValue: 
alpha;useDebouncedAsyncValue
beta;usePagedTreeNodeLoader
alpha;usePropertyData(props:
alpha;usePropertyGridEventHandler(props:
alpha;usePropertyGridModel(props:
alpha;usePropertyGridModelSource(props:
internal;useRenderedStringValue(record: PropertyRecord, stringValueCalculator: (record: PropertyRecord) => string | Promise
internal;useToolbarPopupContext(): ToolbarPopupContextProps
internal;useToolbarWithOverflowDirectionContext(): ToolbarOverflowContextProps
internal;useToolItemEntryContext(): ToolbarItemContextArgs
beta;useTreeEventsHandler
beta;useTreeModelSource(dataProvider: TreeDataProvider): TreeModelSource
beta;useTreeNodeLoader
beta;useVisibleTreeNodes(modelSource: TreeModelSource): VisibleTreeNodes
public;ViewClassFullNameChangedEvent 
public;ViewClassFullNameChangedEventArgs
public;ViewIdChangedEvent 
public;ViewIdChangedEventArgs
public;ViewportComponent 
public;ViewportComponentEvents
public;ViewportProps 
public;ViewRotationChangeEvent 
public;ViewRotationChangeEventArgs
public;ViewStateProp = ViewState | (() => ViewState)
alpha;VirtualizedPropertyGrid 
internal;VirtualizedPropertyGridContext
alpha;VirtualizedPropertyGridProps 
alpha;VirtualizedPropertyGridWithDataProvider(props: VirtualizedPropertyGridWithDataProviderProps): JSX.Element
alpha;VirtualizedPropertyGridWithDataProviderProps 
beta;VisibleTreeNodes 
beta;WeightEditor 
beta;WeightPickerButton 
beta;WeightPickerProps 
beta;WeightPropertyEditor 
beta;withBreadcrumbDetailsDragDrop
beta;withBreadcrumbDragDrop
beta;withDragSource: 
beta;WithDragSourceProps
beta;withDropTarget: 
beta;WithDropTargetProps
beta;withTableDragDrop