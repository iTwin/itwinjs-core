# The template defines the primary steps for creating the TypeDoc API files, gathering other md files,
# and running a step to combine everything.

parameters:
  - name: checkout
    type: string
    default: self
  - name: workingDir
    type: string
    default: $(Pipeline.Workspace)/itwinjs-core
  - name: stagingDir
    type: string
    default: $(System.ArtifactsDirectory)/staging
  - name: outputDir
    type: string
    default: $(Pipeline.Workspace)/tempDocsBuild
  - name: useCurrentAppUIDocsArtifact
    type: boolean
    default: false
  - name: useCurrentBisDocsArtifact
    type: boolean
    default: false
  - name: useCurrentPresentationDocsArtifact
    type: boolean
    default: false
  - name: shouldPublish
    type: boolean
    default: false
  - name: ignoreAudit
    type: boolean
    default: false

jobs:
  - job:
    workspace:
      clean: all
    pool:
      name: iModelTechCI
      demands: Agent.OS -equals Windows_NT

    steps:
      - checkout: ${{ parameters.checkout }}
        path: itwinjs-core
        clean: true

      - task: NodeTool@0
        displayName: Use Node 18
        inputs:
          versionSpec: 18.x
          checkLatest: true

      - script: |
          git config --local user.email imodeljs-admin@users.noreply.github.com
          git config --local user.name imodeljs-admin
        displayName: Setup git config

      - script: node common/scripts/install-run-rush.js install
        displayName: rush install
        workingDirectory: ${{ parameters.workingDir }}

      - script: node common/scripts/install-run-rush.js audit
        displayName: rush audit
        workingDirectory: ${{ parameters.workingDir }}
        condition: and(succeeded(), eq('${{ parameters.ignoreAudit }}', false))

      - script: node common/scripts/install-run-rush.js build:ci --to-version-policy prerelease-monorepo-lockStep
        displayName: rush build
        workingDirectory: ${{ parameters.workingDir }}
        env:
          RUSH_BUILD_CACHE_CREDENTIAL: $(RushBuildCacheSAS)
          RUSH_BUILD_CACHE_ENABLED: 1

      - script: node common/scripts/install-run-rush.js docs
        displayName: rush docs
        workingDirectory: ${{ parameters.workingDir }}

      # Gathers all the pieces to run BeMetalsmith
      - template: ../templates/gather-docs.yaml
        parameters:
          workingDir: ${{ parameters.workingDir }}
          stagingDir: ${{ parameters.stagingDir }}
          useCurrentAppUIDocsArtifact: ${{ parameters.useCurrentAppUIDocsArtifact }}
          useCurrentBisDocsArtifact: ${{ parameters.useCurrentBisDocsArtifact }}
          useCurrentPresentationDocsArtifact: ${{ parameters.useCurrentPresentationDocsArtifact }}

      # Currently BeMetalsmith is an internal only tool
      - script: npm install @bentley/bemetalsmith@4.3.x --legacy-peer-deps
        displayName: Install BeMetalsmith
        workingDirectory: ${{ parameters.workingDir }}

      - script: "./node_modules/.bin/bmsBuild --strictLinkChecking --topicsMustHaveDesc --source ${{ parameters.stagingDir }} --destination ${{ parameters.outputDir }}/public_build --siteTitle iTwin.js"
        displayName: Run bmsBuild
        workingDirectory: ${{ parameters.workingDir }}

      # Update the .updated.json file after the bmsBuild
      - publish: ${{ parameters.stagingDir }}/config/.updated.json
        artifact: .updated.json
        displayName: Publish Pipeline Artifact - .updated.json
        condition: and(succeeded(), eq('${{ parameters.shouldPublish }}', true))

      - publish: ${{ parameters.outputDir }}
        artifact: DocsBuild
        displayName: Publish Pipeline Artifact - DocsBuild
        condition: and(succeeded(), eq('${{ parameters.shouldPublish }}', true))

      - powershell: |
          $commitMsg = "$(Build.SourceVersionMessage)"
          if ($commitMsg -match '^(\d+.\d+.\d+)(-dev.\d+)?$') {
            Write-Host `'$commitMsg`'` is a version bump
            Write-Host '##vso[build.addbuildtag]iTwinJsDocsRelease'
          } else {
            Write-Host `'$commitMsg`'` is not a version bump
          }
        displayName: Tag release if version bump
        condition: and(succeeded(), eq('${{ parameters.shouldPublish }}', true))
