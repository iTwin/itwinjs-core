steps:
  - bash: |
      newPackageVersion=$(cat common/config/rush/version-policies.json | grep \"version\": | awk -F'"' '{split($4,a,"-"); print a[1]}')
      sed -i "s/\(addVersion: \"\)[^\"]*/\1$newPackageVersion/" common/config/eslint/eslint.config.deprecation-policy.js
      echo "##vso[task.setvariable variable=version;isOutput=true]$newPackageVersion"
    displayName: Change addVersion in ESLint config to current version
    name: getNewVersion

  - bash: node common/scripts/install-run-rush.js lint-deprecation
    displayName: rush lint-deprecation

  - bash: git add .
    displayName: git add .

  - bash: |
      git commit -m "Apply deprecation date rule for v$(getNewVersion.version)"
    displayName: Commit deprecation comment changes to release branch

  - bash: |
      deprecationDateCommitHash=$(git log -1 --format=%H)
      echo "##vso[task.setvariable variable=hash;isOutput=true]$deprecationDateCommitHash"
    displayName: Save SHA-1 hash of the commit
    name: deprecationCommit

  - bash: |
      git fetch https://$(GITHUBTOKEN)@github.com/iTwin/itwinjs-core master:master
      git checkout master
    displayName: Checkout to master

  - bash: |
      commitHash=$(deprecationCommit.hash)
      echo "Attempting to cherry-pick commit: $commitHash"
      if git cherry-pick $commitHash; then
        git push https://$(GITHUBTOKEN)@github.com/iTwin/itwinjs-core HEAD:master
        echo "Successfully applied deprecation comment updates to master"
      else
        # Merge conflicts: Create branch, set up PR for manual resolution.
        echo "Cherry-pick operation on master failed (most likely due to merge conflicts). Manual intervention required"
        git cherry-pick --abort

        # Create and checkout to conflict handling branch
        conflictBranchName="cherry-pick-conflict-$(date +%y%m%d%H%m%s)"
        echo "Creating new branch '$conflictBranchName' for manual resolution"
        git checkout -b $conflictBranchName

        # Cherry-pick changes onto conflict handling branch
        git cherry-pick $commitHash

        # Commit and push all changes
        git add .
        git commit -m "Add deprecation rule changes with all merge conflicts"
        git push --set-upstream https://$(GITHUBTOKEN)@github.com/iTwin/itwinjs-core $conflictBranchName
        echo "Now manually fix conflicts on branch '$conflictBranchName' and merge changes into master"

        # Create a PR with new conflict branch
        gh pr create --title "Merge deprecation comment changes into master" --body "This PR contains all changes after running lint-deprecation ESLint rule and merging with master. Manual intervention required: solve conflicts in this branch and merge PR into master. This happened because deprecation comments in master and in release branch could not be merged automatically." --draft --head $conflictBranchName
      fi
    displayName: Perform cherry-pick operation for deprecation changes
    continueOnError: true
    env:
      GH_TOKEN: $(GH_TOKEN)

  - bash: git checkout $(deprecationCommit.hash)
    displayName: Checkout back to branch that ran the pipeline
